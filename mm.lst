ca65 V2.9.2 - (C) Copyright 1998-2000 Ullrich von Bassewitz
Main file   : mm.asm
Current file: mm.asm

000000r 1               ;----------------------------------------------
000000r 1               ;Manic Miner
000000r 1               ; Atom version by Kees van Oss  2014
000000r 1               ;----------------------------------------------
000000r 1               	.DEFINE asm_code $0500
000000r 1               	.DEFINE header   1		; Header Wouter Ras emulator
000000r 1               	.DEFINE filenaam "MM"
000000r 1               
000000r 1               .org asm_code-22*header
0004EA  1               
0004EA  1               .IF header
0004EA  1               ;********************************************************************
0004EA  1               ; ATM Header for Atom emulator Wouter Ras
0004EA  1               
0004EA  1               name_start:
0004EA  1  4D 4D        	.byte filenaam			; Filename
0004EC  1               name_end:
0004EC  1  00 00 00 00  	.repeat 16-name_end+name_start	; Fill with 0 till 16 chars
0004F0  1  00 00 00 00  
0004F4  1  00 00 00 00  
0004FA  1               	  .byte $0
0004FA  1               	.endrep
0004FA  1               
0004FA  1  00 05        	.word asm_code			; 2 bytes startaddress
0004FC  1  98 32        	.word exec			; 2 bytes linkaddress
0004FE  1  00 57        	.word eind_asm-start_asm	; 2 bytes filelength
000500  1               
000500  1               ;********************************************************************
000500  1               .ENDIF
000500  1               
000500  1               
000500  1               exec  = L3190
000500  1               
000500  1               start_asm:
000500  1               	.include "mm.inc"
000500  1               	.include "controls.inc"
000500  2               ; User equates
000500  2               ;
000500  2               OSWRCH      = PRINTCHAR
000500  2               OSBYTE      = GET_CHR
000500  2               ;
000500  2               ; Code equates
000500  2               ;
000500  2               
000500  2               debug=0		; Force no live lost and cheatmode on
000500  2               
000500  2               L0003       = $0003
000500  2               
000500  2               L003F       = $003F
000500  2               L0040       = $0040
000500  2               ;L0050       = $0050
000500  2               ;L0053       = $0053
000500  2               
000500  2               L005A       = $005A
000500  2               
000500  2               L005B	= $005B
000500  2               L005C	= $005C
000500  2               
000500  2               ;L0060       = $0060
000500  2               
000500  2               L0070       = $0070
000500  2               L0071       = $0071
000500  2               L0072       = $0072
000500  2               L0073       = $0073
000500  2               L0074       = $0074
000500  2               L0075       = $0075
000500  2               L0076       = $0076
000500  2               L0077       = $0077
000500  2               L0078       = $0078
000500  2               L0079       = $0079
000500  2               L007A       = $007A
000500  2               
000500  2               L0080       = $0080	; Current level
000500  2               L0081       = $0081
000500  2               L0082       = $0082
000500  2               L0083       = $0083
000500  2               L0084       = $0084
000500  2               L0085       = $0085
000500  2               L0086       = $0086
000500  2               L008A       = $008A
000500  2               L008B       = $008B
000500  2               L008C       = $008C
000500  2               L008D       = $008D
000500  2               L008E       = $008E
000500  2               L008F       = $008F
000500  2               L0090       = $0090
000500  2               
000500  2               L009F       = $009F
000500  2               
000500  2               L00EC       = $00EC
000500  2               L00ED       = $00ED
000500  2               
000500  2               L0318       = $0318	; Current text cursor X
000500  2               L0319       = $0319	; Current text cursor Y
000500  2               
000500  2               L0400       = $0400
000500  2               L0440       = L0400+$20
000500  2               L0480       = L0400+$40
000500  2               L04C0       = L0400+$60
000500  2               
000500  2               L0FCC       = L0FCB+1
000500  2               L0FCD       = L0FCB+2
000500  2               
000500  2               L1933       = L1932+1
000500  2               L1934       = L1932+2
000500  2               L1938       = L1937+1
000500  2               L194F       = L194E+1
000500  2               L196B       = L196A+1
000500  2               L196C       = L196A+2
000500  2               L1AE9       = L1AE8+1
000500  2               L1B2A       = L1B29+1
000500  2               L1C6B       = L1C6A+1
000500  2               L1C6C       = L1C6A+2
000500  2               L1CC5       = L1CC4+1
000500  2               L1CC6       = L1CC4+2
000500  2               L1D97       = L1D96+1
000500  2               L1D98       = L1D96+2
000500  2               L1E04       = L1E03+1
000500  2               L1E05       = L1E03+2
000500  2               L2278       = L2277+1
000500  2               L2279       = L2277+2
000500  2               L2601       = L2600+1
000500  2               L2602       = L2600+2
000500  2               L2693       = L2690+3
000500  2               L2694       = L2690+4
000500  2               L2695       = L2690+5
000500  2               L2696       = L2690+6
000500  2               L283B       = L283A+1
000500  2               L283C       = L283A+2
000500  2               L28B3       = L28B2+1
000500  2               L28B4       = L28B2+2
000500  2               L2924       = L2923+1
000500  2               L2925       = L2923+2
000500  2               L2995       = L2994+1
000500  2               L2A62       = L2A61+1
000500  2               L2A63       = L2A61+2
000500  2               L2C00       = L2BFF+1
000500  2               L2EED       = L2EEC+1
000500  2               L2EEE       = L2EEC+2
000500  2               L2FF8       = L2FF7+1
000500  2               L2FF9       = L2FF7+2
000500  2               
000500  2               ;L6200       = $6200
000500  2               ;L62C3       = $62C3
000500  2               ;L62E3       = $62E3
000500  2               ;L62E9       = $62E9
000500  2               ;L646D       = $646D
000500  2               ;L673C       = $673C
000500  2               ;L67BA       = $67BA
000500  2               ;L67BE       = $67BE
000500  2               ;L67D6       = $67D6
000500  2               ;L68AC       = $68AC
000500  2               ;L68DF       = $68DF
000500  2               ;L6B7C       = $6B7C
000500  2               ;L6B7F       = $6B7F
000500  2               ;L6B83       = $6B83
000500  2               ;L6BA0       = $6BA0
000500  2               ;L6BDF       = $6BDF
000500  2               ;L6BE0       = $6BE0
000500  2               ;L6BE7       = $6BE7
000500  2               ;L6BE8       = $6BE8
000500  2               ;L6BEF       = $6BEF
000500  2               ;L6BF0       = $6BF0
000500  2               ;L6BF7       = $6BF7
000500  2               ;L6BF8       = $6BF8
000500  2               
000500  2               ;L7B00       = $7B00
000500  2               ;L7E80       = $7E80
000500  2               ;L7EED       = $7EED
000500  2               
000500  2               LFFFF       = $FFFF
000500  2               
000500  2               ;------------------------------------------------
000500  2               ; Sprites for Manic Miner
000500  2               ;------------------------------------------------
000500  2               
000500  2               ; Miner facing right standing on left pos
000500  2               
000500  2               L0500:
000500  2  06 3E 7C 34  	.byte $06,$3e,$7c,$34,$3e,$3c,$18,$3c
000504  2  3E 3C 18 3C  
000508  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00050C  2  00 00 00 00  
000510  2  7E 7E F7 FB  	.byte $7e,$7e,$f7,$fb,$3c,$76,$6e,$77
000514  2  3C 76 6E 77  
000518  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00051C  2  00 00 00 00  
000520  2               
000520  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000524  2  00 00 00 00  
000528  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00052C  2  00 00 00 00  
000530  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000534  2  00 00 00 00  
000538  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00053C  2  00 00 00 00  
000540  2               
000540  2               ; Miner facing right resting
000540  2               
000540  2               L0540:
000540  2  01 0F 1F 0D  	.byte $01,$0f,$1f,$0d,$0f,$0f,$06,$0f
000544  2  0F 0F 06 0F  
000548  2  80 80 00 00  	.byte $80,$80,$00,$00,$80,$00,$00,$00
00054C  2  80 00 00 00  
000550  2  1B 1B 1B 1D  	.byte $1b,$1b,$1b,$1d,$0f,$06,$06,$07
000554  2  0F 06 06 07  
000558  2  80 80 80 80  	.byte $80,$80,$80,$80,$00,$00,$00,$00
00055C  2  00 00 00 00  
000560  2               
000560  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000564  2  00 00 00 00  
000568  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00056C  2  00 00 00 00  
000570  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000574  2  00 00 00 00  
000578  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00057C  2  00 00 00 00  
000580  2               
000580  2               ; Miner facing right standing
000580  2               
000580  2               L0580:
000580  2  00 03 07 03  	.byte $00,$03,$07,$03,$03,$03,$01,$03
000584  2  03 03 01 03  
000588  2  60 E0 C0 40  	.byte $60,$e0,$c0,$40,$e0,$c0,$80,$c0
00058C  2  E0 C0 80 C0  
000590  2  07 07 0F 0F  	.byte $07,$07,$0f,$0f,$03,$07,$06,$07
000594  2  03 07 06 07  
000598  2  E0 E0 70 B0  	.byte $e0,$e0,$70,$b0,$c0,$60,$e0,$70
00059C  2  C0 60 E0 70  
0005A0  2               
0005A0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005A4  2  00 00 00 00  
0005A8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005AC  2  00 00 00 00  
0005B0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005B4  2  00 00 00 00  
0005B8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005BC  2  00 00 00 00  
0005C0  2               
0005C0  2               ; Miner facing right walking
0005C0  2               
0005C0  2               L05C0:
0005C0  2  00 00 01 00  	.byte $00,$00,$01,$00,$00,$00,$00,$00
0005C4  2  00 00 00 00  
0005C8  2  18 F8 F0 D0  	.byte $18,$f8,$f0,$d0,$f8,$f0,$60,$f0
0005CC  2  F8 F0 60 F0  
0005D0  2  01 03 07 06  	.byte $01,$03,$07,$06,$00,$01,$03,$03
0005D4  2  00 01 03 03  
0005D8  2  F8 FC FE F6  	.byte $f8,$fc,$fe,$f6,$f8,$da,$0e,$84
0005DC  2  F8 DA 0E 84  
0005E0  2               
0005E0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005E4  2  00 00 00 00  
0005E8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005EC  2  00 00 00 00  
0005F0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005F4  2  00 00 00 00  
0005F8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0005FC  2  00 00 00 00  
000600  2               
000600  2               ; Miner facing left standing on right pos
000600  2               
000600  2               L0600:
000600  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000604  2  00 00 00 00  
000608  2  60 7C 3E 2C  	.byte $60,$7C,$3E,$2C,$7C,$3C,$18,$3C
00060C  2  7C 3C 18 3C  
000610  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000614  2  00 00 00 00  
000618  2  7E 7E EF DF  	.byte $7E,$7E,$EF,$DF,$3C,$6E,$76,$EE
00061C  2  3C 6E 76 EE  
000620  2               
000620  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000624  2  00 00 00 00  
000628  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00062C  2  00 00 00 00  
000630  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000634  2  00 00 00 00  
000638  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00063C  2  00 00 00 00  
000640  2               
000640  2               ; Miner facing left resting
000640  2               
000640  2               L0640:
000640  2  01 01 00 00  	.byte $01,$01,$00,$00,$01,$00,$00,$00
000644  2  01 00 00 00  
000648  2  80 F0 F8 B0  	.byte $80,$f0,$f8,$b0,$f0,$f0,$60,$f0
00064C  2  F0 F0 60 F0  
000650  2  01 01 01 01  	.byte $01,$01,$01,$01,$00,$00,$00,$00
000654  2  00 00 00 00  
000658  2  D8 D8 D8 B8  	.byte $d8,$d8,$d8,$b8,$f0,$60,$60,$e0
00065C  2  F0 60 60 E0  
000660  2               
000660  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000664  2  00 00 00 00  
000668  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00066C  2  00 00 00 00  
000670  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000674  2  00 00 00 00  
000678  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
00067C  2  00 00 00 00  
000680  2               
000680  2               ; Miner facing left standing
000680  2               
000680  2               L0680:
000680  2  06 07 03 02  	.byte $06,$07,$03,$02,$07,$03,$01,$03
000684  2  07 03 01 03  
000688  2  00 C0 E0 C0  	.byte $00,$c0,$e0,$c0,$c0,$c0,$80,$c0
00068C  2  C0 C0 80 C0  
000690  2  07 07 0E 0D  	.byte $07,$07,$0e,$0d,$03,$06,$07,$0e
000694  2  03 06 07 0E  
000698  2  E0 E0 F0 F0  	.byte $e0,$e0,$f0,$f0,$c0,$e0,$60,$e0
00069C  2  C0 E0 60 E0  
0006A0  2               
0006A0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006A4  2  00 00 00 00  
0006A8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006AC  2  00 00 00 00  
0006B0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006B4  2  00 00 00 00  
0006B8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006BC  2  00 00 00 00  
0006C0  2               
0006C0  2               ; Miner facing left walking
0006C0  2               
0006C0  2               L06C0:
0006C0  2  18 1F 0F 0B  	.byte $18,$1f,$0f,$0b,$1f,$0f,$06,$0f
0006C4  2  1F 0F 06 0F  
0006C8  2  00 00 80 00  	.byte $00,$00,$80,$00,$00,$00,$00,$00
0006CC  2  00 00 00 00  
0006D0  2  1F 3F 7F 6F  	.byte $1f,$3f,$7f,$6f,$1f,$5b,$70,$21
0006D4  2  1F 5B 70 21  
0006D8  2  80 C0 E0 60  	.byte $80,$c0,$e0,$60,$00,$80,$c0,$c0
0006DC  2  00 80 C0 C0  
0006E0  2               
0006E0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006E4  2  00 00 00 00  
0006E8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006EC  2  00 00 00 00  
0006F0  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006F4  2  00 00 00 00  
0006F8  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
0006FC  2  00 00 00 00  
000700  2               
000700  2               ;------------------------------------------------
000700  2               ; Manic Miner (c) text intro screen
000700  2               ;------------------------------------------------
000700  2               
000700  2  00 00 00 03  L0700:      .byte $00,$00,$00,$03,$04,$04,$04,$03
000704  2  04 04 04 03  
000708  2  07 03 06 0C              .byte $07,$03,$06,$0C,$98,$30,$60,$C0
00070C  2  98 30 60 C0  
000710  2  8E 9C BC EC              .byte $8E,$9C,$BC,$EC,$CC,$0C,$0C,$1E
000714  2  CC 0C 0C 1E  
000718  2  00 0E 1B 31              .byte $00,$0E,$1B,$31,$31,$7F,$60,$F1
00071C  2  31 7F 60 F1  
000720  2  00 0E 07 87              .byte $00,$0E,$07,$87,$86,$C6,$C6,$EF
000724  2  86 C6 C6 EF  
000728  2  00 3D 18 98              .byte $00,$3D,$18,$98,$D8,$78,$38,$19
00072C  2  D8 78 38 19  
000730  2  00 E1 C3 C6              .byte $00,$E1,$C3,$C6,$C6,$C6,$C3,$E1
000734  2  C6 C6 C3 E1  
000738  2  00 F0 18 00              .byte $00,$F0,$18,$00,$00,$00,$18,$F0
00073C  2  00 00 18 F0  
000740  2  00 01 01 00              .byte $00,$01,$01,$00,$00,$00,$00,$00
000744  2  00 00 00 00  
000748  2  FE 0F 2D CC              .byte $FE,$0F,$2D,$CC,$0C,$0C,$0C,$1E
00074C  2  0C 0C 0C 1E  
000750  2  1E 3C EC CC              .byte $1E,$3C,$EC,$CC,$0C,$0C,$0C,$1E
000754  2  0C 0C 0C 1E  
000758  2  00 F7 63 63              .byte $00,$F7,$63,$63,$63,$63,$63,$F7
00075C  2  63 63 63 F7  
000760  2  00 1E 8C CC              .byte $00,$1E,$8C,$CC,$6C,$3C,$1C,$8C
000764  2  6C 3C 1C 8C  
000768  2  00 FF 63 68              .byte $00,$FF,$63,$68,$78,$68,$63,$FF
00076C  2  78 68 63 FF  
000770  2  00 7F 30 30              .byte $00,$7F,$30,$30,$3F,$31,$30,$78
000774  2  3F 31 30 78  
000778  2  00 80 C0 C0              .byte $00,$80,$C0,$C0,$80,$80,$C8,$70
00077C  2  80 80 C8 70  
000780  2  3C 42 99 A1              .byte $3C,$42,$99,$A1,$A1,$99,$42,$3C
000784  2  A1 99 42 3C  
000788  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00078C  2  00 00 00 00  
000790  2               
000790  2               ;------------------------------------------------
000790  2               ; Plot logo data intro screen
000790  2               ;------------------------------------------------
000790  2               
000790  2  FE 01 04 19  L0790:      .byte $FE,$01,$04,$19,$A0,$05,$7D,$75
000794  2  A0 05 7D 75  
000798  2  55 19 AD 55              .byte $55,$19,$AD,$55,$70,$87,$04,$7D
00079C  2  70 87 04 7D  
0007A0  2  75 05 70 87              .byte $75,$05,$70,$87,$55,$7D,$C6,$55
0007A4  2  55 7D C6 55  
0007A8  2  70 C0 FE 02              .byte $70,$C0,$FE,$02,$04,$7D,$75,$05
0007AC  2  04 7D 75 05  
0007B0  2  89 81 55 7D              .byte $89,$81,$55,$7D,$C6,$55,$89,$D9
0007B4  2  C6 55 89 D9  
0007B8  2  04 89 D9 05              .byte $04,$89,$D9,$05,$7D,$C6,$55,$38
0007BC  2  7D C6 55 38  
0007C0  2  AD 55 44 A7              .byte $AD,$55,$44,$A7,$FE,$03,$04,$70
0007C4  2  FE 03 04 70  
0007C8  2  BF 05 70 94              .byte $BF,$05,$70,$94,$05,$44,$A7,$05
0007CC  2  05 44 A7 05  
0007D0  2  7D C6 05 7D              .byte $7D,$C6,$05,$7D,$75,$05,$19,$A0
0007D4  2  75 05 19 A0  
0007D8  2  05 19 AD 05              .byte $05,$19,$AD,$05,$7D,$E5,$05,$89
0007DC  2  7D E5 05 89  
0007E0  2  D9 05 89 81              .byte $D9,$05,$89,$81,$05,$7D,$75,$04
0007E4  2  05 7D 75 04  
0007E8  2  89 D9 05 38              .byte $89,$D9,$05,$38,$AD,$05,$70,$94
0007EC  2  AD 05 70 94  
0007F0  2  05 70 87 05              .byte $05,$70,$87,$05,$19,$AD,$FF,$A9
0007F4  2  19 AD FF A9  
0007F8  2  FF 8D 7C 6B              .byte $FF,$8D,$7C,$6B,$4C,$E8,$1C,$00
0007FC  2  4C E8 1C 00  
000800  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000804  2  00 00 00 00  
000808  2               
000808  2               ;------------------------------------------------
000808  2               L0800:
000808  2  C0 C0 C0 C0              .byte $C0,$C0,$C0,$C0,$04,$04,$04,$04
00080C  2  04 04 04 04  
000810  2  00 64 00 00              .byte $00,$64,$00,$00,$00,$00,$00,$00
000814  2  00 00 00 00  
000818  2  00 1F 00 00              .byte $00,$1F,$00,$00,$00,$00,$00,$00
00081C  2  00 00 00 00  
000820  2  00 05 00 00              .byte $00,$05,$00,$00,$00,$30,$00,$00
000824  2  00 30 00 00  
000828  2  00 01 00 00              .byte $00,$01,$00,$00,$00,$00,$00,$00
00082C  2  00 00 00 00  
000830  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$8A,$00,$00
000834  2  00 8A 00 00  
000838  2  FF FD C1 00              .byte $FF,$FD,$C1,$00,$00,$F0,$00,$0E
00083C  2  00 F0 00 0E  
000840  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000844  2  00 00 00 00  
000848  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00084C  2  00 00 00 00  
000850  2  01 01 00 64              .byte $01,$01,$00,$64,$01,$08,$64,$01
000854  2  01 08 64 01  
000858  2  10 64 01 18              .byte $10,$64,$01,$18,$64,$01,$00,$F8
00085C  2  64 01 00 F8  
000860  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000864  2  00 00 00 00  
000868  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00086C  2  00 00 00 00  
000870  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000874  2  00 00 00 00  
000878  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00087C  2  00 00 00 00  
000880  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000884  2  00 00 00 00  
000888  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00088C  2  00 00 00 00  
000890  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000894  2  00 00 00 00  
000898  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00089C  2  00 00 00 00  
0008A0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0008A4  2  00 00 00 00  
0008A8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0008AC  2  00 00 00 00  
0008B0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0008B4  2  00 00 00 00  
0008B8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0008BC  2  00 00 00 00  
0008C0  2  01 78 00 00              .byte $01,$78,$00,$00,$1E,$00,$00,$7E
0008C4  2  1E 00 00 7E  
0008C8  2  FF 00 FF 7E              .byte $FF,$00,$FF,$7E,$5A,$00,$00,$00
0008CC  2  5A 00 00 00  
0008D0  2  01 00 00 00              .byte $01,$00,$00,$00,$01,$01,$01,$7F
0008D4  2  01 01 01 7F  
0008D8  2  FF FF FE 7E              .byte $FF,$FF,$FE,$7E,$01,$00,$00,$00
0008DC  2  01 00 00 00  
0008E0  2  05 10 00 00              .byte $05,$10,$00,$00,$07,$00,$00,$20
0008E4  2  07 00 00 20  
0008E8  2  F6 FE FE 7E              .byte $F6,$FE,$FE,$7E,$64,$00,$00,$00
0008EC  2  64 00 00 00  
0008F0  2  01 02 00 00              .byte $01,$02,$00,$00,$64,$00,$00,$7E
0008F4  2  64 00 00 7E  
0008F8  2  00 00 FE 7E              .byte $00,$00,$FE,$7E,$7E,$00,$00,$00
0008FC  2  7E 00 00 00  
000900  2               
000900  2               ;------------------------------------------------
000900  2               ; Characters block 1
000900  2               ;------------------------------------------------
000900  2               
000900  2  07 0F 09 09  L0900:      .byte $07,$0F,$09,$09,$0F,$05,$06,$03
000904  2  0F 05 06 03  
000908  2  E0 F0 90 90              .byte $E0,$F0,$90,$90,$F0,$A0,$60,$C0
00090C  2  F0 A0 60 C0  
000910  2  71 F8 FE 0D              .byte $71,$F8,$FE,$0D,$73,$FF,$FE,$7C
000914  2  73 FF FE 7C  
000918  2  BE 7F FF CE              .byte $BE,$7F,$FF,$CE,$B0,$7F,$1F,$0E
00091C  2  B0 7F 1F 0E  
000920  2  FF 80 BF BF              .byte $FF,$80,$BF,$BF,$B7,$95,$A3,$80
000924  2  B7 95 A3 80  
000928  2  FF 01 FD FD              .byte $FF,$01,$FD,$FD,$FD,$FD,$FD,$C5
00092C  2  FD FD FD C5  
000930  2  A3 95 B7 BF              .byte $A3,$95,$B7,$BF,$BF,$BF,$80,$FF
000934  2  BF BF 80 FF  
000938  2  B9 FD FD FD              .byte $B9,$FD,$FD,$FD,$FD,$FD,$01,$FF
00093C  2  FD FD 01 FF  
000940  2  FF 44 99 22              .byte $FF,$44,$99,$22,$22,$99,$44,$44
000944  2  22 99 44 44  
000948  2  FF 44 99 22              .byte $FF,$44,$99,$22,$22,$99,$44,$44
00094C  2  22 99 44 44  
000950  2  99 22 22 99              .byte $99,$22,$22,$99,$44,$44,$99,$FF
000954  2  44 44 99 FF  
000958  2  99 22 22 99              .byte $99,$22,$22,$99,$44,$44,$99,$FF
00095C  2  44 44 99 FF  
000960  2  FF 88 AA AA              .byte $FF,$88,$AA,$AA,$88,$DD,$D1,$D5
000964  2  88 DD D1 D5  
000968  2  FF 9F B1 B5              .byte $FF,$9F,$B1,$B5,$85,$39,$7D,$55
00096C  2  85 39 7D 55  
000970  2  D5 D1 DD 8D              .byte $D5,$D1,$DD,$8D,$A8,$AA,$88,$FF
000974  2  A8 AA 88 FF  
000978  2  45 7D BB 83              .byte $45,$7D,$BB,$83,$AB,$AB,$89,$FF
00097C  2  AB AB 89 FF  
000980  2  FF 99 BB FF  L0980:      .byte $FF,$99,$BB,$FF,$FF,$99,$BB,$FF
000984  2  FF 99 BB FF  
000988  2  88 44 22 11              .byte $88,$44,$22,$11,$88,$44,$22,$11
00098C  2  88 44 22 11  
000990  2  FF 81 81 81              .byte $FF,$81,$81,$81,$81,$81,$81,$FF
000994  2  81 81 81 FF  
000998  2  FF 92 92 92  L0998:      .byte $FF,$92,$92,$92,$92,$92,$92,$92
00099C  2  92 92 92 92  
0009A0  2  92 92 92 92              .byte $92,$92,$92,$92,$92,$92,$92,$FF
0009A4  2  92 92 92 FF  
0009A8  2  FF 81 81 81              .byte $FF,$81,$81,$81,$8F,$8F,$8C,$FC
0009AC  2  8F 8F 8C FC  
0009B0  2  FC 8C 8F 8F              .byte $FC,$8C,$8F,$8F,$81,$81,$81,$FF
0009B4  2  81 81 81 FF  
0009B8  2  FF 80 80 C0              .byte $FF,$80,$80,$C0,$A0,$D0,$A8,$94
0009BC  2  A0 D0 A8 94  
0009C0  2  8A C5 A2 91              .byte $8A,$C5,$A2,$91,$89,$92,$A4,$FF
0009C4  2  89 92 A4 FF  
0009C8  2  FF 81 82 84              .byte $FF,$81,$82,$84,$88,$90,$A1,$C3
0009CC  2  88 90 A1 C3  
0009D0  2  C3 A1 90 88              .byte $C3,$A1,$90,$88,$84,$82,$81,$FF
0009D4  2  84 82 81 FF  
0009D8  2  FF 80 80 8F              .byte $FF,$80,$80,$8F,$8F,$8F,$8C,$8C
0009DC  2  8F 8F 8C 8C  
0009E0  2  8C 8C 8F 8F              .byte $8C,$8C,$8F,$8F,$8F,$80,$80,$FF
0009E4  2  8F 80 80 FF  
0009E8  2  FF 80 80 80              .byte $FF,$80,$80,$80,$87,$88,$90,$91
0009EC  2  87 88 90 91  
0009F0  2  91 90 88 87              .byte $91,$90,$88,$87,$80,$80,$80,$FF
0009F4  2  80 80 80 FF  
0009F8  2  FF 80 80 FF              .byte $FF,$80,$80,$FF,$FF,$80,$80,$FF
0009FC  2  FF 80 80 FF  
000A00  2               
000A00  2               ;------------------------------------------------
000A00  2               ; Characters block 2
000A00  2               ;------------------------------------------------
000A00  2               
000A00  2  00 00 00 00  	.repeat 256
000A04  2  00 00 00 00  
000A08  2  00 00 00 00  
000B00  2               	  .byte 00
000B00  2               	.endrep
000B00  2               
000B00  2  FF 80 80 FF  L0A00:      .byte $FF,$80,$80,$FF,$FF,$80,$80,$FF
000B04  2  FF 80 80 FF  
000B08  2  FF 80 BF A0              .byte $FF,$80,$BF,$A0,$AF,$A8,$AB,$AA
000B0C  2  AF A8 AB AA  
000B10  2  AA AA AA AA              .byte $AA,$AA,$AA,$AA,$AA,$AA,$AA,$FF
000B14  2  AA AA AA FF  
000B18  2  FF 80 80 9F              .byte $FF,$80,$80,$9F,$90,$96,$96,$96
000B1C  2  90 96 96 96  
000B20  2  96 96 96 90              .byte $96,$96,$96,$90,$9F,$80,$80,$FF
000B24  2  9F 80 80 FF  
000B28  2  FF 80 BF A0              .byte $FF,$80,$BF,$A0,$AF,$A8,$AB,$AA
000B2C  2  AF A8 AB AA  
000B30  2  AA AB A8 AF              .byte $AA,$AB,$A8,$AF,$A0,$BF,$80,$FF
000B34  2  A0 BF 80 FF  
000B38  2  0F 1F 3F 3C              .byte $0F,$1F,$3F,$3C,$38,$38,$38,$38
000B3C  2  38 38 38 38  
000B40  2  38 1C 0E 0E              .byte $38,$1C,$0E,$0E,$CE,$FE,$FC,$00
000B44  2  CE FE FC 00  
000B48  2  38 1C 0E 0E              .byte $38,$1C,$0E,$0E,$CE,$FE,$FC,$00
000B4C  2  CE FE FC 00  
000B50  2  1C 38 70 70              .byte $1C,$38,$70,$70,$73,$7F,$3F,$00
000B54  2  73 7F 3F 00  
000B58  2  44 28 54 31  L0A58:      .byte $44,$28,$54,$31,$95,$76,$18,$10
000B5C  2  95 76 18 10  
000B60  2  7E 3C 1C 18  L0A60:      .byte $7E,$3C,$1C,$18,$18,$08,$08,$00
000B64  2  18 08 08 00  
000B68  2  FF FE 7E 4C              .byte $FF,$FE,$7E,$4C,$4C,$08,$08,$00
000B6C  2  4C 08 08 00  
000B70  2  08 6B 1C 6B              .byte $08,$6B,$1C,$6B,$1C,$22,$63,$14
000B74  2  1C 22 63 14  
000B78  2  63 14 1C 6B              .byte $63,$14,$1C,$6B,$1C,$22,$63,$14
000B7C  2  1C 22 63 14  
000B80  2  3C 18 BD E7              .byte $3C,$18,$BD,$E7,$E7,$BD,$18,$3C
000B84  2  E7 BD 18 3C  
000B88  2  AA 44 38 D6              .byte $AA,$44,$38,$D6,$38,$7C,$AA,$28
000B8C  2  38 7C AA 28  
000B90  2  48 AA 5D 0A              .byte $48,$AA,$5D,$0A,$78,$AE,$A9,$47
000B94  2  78 AE A9 47  
000B98  2  44 44 44 44              .byte $44,$44,$44,$44,$66,$EE,$EE,$FF
000B9C  2  66 EE EE FF  
000BA0  2  C3 66 3C 24              .byte $C3,$66,$3C,$24,$24,$3C,$66,$C3
000BA4  2  24 3C 66 C3  
000BA8  2  08 08 08 08              .byte $08,$08,$08,$08,$08,$08,$08,$08
000BAC  2  08 08 08 08  
000BB0  2  30 48 88 90  L0AB0:      .byte $30,$48,$88,$90,$68,$04,$0A,$04
000BB4  2  68 04 0A 04  
000BB8  2  50 A8 54 A8              .byte $50,$A8,$54,$A8,$58,$24,$02,$01
000BBC  2  58 24 02 01  
000BC0  2  1F 23 47 FF              .byte $1F,$23,$47,$FF,$8F,$8E,$8C,$F8
000BC4  2  8F 8E 8C F8  
000BC8  2  C0 EC 72 28              .byte $C0,$EC,$72,$28,$54,$4A,$07,$00
000BCC  2  54 4A 07 00  
000BD0  2  08 08 7E BF              .byte $08,$08,$7E,$BF,$9F,$8F,$C3,$7E
000BD4  2  9F 8F C3 7E  
000BD8  2  18 66 42 D9              .byte $18,$66,$42,$D9,$C9,$62,$7E,$18
000BDC  2  C9 62 7E 18  
000BE0  2  3C 5A 95 D5              .byte $3C,$5A,$95,$D5,$D5,$D5,$5A,$3C
000BE4  2  D5 D5 5A 3C  
000BE8  2  AA AA FE FE              .byte $AA,$AA,$FE,$FE,$FE,$FE,$AA,$AA
000BEC  2  FE FE AA AA  
000BF0  2  7E 3C 66 DF              .byte $7E,$3C,$66,$DF,$8F,$DF,$83,$7E
000BF4  2  8F DF 83 7E  
000BF8  2  0F 09 3F 24              .byte $0F,$09,$3F,$24,$FC,$90,$F0,$00
000BFC  2  FC 90 F0 00  
000C00  2               
000C00  2               ;------------------------------------------------
000C00  2               ; Characters block 3
000C00  2               ;------------------------------------------------
000C00  2               
000C00  2  FF FF DB 2E  L0B00:      .byte $FF,$FF,$DB,$2E,$C5,$20,$00,$00
000C04  2  C5 20 00 00  
000C08  2  FF FF 66 99              .byte $FF,$FF,$66,$99,$66,$99,$FF,$00
000C0C  2  66 99 FF 00  
000C10  2  FF FF 99 99  L0B10:      .byte $FF,$FF,$99,$99,$FF,$99,$66,$00
000C14  2  FF 99 66 00  
000C18  2  3C FF EF DF              .byte $3C,$FF,$EF,$DF,$1C,$08,$08,$08
000C1C  2  1C 08 08 08  
000C20  2  FF FF EA 95              .byte $FF,$FF,$EA,$95,$4A,$A5,$50,$87
000C24  2  4A A5 50 87  
000C28  2  FF FF 11 22              .byte $FF,$FF,$11,$22,$44,$88,$FF,$FF
000C2C  2  44 88 FF FF  
000C30  2  FF FF 62 64              .byte $FF,$FF,$62,$64,$68,$70,$60,$60
000C34  2  68 70 60 60  
000C38  2  FF FF 46 26              .byte $FF,$FF,$46,$26,$16,$0E,$06,$06
000C3C  2  16 0E 06 06  
000C40  2  22 FF 88 FF  L0B40:      .byte $22,$FF,$88,$FF,$22,$FF,$88,$FF
000C44  2  22 FF 88 FF  
000C48  2  81 C3 A5 99              .byte $81,$C3,$A5,$99,$99,$A5,$C3,$81
000C4C  2  99 A5 C3 81  
000C50  2  FE 7D 3B 17              .byte $FE,$7D,$3B,$17,$1F,$27,$43,$81
000C54  2  1F 27 43 81  
000C58  2  DB DB DB DB              .byte $DB,$DB,$DB,$DB,$B4,$BB,$DB,$DB
000C5C  2  B4 BB DB DB  
000C60  2  FF 81 81 FF              .byte $FF,$81,$81,$FF,$FF,$81,$81,$FF
000C64  2  FF 81 81 FF  
000C68  2  FF 99 BB FF              .byte $FF,$99,$BB,$FF,$FF,$99,$BB,$FF
000C6C  2  FF 99 BB FF  
000C70  2  FF A5 A5 A5              .byte $FF,$A5,$A5,$A5,$A5,$A5,$A5,$FF
000C74  2  A5 A5 A5 FF  
000C78  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
000C7C  2  FF FF FF FF  
000C80  2  FF DB 24 54  L0B80:      .byte $FF,$DB,$24,$54,$22,$00,$00,$00
000C84  2  22 00 00 00  
000C88  2  FF FF 33 CC  L0B88:      .byte $FF,$FF,$33,$CC,$21,$0C,$E5,$00
000C8C  2  21 0C E5 00  
000C90  2  3C FF F7 0C              .byte $3C,$FF,$F7,$0C,$18,$10,$10,$10
000C94  2  18 10 10 10  
000C98  2  FF 88 22 88              .byte $FF,$88,$22,$88,$22,$88,$22,$88
000C9C  2  22 88 22 88  
000CA0  2  FE 66 FE 00  L0BA0:      .byte $FE,$66,$FE,$00,$00,$00,$00,$00
000CA4  2  00 00 00 00  
000CA8  2  FB 66 BF 00              .byte $FB,$66,$BF,$00,$00,$00,$00,$00
000CAC  2  00 00 00 00  
000CB0  2  EF 66 EF 00              .byte $EF,$66,$EF,$00,$00,$00,$00,$00
000CB4  2  00 00 00 00  
000CB8  2  BF 66 FB 00              .byte $BF,$66,$FB,$00,$00,$00,$00,$00
000CBC  2  00 00 00 00  
000CC0  2  C3 66 18 66  L0BC0:      .byte $C3,$66,$18,$66,$00,$99,$FF,$00
000CC4  2  00 99 FF 00  
000CC8  2  0F 66 0F 66              .byte $0F,$66,$0F,$66,$00,$99,$FF,$00
000CCC  2  00 99 FF 00  
000CD0  2  3C 66 81 66              .byte $3C,$66,$81,$66,$00,$99,$FF,$00
000CD4  2  00 99 FF 00  
000CD8  2  F0 66 F0 66              .byte $F0,$66,$F0,$66,$00,$99,$FF,$00
000CDC  2  00 99 FF 00  
000CE0  2  C3 66 18 66              .byte $C3,$66,$18,$66,$00,$00,$00,$00
000CE4  2  00 00 00 00  
000CE8  2  0F 66 0F 66              .byte $0F,$66,$0F,$66,$00,$00,$00,$00
000CEC  2  00 00 00 00  
000CF0  2  3C 66 81 66              .byte $3C,$66,$81,$66,$00,$00,$00,$00
000CF4  2  00 00 00 00  
000CF8  2  F0 66 F0 66              .byte $F0,$66,$F0,$66,$00,$00,$00,$00
000CFC  2  00 00 00 00  
000D00  2               
000D00  2               ;------------------------------------------------
000D00  2               ; Characters block 4
000D00  2               ;------------------------------------------------
000D00  2               
000D00  2  55 55 55 55  L0C00:      .byte $55,$55,$55,$55,$55,$55,$55,$55
000D04  2  55 55 55 55  
000D08  2  55 2B 2B 2B  L0C08:      .byte $55,$2B,$2B,$2B,$2B,$2B,$2B,$55
000D0C  2  2B 2B 2B 55  
000D10  2  AA D4 D4 D4  L0C10:      .byte $AA,$D4,$D4,$D4,$D4,$D4,$D4,$AA
000D14  2  D4 D4 D4 AA  
000D18  2  00 FF 88 22  L0C18:      .byte $00,$FF,$88,$22,$88,$22,$88,$22
000D1C  2  88 22 88 22  
000D20  2  00 00 FF 88              .byte $00,$00,$FF,$88,$22,$88,$22,$88
000D24  2  22 88 22 88  
000D28  2  00 00 00 FF              .byte $00,$00,$00,$FF,$88,$22,$88,$22
000D2C  2  88 22 88 22  
000D30  2  00 00 00 00              .byte $00,$00,$00,$00,$FF,$88,$22,$88
000D34  2  FF 88 22 88  
000D38  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$FF,$88,$22
000D3C  2  00 FF 88 22  
000D40  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$FF,$88
000D44  2  00 00 FF 88  
000D48  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$FF
000D4C  2  00 00 00 FF  
000D50  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000D54  2  00 00 00 00  
000D58  2  C3 66 18 66  L0C58:      .byte $C3,$66,$18,$66,$00,$00,$00,$00
000D5C  2  00 00 00 00  
000D60  2  0F 66 0F 66              .byte $0F,$66,$0F,$66,$00,$00,$00,$00
000D64  2  00 00 00 00  
000D68  2  3C 66 81 66              .byte $3C,$66,$81,$66,$00,$00,$00,$00
000D6C  2  00 00 00 00  
000D70  2  F0 66 F0 66              .byte $F0,$66,$F0,$66,$00,$00,$00,$00
000D74  2  00 00 00 00  
000D78  2  22 FF 88 FF  L0C78:      .byte $22,$FF,$88,$FF,$22,$FF,$88,$FF
000D7C  2  22 FF 88 FF  
000D80  2  30 48 88 90  L0C80:      .byte $30,$48,$88,$90,$68,$04,$0A,$04
000D84  2  68 04 0A 04  
000D88  2  FF 81 81 81  L0C88:      .byte $FF,$81,$81,$81,$81,$81,$81,$FF
000D8C  2  81 81 81 FF  
000D90  2  FF 81 81 81  L0C90:      .byte $FF,$81,$81,$81,$81,$81,$81,$FF
000D94  2  81 81 81 FF  
000D98  2  FF 81 81 81  L0C98:      .byte $FF,$81,$81,$81,$81,$81,$81,$FF
000D9C  2  81 81 81 FF  
000DA0  2  FF 81 81 81  L0CA0:      .byte $FF,$81,$81,$81,$81,$81,$81,$FF
000DA4  2  81 81 81 FF  
000DA8  2  FF 81 81 81              .byte $FF,$81,$81,$81,$81,$81,$81,$81
000DAC  2  81 81 81 81  
000DB0  2  FF FF 18 18              .byte $FF,$FF,$18,$18,$18,$18,$18,$18
000DB4  2  18 18 18 18  
000DB8  2  00 00 00 00  L0CB8:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000DBC  2  00 00 00 00  
000DC0  2  FE 82 82 44              .byte $FE,$82,$82,$44,$38,$20,$C0,$C0
000DC4  2  38 20 C0 C0  
000DC8  2  FE 82 82 44              .byte $FE,$82,$82,$44,$38,$08,$06,$06
000DCC  2  38 08 06 06  
000DD0  2  00 00 00 00  L0CD0:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000DD4  2  00 00 00 00  
000DD8  2  00 00 00 00  L0CD8:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000DDC  2  00 00 00 00  
000DE0  2  00 00 00 00  L0CE0:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000DE4  2  00 00 00 00  
000DE8  2  00 00 00 00  L0CE8:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000DEC  2  00 00 00 00  
000DF0  2  08 08 08 08              .byte $08,$08,$08,$08,$08,$08,$08,$08
000DF4  2  08 08 08 08  
000DF8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000DFC  2  00 00 00 00  
000E00  2               
000E00  2               ;------------------------------------------------
000E00  2               
000E00  2  00 00 00 00  L0D00:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000E04  2  00 00 00 00  
000E08  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E0C  2  00 00 00 00  
000E10  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E14  2  00 00 00 00  
000E18  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E1C  2  00 00 00 00  
000E20  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E24  2  00 00 00 00  
000E28  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E2C  2  00 00 00 00  
000E30  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E34  2  00 00 00 00  
000E38  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E3C  2  00 00 00 00  
000E40  2               
000E40  2               ;------------------------------------------------
000E40  2               ; Shoe sprite
000E40  2               ;------------------------------------------------
000E40  2               
000E40  2               L0D40:
000E40  2  35 2A 35 2A  	.byte $35,$2a,$35,$2a,$3f,$09,$09,$1f
000E44  2  3F 09 09 1F  
000E48  2  40 C0 40 C0  	.byte $40,$c0,$40,$c0,$c0,$00,$00,$80
000E4C  2  C0 00 00 80  
000E50  2  10 11 22 20  	.byte $10,$11,$22,$20,$59,$44,$44,$ff
000E54  2  59 44 44 FF  
000E58  2  80 80 40 B8  	.byte $80,$80,$40,$b8,$24,$42,$02,$ff
000E5C  2  24 42 02 FF  
000E60  2               
000E60  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000E64  2  00 00 00 00  
000E68  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000E6C  2  00 00 00 00  
000E70  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000E74  2  00 00 00 00  
000E78  2  00 00 00 00  	.byte $00,$00,$00,$00,$00,$00,$00,$00
000E7C  2  00 00 00 00  
000E80  2               
000E80  2               ;------------------------------------------------
000E80  2               
000E80  2  00           L0D80:      .byte $00
000E81  2  00 00        L0D81:      .byte $00,$00
000E83  2  00           L0D83:      .byte $00
000E84  2  00 00 00     L0D84:      .byte $00,$00,$00
000E87  2  00 00 00 00  L0D87:      .byte $00,$00,$00,$00,$00
000E8B  2  00           
000E8C  2  00 00 00 00              .byte $00,$00,$00,$00
000E90  2  00 00 00 00  L0D90:      .byte $00,$00,$00,$00,$00,$00,$00,$00
000E94  2  00 00 00 00  
000E98  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000E9C  2  00 00 00 00  
000EA0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EA4  2  00 00 00 00  
000EA8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EAC  2  00 00 00 00  
000EB0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EB4  2  00 00 00 00  
000EB8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EBC  2  00 00 00 00  
000EC0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EC4  2  00 00 00 00  
000EC8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000ECC  2  00 00 00 00  
000ED0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000ED4  2  00 00 00 00  
000ED8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EDC  2  00 00 00 00  
000EE0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EE4  2  00 00 00 00  
000EE8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EEC  2  00 00 00 00  
000EF0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EF4  2  00 00 00 00  
000EF8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000EFC  2  00 00 00 00  
000F00  2               
000F00  2               ;------------------------------------------------
000F00  2               ;------------------------------------------------
000F00  2               
000F00  2  4D 41 4E 49  L0E00:      .byte "MANICMINLOAD   $!BOO"
000F04  2  43 4D 49 4E  
000F08  2  4C 4F 41 44  
000F14  2  54 20 20 24              .byte "T  $Miner1 $Miner2 $"
000F18  2  4D 69 6E 65  
000F1C  2  72 31 20 24  
000F28  2  4D 69 6E 65              .byte "Miner3 $"
000F2C  2  72 33 20 24  
000F30  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F34  2  00 00 00 00  
000F38  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F3C  2  00 00 00 00  
000F40  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F44  2  00 00 00 00  
000F48  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F4C  2  00 00 00 00  
000F50  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F54  2  00 00 00 00  
000F58  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F5C  2  00 00 00 00  
000F60  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F64  2  00 00 00 00  
000F68  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F6C  2  00 00 00 00  
000F70  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F74  2  00 00 00 00  
000F78  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F7C  2  00 00 00 00  
000F80  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F84  2  00 00 00 00  
000F88  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F8C  2  00 00 00 00  
000F90  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F94  2  00 00 00 00  
000F98  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000F9C  2  00 00 00 00  
000FA0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FA4  2  00 00 00 00  
000FA8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FAC  2  00 00 00 00  
000FB0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FB4  2  00 00 00 00  
000FB8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FBC  2  00 00 00 00  
000FC0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FC4  2  00 00 00 00  
000FC8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FCC  2  00 00 00 00  
000FD0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FD4  2  00 00 00 00  
000FD8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FDC  2  00 00 00 00  
000FE0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FE4  2  00 00 00 00  
000FE8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FEC  2  00 00 00 00  
000FF0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FF4  2  00 00 00 00  
000FF8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
000FFC  2  00 00 00 00  
001000  2               
001000  2               ;------------------------------------------------
001000  2               ; Plot sprite routine
001000  2               ;
001000  2               ; A = Plotmode (2,3,4,5 or 10)
001000  2               ; X = X-coordinate miner
001000  2               ; Y = Y-coordinate miner
001000  2               ;
001000  2               ; $70 = Plotmode
001000  2               ; $71 = X DIV 2
001000  2               ; $72 = Y DIV 8
001000  2               ; $73 = X MOD 2
001000  2               ; $74 = Y MOD 8
001000  2               ; $75/$76 = Screenaddress
001000  2               ; $77/$78 = Sprite address
001000  2               ;------------------------------------------------
001000  2               
001000  2  85 70        L0F00:      sta L0070              ; 85 70
001002  2  86 71                    stx L0071              ; 86 71
001004  2  84 72                    sty L0072              ; 84 72
001006  2               
001006  2               ; Select character x-position in pixels, X MOD 8
001006  2               
001006  2  8A                       txa                    ; 8A
001007  2  29 07                    and #$07               ; 29 03
001009  2  85 73                    sta L0073              ; 85 73
00100B  2               
00100B  2               ; Select character y-position in pixels, Y MOD 8
00100B  2               
00100B  2  98                       tya                    ; 98
00100C  2  29 07                    and #$07               ; 29 07
00100E  2  85 74                    sta L0074              ; 85 74
001010  2               
001010  2               ; Select character x-position in bytes, (X DIV 4) - 4
001010  2               
001010  2  8A                       txa                    ; 8A
001011  2  29 FC                    and #$FC               ; 29 FC
001013  2  18                       clc                    ; 18
001014  2  6A                       ror A                  ; 6A
001015  2  6A           	ror a
001016  2  38           	sec
001017  2  E9 04        	sbc #4
001019  2  85 71                    sta L0071              ; 85 71
00101B  2               
00101B  2               ; Select character x-position in bytes, Y DIV 8
00101B  2               
00101B  2  98                       tya                    ; 98
00101C  2  29 F8                    and #$F8               ; 29 F8
00101E  2  18                       clc                    ; 18
00101F  2  6A                       ror A                  ; 6A
001020  2  6A                       ror A                  ; 6A
001021  2  6A                       ror A                  ; 6A
001022  2  85 72                    sta L0072              ; 85 72
001024  2               
001024  2               ; Select sprite routine according to spritenr
001024  2               
001024  2  A5 70                    lda L0070              ; A5 70
001026  2  C9 0A                    cmp #$0A               ; C9 0A
001028  2  F0 1D                    beq L0F43              ; Plotmode = 10
00102A  2               
00102A  2  C9 02                    cmp #$02               ; C9 02
00102C  2  F0 4D                    beq L0F77              ; Plotmode = 2
00102E  2               
00102E  2  C9 03                    cmp #$03               ; C9 03
001030  2  F0 22                    beq L0F50              ; Plotmode = 3
001032  2               
001032  2  C9 04                    cmp #$04               ; C9 04
001034  2  F0 2B                    beq L0F5D              ; Plotmode = 4
001036  2               
001036  2  C9 05                    cmp #$05               ; C9 05
001038  2  F0 34                    beq L0F6A              ; Plotmode = 5
00103A  2               
00103A  2               ; Entry for other sprites
00103A  2               
00103A  2  A9 EB                    lda #<L101B               ; A9 1B
00103C  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
00103F  2  A9 10                    lda #>L101B               ; A9 10
001041  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
001044  2  4C 85 10                 jmp L0F81              ; 4C 81 0F
001047  2               
001047  2               ; Entry for Plotmode = 10
001047  2               
001047  2  A9 FE        L0F43:      lda #<L1026               ; A9 26
001049  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
00104C  2  A9 10                    lda #>L1026               ; A9 10
00104E  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
001051  2  4C 85 10                 jmp L0F81              ; 4C 81 0F
001054  2               
001054  2               ; Entry for Plotmode = 3
001054  2               
001054  2  A9 0B        L0F50:      lda #<L102D               ; A9 2D
001056  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
001059  2  A9 11                    lda #>L102D               ; A9 10
00105B  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
00105E  2  4C 85 10                 jmp L0F81              ; 4C 81 0F
001061  2               
001061  2               ; Entry for Plotmode = 4
001061  2               
001061  2  A9 19        L0F5D:      lda #<L1033               ; A9 33
001063  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
001066  2  A9 11                    lda #>L1033               ; A9 10
001068  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
00106B  2  4C 85 10                 jmp L0F81              ; 4C 81 0F
00106E  2               
00106E  2               ; Entry for Plotmode = 5
00106E  2               
00106E  2  A9 20        L0F6A:      lda #<L103A               ; A9 3A
001070  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
001073  2  A9 11                    lda #>L103A               ; A9 10
001075  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
001078  2  4C 85 10                 jmp L0F81              ; 4C 81 0F
00107B  2               
00107B  2               ; Entry for Plotmode = 2
00107B  2               
00107B  2  A9 FB        L0F77:      lda #<L1023               ; A9 23
00107D  2  8D A8 10                 sta L0FCC              ; 8D CC 0F
001080  2  A9 10                    lda #>L1023               ; A9 10
001082  2  8D A9 10                 sta L0FCD              ; 8D CD 0F
001085  2               
001085  2               ; Continue sprite routine
001085  2               
001085  2  A9 00        L0F81:      lda #<$8000               ; Top screen address
001087  2  85 75                    sta L0075              ; 85 75
001089  2  A9 80                    lda #>$8000               ; A9 30
00108B  2  85 76                    sta L0076              ; 85 76
00108D  2               
00108D  2               ; Calculate screenaddress
00108D  2               
00108D  2  A9 00                    lda #$00               ; A9 00
00108F  2  8D D0 18                 sta L184F              ; 8D 4F 18
001092  2               
001092  2  A6 74        	ldx L0074		; Determine lb screen address
001094  2  BD CA 10     	lda scrtab,x
001097  2  18           	clc
001098  2  65 71        	adc L0071
00109A  2  85 75        	sta L0075
00109C  2               
00109C  2  A5 72        	lda L0072
00109E  2  69 80        	adc #$80
0010A0  2  85 76        	sta L0076
0010A2  2               
0010A2  2               ; Plot sprite
0010A2  2               
0010A2  2               L0FC9:
0010A2  2  A2 00        	ldx #$00
0010A4  2               L0FCA:
0010A4  2  BC CA 10     	ldy scrtab,x
0010A7  2               L0FCB:
0010A7  2  20 FF FF     	jsr LFFFF		; Adjustable code
0010AA  2  91 75        	sta (L0075),Y		; Put data on screen
0010AC  2               
0010AC  2  E8           	inx
0010AD  2  E0 20        	cpx #32
0010AF  2  F0 09        	beq L0FE9
0010B1  2  E0 10        	cpx #16
0010B3  2  D0 EF        	bne L0FCA
0010B5  2               
0010B5  2  E6 76        	inc L0076		; Screen 8 lines down
0010B7  2               
0010B7  2  4C A4 10     	jmp L0FCA
0010BA  2               
0010BA  2               L0FE9:
0010BA  2  A5 79                    lda L0079              ; ????
0010BC  2  18                       clc                    ; 18
0010BD  2  69 01                    adc #01               ; 69 01
0010BF  2  85 79                    sta L0079              ; 85 79
0010C1  2  A5 7A                    lda L007A              ; A5 7A
0010C3  2  69 00                    adc #$00               ; 69 00
0010C5  2  85 7A                    sta L007A              ; 85 7A
0010C7  2               
0010C7  2  4C 27 11     	jmp L105E
0010CA  2               
0010CA  2               scrtab:
0010CA  2  00 20 40 60  		.byte $00,$20,$40,$60,$80,$a0,$c0,$e0
0010CE  2  80 A0 C0 E0  
0010D2  2  01 21 41 61  		.byte $01,$21,$41,$61,$81,$a1,$c1,$e1
0010D6  2  81 A1 C1 E1  
0010DA  2  00 20 40 60  		.byte $00,$20,$40,$60,$80,$a0,$c0,$e0
0010DE  2  80 A0 C0 E0  
0010E2  2  01 21 41 61  		.byte $01,$21,$41,$61,$81,$a1,$c1,$e1
0010E6  2  81 A1 C1 E1  
0010EA  2               
0010EA  2  00           tmp_y:		.byte 0
0010EB  2               
0010EB  2               ; Calculate data to put on screen for other sprites
0010EB  2               
0010EB  2               L101B:
0010EB  2  8C EA 10     	sty tmp_y
0010EE  2  8A           	txa
0010EF  2  A8           	tay
0010F0  2  B1 77                    lda (L0077),y          ; B1 77
0010F2  2  2D 6F 11                 and L109B              ; Colour mask
0010F5  2  AC EA 10     	ldy tmp_y
0010F8  2               ;	eor (L0075),Y          ; 11 75
0010F8  2  11 75                    ora (L0075),Y          ; 11 75
0010FA  2  60                       rts                    ; 60
0010FB  2               
0010FB  2               ; Calculate data to put on screen for spritenr = 2
0010FB  2               
0010FB  2  A9 00        L1023:      lda #$00               ; A9 00
0010FD  2  60                       rts                    ; 60
0010FE  2               
0010FE  2               ; Calculate data to put on screen for spritenr = 10
0010FE  2               
0010FE  2               L1026:
0010FE  2  8C EA 10     	sty tmp_y
001101  2  8A           	txa
001102  2  A8           	tay
001103  2  B1 77                    lda (L0077),y          ; B1 77
001105  2               ;            and #$F0               ; 29 F0
001105  2  AC EA 10     	ldy tmp_y
001108  2  51 75                    eor (L0075),Y          ; 51 75
00110A  2  60                       rts                    ; 60
00110B  2               
00110B  2               ; Calculate data to put on screen for spritenr = 3
00110B  2               
00110B  2               L102D:
00110B  2  8C EA 10     	sty tmp_y
00110E  2  8A           	txa
00110F  2  A8           	tay
001110  2  B1 77                    lda (L0077),y          ; B1 77
001112  2  2D 6F 11                 and L109B              ; Colour mask
001115  2  AC EA 10     	ldy tmp_y
001118  2  60                       rts                    ; 60
001119  2               
001119  2               ; Calculate data to put on screen for spritenr = 4
001119  2               
001119  2  B1 75        L1033:      lda (L0075),Y          ; B1 75
00111B  2  C9 FF                    cmp #$FF               ; C9 FF
00111D  2  D0 EC                    bne L102D              ; D0 F4
00111F  2  60                       rts                    ; 60
001120  2               
001120  2               ; Calculate data to put on screen for spritenr = 5
001120  2               
001120  2  B1 75        L103A:      lda (L0075),Y          ; B1 75
001122  2  C9 FF                    cmp #$FF               ; C9 FF
001124  2  D0 D5                    bne L1023              ; D0 E3
001126  2  60                       rts                    ; 60
001127  2               
001127  2  60           L105E:      rts                    ; 60
001128  2               
001128  2  EA           L105F:      .byte $EA
001129  2               
001129  2               ;--------------------------------------------
001129  2               ; Sinking floor
001129  2               ;
001129  2               ; Copy second last byte to last byte, 6 times
001129  2               ; Wipe top byte
001129  2               ;--------------------------------------------
001129  2               
001129  2               L1074:
001129  2  AD 19 03     	lda YPOS
00112C  2  18           	clc
00112D  2  69 80        	adc #$80
00112F  2  85 76        	sta L0076
001131  2  38           	sec
001132  2  E9 24        	sbc #($8000-buffer)/256
001134  2  85 5C        	sta L005C
001136  2               
001136  2  A5 75        	lda L0075
001138  2  85 5B        	sta L005B
00113A  2               
00113A  2  A9 00        	lda #0
00113C  2  8D 70 11     	sta floorchk
00113F  2               
00113F  2  A2 06        	ldx #$06		; Set pointer
001141  2               L1076:
001141  2  BC CA 10     	ldy scrtab,x
001144  2  B1 75        	lda (L0075),Y		; Load second last byte
001146  2  E8           	inx
001147  2  BC CA 10     	ldy scrtab,x
00114A  2  91 75        	sta (L0075),Y		; Store last byte
00114C  2  91 5B        	sta (L005B),y
00114E  2               
00114E  2  0D 70 11     	ora floorchk
001151  2  8D 70 11     	sta floorchk
001154  2               
001154  2  CA           	dex
001155  2  CA           	dex
001156  2  10 E9        	bpl L1076		; Repeat 6x
001158  2               
001158  2  A9 00        	lda #$00		; Load blank
00115A  2  A0 00        	ldy #$00
00115C  2  91 75        	sta (L0075),Y		; Clear top byte
00115E  2  91 5B        	sta (L005B),y
001160  2               
001160  2  AD 70 11     	lda floorchk
001163  2  D0 09        	bne L109A
001165  2               
001165  2  20 21 3B     	jsr calc_mapaddress	; Wipe tile in charmap
001168  2               
001168  2  A0 00        	ldy #0
00116A  2  A9 20        	lda #$20
00116C  2  91 33        	sta (SCR),y
00116E  2               
00116E  2               L109A:	
00116E  2  60           	rts
00116F  2               
00116F  2  FF           L109B:	.byte $FF		; Colour mask
001170  2               
001170  2               floorchk:
001170  2  00           	.byte $00
001171  2               
001171  2               ;--------------------------------------------
001171  2               ; Check floors under miner for sinking floor
001171  2               ; or conveyor
001171  2               ;--------------------------------------------
001171  2               
001171  2               L109C:
001171  2  A9 FF        	lda #$FF               ; A9 FF
001173  2  8D 6F 11     	sta L109B              ; Colour mask
001176  2               
001176  2  A9 00        	lda #$00               ; A9 00
001178  2  8D BF 18     	sta L183E              ; Delta X old
00117B  2  8D C9 18     	sta L1848              ; Start walking on conveyor
00117E  2               
00117E  2  AD CC 18     	lda L184B              ; Miner jump flag
001181  2  C9 00        	cmp #$00               ; C9 00
001183  2  F0 03        	beq L10B3              ; Jump if miner not jumping
001185  2               
001185  2  4C AC 16     	jmp L1634              ; Miner is jumping
001188  2               
001188  2               ;--------------------------------------------
001188  2               ; Miner not jumping
001188  2               ; Check if tiles under miner are sinking floor
001188  2               ;--------------------------------------------
001188  2               
001188  2               ; Restore data-/screen addresses
001188  2               
001188  2  A2 00        L10B3:      ldx #$00               ; A2 00
00118A  2  BD C3 18     L10B5:      lda L1842,X            ; BD 42 18
00118D  2  95 77                    sta L0077,X            ; 95 77
00118F  2  E8                       inx                    ; E8
001190  2  E0 05                    cpx #$05               ; E0 05
001192  2  D0 F6                    bne L10B5              ; D0 F6
001194  2               
001194  2               ; CHECK IF FLOOR UNDER MINER IS SINKING FLOOR
001194  2               ; Check floor tiles for sinking floor under miner
001194  2               
001194  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
001197  2  4A           	lsr A                  ; 4A
001198  2  4A           	lsr A                  ; 4A
001199  2  38           	sec
00119A  2  E9 04        	sbc #4
00119C  2  8D 18 03     	sta XPOS
00119F  2               
00119F  2  AD BC 18     	lda L183B              ; Y-coordinaat Miner in pixels old
0011A2  2  4A           	lsr A                  ; 4A
0011A3  2  4A           	lsr A                  ; 4A
0011A4  2  4A           	lsr A                  ; 4A
0011A5  2  18           	clc                    ; 18
0011A6  2  69 02        	adc #$02               ; 69 02
0011A8  2  8D 19 03     	sta YPOS
0011AB  2               
0011AB  2  20 1B 15     	jsr L14A7		; Get left+right bottom tile under miner
0011AE  2               
0011AE  2               ; Check if miner jumping/falling
0011AE  2               
0011AE  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
0011B1  2  29 07                    and #$07               ; 29 07
0011B3  2  C9 00                    cmp #$00               ; C9 00
0011B5  2  D0 26                    bne L115D              ; Jump if jumping/falling
0011B7  2               
0011B7  2  E6 76        	inc L0076		; Adjust screen pointer
0011B9  2               
0011B9  2               ; Check if lower left tile under miner is sinking floor
0011B9  2               
0011B9  2  AD CA 18                 lda L1849              ; Char at current left position
0011BC  2  20 3A 16                 jsr L15C8              ; Check hit sinking floor
0011BF  2  C9 01                    cmp #$01               ; C9 01
0011C1  2  F0 12                    beq L1131              ; Sink tile
0011C3  2               L10FB:
0011C3  2  E6 75        	inc L0075		; Point to right lower tile
0011C5  2               
0011C5  2  AD CB 18                 lda L184A              ; AD 4A 18
0011C8  2  20 3A 16                 jsr L15C8              ; Check hit sinking floor
0011CB  2  C9 01                    cmp #$01               ; C9 01
0011CD  2  D0 0C                    bne L1150              ; Check lower right tile
0011CF  2               
0011CF  2               ; Tile is sinking floor
0011CF  2               
0011CF  2  20 29 11                 jsr L1074              ; Sink lower left tile
0011D2  2  4C DB 11                 jmp L1150              ; Check lower right tile
0011D5  2               
0011D5  2               L1131:
0011D5  2  20 29 11                 jsr L1074              ; Sink tile
0011D8  2  4C C3 11                 jmp L10FB              ; Check lower right tile
0011DB  2               
0011DB  2               ; Check if lower right tile under miner is sinking floor
0011DB  2               
0011DB  2               ; CHECK IF FLOOR IS CONVEYOR
0011DB  2               
0011DB  2               L1150:
0011DB  2  C6 75        	dec L0075		; Adjust screenpointer
0011DD  2               ;	inc L0076
0011DD  2               
0011DD  2               ; Check if lower left tile under miner is conveyor
0011DD  2               
0011DD  2  AD CA 18     L115D:      lda L1849              ; Char at current position
0011E0  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
0011E3  2  C9 00                    cmp #$00               ; C9 00
0011E5  2  D0 0F                    bne L1176              ; Yes, set conveyor flag
0011E7  2               
0011E7  2               ; Check if lower right tile under miner is conveyor
0011E7  2               
0011E7  2  AD CB 18                 lda L184A              ; AD 4A 18
0011EA  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
0011ED  2  C9 00                    cmp #$00               ; C9 00
0011EF  2  D0 05                    bne L1176              ; Yes, set conveyor flag
0011F1  2               
0011F1  2               ; No conveyor, clear conveyor flag
0011F1  2               
0011F1  2  A9 00                    lda #$00               ; A9 00
0011F3  2  8D D3 18                 sta L1852              ; Move on conveyor flag
0011F6  2               
0011F6  2               ; Yes conveyor, set conveyor flag
0011F6  2               
0011F6  2  AD D3 18     L1176:      lda L1852              ; Move on conveyor flag
0011F9  2  C9 01                    cmp #$01               ; C9 01
0011FB  2  D0 0A                    bne L1187              ; If conveyor flag already set, jump
0011FD  2               
0011FD  2  AD D4 18                 lda L1853              ; Direction movement on conveyor
001200  2  C9 00                    cmp #$00               ; C9 00
001202  2  D0 03                    bne L1187              ; D0 03
001204  2  4C AC 12                 jmp L1238              ; 4C 38 12
001207  2               
001207  2               ; Check if miner is landed
001207  2               
001207  2               L1187:
001207  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
00120A  2  29 07                    and #$07               ; 29 07
00120C  2  C9 00                    cmp #$00               ; C9 00
00120E  2  F0 0C                    beq L119C              ; Miner is landed
001210  2               
001210  2               ; Miner is falling
001210  2               
001210  2               L1190:
001210  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
001213  2  18                       clc                    ; 18
001214  2  69 02                    adc #$02               ; 69 02
001216  2  8D BE 18                 sta L183D              ; Y-coordinaat Miner in pixels new
001219  2  4C DF 13                 jmp L1375              ; Miner if falling, jump
00121C  2               
00121C  2               ; Miner is not falling
00121C  2               
00121C  2  AD CA 18     L119C:      lda L1849              ; Char at current position
00121F  2  20 1A 16                 jsr L15AC              ; Check hit solid floor
001222  2  C9 01                    cmp #$01               ; C9 01
001224  2  F0 12                    beq L11B8              ; F0 12
001226  2               
001226  2  AD CB 18                 lda L184A              ; AD 4A 18
001229  2  20 1A 16                 jsr L15AC              ; Check hit solid floor
00122C  2  C9 01                    cmp #$01               ; C9 01
00122E  2  F0 08                    beq L11B8              ; F0 08
001230  2               
001230  2  A9 01                    lda #$01               ; A9 01
001232  2  8D C8 18                 sta L1847              ; 8D 47 18
001235  2  4C 10 12                 jmp L1190              ; 4C 90 11
001238  2               
001238  2  A9 00        L11B8:      lda #$00               ; A9 00
00123A  2  8D C2 18                 sta L1841              ; Direction change
00123D  2               
00123D  2               ; READ KEYS
00123D  2               ; Check for Z-key
00123D  2               
00123D  2               ;	jsr $fe71		; Read key
00123D  2               ;	cpy #$3a
00123D  2  A2 00        	ldx #0
00123F  2  20 00 34     	jsr readkey
001242  2  F0 32        	beq L11FC		; Skip if Z key not pressed
001244  2               
001244  2               ; Z key pressed
001244  2               
001244  2  AD C0 18     	lda L183F		; Miner sprite nr        
001247  2  C9 03        	cmp #$03
001249  2  D0 11        	bne L11E2		; Jump if miner was facing right
00124B  2               
00124B  2  A9 FF        	lda #$FF		; Set direction left
00124D  2  8D BF 18     	sta L183E		; Delta X old
001250  2               
001250  2  AD BD 18     	lda L183C		; X-coordinaat Miner in pixels new
001253  2  38           	sec
001254  2  E9 01        	sbc #$01		; Decrement X-pos miner
001256  2  8D BD 18     	sta L183C		; X-coordinaat Miner in pixels new
001259  2  4C AC 12     	jmp L1238		; Jump check conveyor tiles
00125C  2               
00125C  2  A9 03        L11E2:      lda #$03               ; A9 03
00125E  2  8D C0 18                 sta L183F              ; Miner sprite nr
001261  2  A9 06                    lda #$06               ; A9 06
001263  2  8D C1 18                 sta L1840              ; Direction
001266  2  A9 01                    lda #$01               ; A9 01
001268  2  8D C2 18                 sta L1841              ; Direction change
00126B  2               
00126B  2  20 DF 13                 jsr L1375              ; 20 75 13
00126E  2               
00126E  2  A9 00                    lda #$00               ; A9 00
001270  2  8D BF 18                 sta L183E              ; Delta X old
001273  2               
001273  2  4C AC 12                 jmp L1238              ; Jump check conveyor tiles
001276  2               
001276  2               ; Check for X-key
001276  2               
001276  2               L11FC:
001276  2               ;	jsr $fe71		; Read key
001276  2               ;	cpy #$38		; Check X
001276  2  A2 01        	ldx #1
001278  2  20 00 34     	jsr readkey
00127B  2  F0 2F                    beq L1238
00127D  2               
00127D  2               ; X key pressed
00127D  2               
00127D  2  AD C0 18                 lda L183F              ; Miner sprite nr
001280  2  C9 00                    cmp #$00
001282  2  D0 11                    bne L1221              ; Skip if X key not pressed
001284  2               
001284  2  A9 01                    lda #$01               ; A9 01
001286  2  8D BF 18                 sta L183E              ; Delta X old
001289  2               
001289  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
00128C  2  18                       clc                    ; 18
00128D  2  69 01                    adc #$01               ; 69 01
00128F  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
001292  2               
001292  2  4C AC 12                 jmp L1238              ; Jump check conveyor tiles
001295  2               
001295  2               ; No key pressed, stop walking miner
001295  2               
001295  2  A9 00        L1221:      lda #$00               ; A9 00
001297  2  8D C0 18                 sta L183F              ; Miner sprite nr
00129A  2               
00129A  2  A9 05                    lda #$05               ; A9 05
00129C  2  8D C1 18                 sta L1840              ; Direction
00129F  2               
00129F  2  A9 01                    lda #$01               ; A9 01
0012A1  2  8D C2 18                 sta L1841              ; Direction change
0012A4  2               
0012A4  2  20 DF 13                 jsr L1375              ; 20 75 13
0012A7  2               
0012A7  2  A9 00                    lda #$00               ; A9 00
0012A9  2  8D BF 18                 sta L183E              ; Delta X old
0012AC  2               
0012AC  2               ; Check floor tiles for conveyor
0012AC  2               
0012AC  2               L1238:
0012AC  2  AD BB 18     	lda L183A		; X-coordinaat Miner in pixels old
0012AF  2  4A           	lsr A
0012B0  2  4A           	lsr A
0012B1  2  38           	sec
0012B2  2  E9 04        	sbc #4
0012B4  2  8D 18 03     	sta XPOS
0012B7  2               
0012B7  2  AD BC 18     	lda L183B		; Y-coordinaat Miner in pixels old
0012BA  2  4A           	lsr A	
0012BB  2  4A           	lsr A	
0012BC  2  4A           	lsr A
0012BD  2  18           	clc
0012BE  2  69 02        	adc #$02
0012C0  2  8D 19 03     	sta YPOS
0012C3  2               
0012C3  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
0012C6  2               
0012C6  2  AD D3 18                 lda L1852              ; Move on conveyor flag
0012C9  2  C9 00                    cmp #$00               ; C9 00
0012CB  2  D0 1F                    bne L127A              ; On conveyor
0012CD  2               
0012CD  2  AD CA 18                 lda L1849              ; Lower left tile under miner
0012D0  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
0012D3  2  C9 01                    cmp #$01               ; C9 01
0012D5  2  F0 0A                    beq L126F              ; Check lower right tile
0012D7  2               
0012D7  2  AD CB 18                 lda L184A              ; Lower right tile under conveyor
0012DA  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
0012DD  2  C9 01                    cmp #$01               ; C9 01
0012DF  2  D0 0B                    bne L127A              ; No conveyor
0012E1  2               
0012E1  2               ; tile under miner is conveyor
0012E1  2               
0012E1  2  AD BF 18     L126F:      lda L183E              ; Delta X old
0012E4  2  8D D4 18                 sta L1853              ; Direction movement on conveyor
0012E7  2               
0012E7  2  A9 01                    lda #$01               ; A9 01
0012E9  2  8D D3 18                 sta L1852              ; Move on conveyor flag
0012EC  2               
0012EC  2               ; End check
0012EC  2               
0012EC  2  AD D3 18     L127A:      lda L1852              ; Move on conveyor flag
0012EF  2  C9 01                    cmp #$01               ; C9 01
0012F1  2  D0 43                    bne L12C4              ; D0 43
0012F3  2               
0012F3  2  AD C8 18                 lda L1847              ; AD 47 18
0012F6  2  C9 01                    cmp #$01               ; C9 01
0012F8  2  D0 0F                    bne L1297              ; D0 0F
0012FA  2               
0012FA  2  AD BF 18                 lda L183E              ; Delta X old
0012FD  2  49 FE                    eor #$FE               ; 49 FE
0012FF  2  CD D5 18                 cmp L1854              ; CD 54 18
001302  2  D0 05                    bne L1297              ; D0 05
001304  2               
001304  2  A9 FE                    lda #$FE               ; A9 FE
001306  2  8D D4 18                 sta L1853              ; Direction movement on conveyor
001309  2               
001309  2  AD C8 18     L1297:      lda L1847              ; AD 47 18
00130C  2  C9 01                    cmp #$01               ; C9 01
00130E  2  D0 12                    bne L12B0              ; D0 12
001310  2               
001310  2  A9 FE                    lda #$FE               ; A9 FE
001312  2  8D D4 18                 sta L1853              ; Direction movement on conveyor
001315  2               
001315  2  AD BD 18     L12A3:      lda L183C              ; X-coordinaat Miner in pixels new
001318  2  38                       sec                    ; 38
001319  2  ED BF 18                 sbc L183E              ; Delta X old
00131C  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
00131F  2               
00131F  2  4C 68 13                 jmp L12F6              ; 4C F6 12
001322  2               
001322  2  AD D4 18     L12B0:      lda L1853              ; Direction movement on conveyor
001325  2  C9 FE                    cmp #$FE               ; C9 FE
001327  2  D0 0D                    bne L12C4              ; D0 0D
001329  2  AD BF 18                 lda L183E              ; Delta X old
00132C  2  49 FE                    eor #$FE               ; 49 FE
00132E  2  CD D5 18                 cmp L1854              ; CD 54 18
001331  2  D0 03                    bne L12C4              ; D0 03
001333  2  4C 15 13                 jmp L12A3              ; 4C A3 12
001336  2               
001336  2  AD BF 18     L12C4:      lda L183E              ; Delta X old
001339  2  C9 00                    cmp #$00               ; C9 00
00133B  2  F0 08                    beq L12D3              ; F0 08
00133D  2  AD BF 18                 lda L183E              ; Delta X old
001340  2  CD D5 18                 cmp L1854              ; CD 54 18
001343  2  D0 05                    bne L12D8              ; D0 05
001345  2  A9 00        L12D3:      lda #$00               ; A9 00
001347  2  8D D4 18                 sta L1853              ; Direction movement on conveyor
00134A  2  AD D4 18     L12D8:      lda L1853              ; Direction movement on conveyor
00134D  2  C9 00                    cmp #$00               ; C9 00
00134F  2  D0 0A                    bne L12E9              ; D0 0A
001351  2  AD D3 18                 lda L1852              ; Move on conveyor flag
001354  2  C9 01                    cmp #$01               ; C9 01
001356  2  D0 03                    bne L12E9              ; D0 03
001358  2  20 5C 18                 jsr L17DB              ; 20 DB 17
00135B  2  AD BF 18     L12E9:      lda L183E              ; Delta X old
00135E  2  8D CF 18                 sta L184E              ; Delta X new
001361  2  C9 00                    cmp #$00               ; C9 00
001363  2  F0 03                    beq L12F6              ; F0 03
001365  2  20 DF 13                 jsr L1375              ; 20 75 13
001368  2               
001368  2               ; Check for RETURN key
001368  2               
001368  2               L12F6:
001368  2               ;	lda #$f6
001368  2               ;	sta $b000
001368  2               ;	lda $b001
001368  2               ;	ldy #$f0
001368  2               ;	sty $b000
001368  2               ;	and #$02
001368  2  A2 02        	ldx #2
00136A  2  20 00 34     	jsr readkey
00136D  2  F0 11        	beq L1314		; Skip if not pressed
00136F  2               
00136F  2               ; Return key pressed
00136F  2  AD C9 18     	lda L1848              ; Start walking on conveyor
001372  2  C9 00                    cmp #$00               ; C9 00
001374  2  D0 0A                    bne L1314              ; D0 0A
001376  2  AD C8 18                 lda L1847              ; AD 47 18
001379  2  C9 00                    cmp #$00               ; C9 00
00137B  2  D0 03                    bne L1314              ; D0 03
00137D  2  4C A1 13                 jmp L1335              ; 4C 35 13
001380  2               
001380  2  A9 00        L1314:      lda #$00               ; A9 00
001382  2  8D BF 18                 sta L183E              ; Delta X old
001385  2  8D D2 18                 sta L1851              ; 8D 51 18
001388  2  8D C8 18                 sta L1847              ; 8D 47 18
00138B  2  8D CF 18                 sta L184E              ; Delta X new
00138E  2  AD C7 18                 lda L1846              ; AD 46 18
001391  2  C9 00                    cmp #$00               ; C9 00
001393  2  F0 06                    beq L132F              ; F0 06
001395  2  A9 00                    lda #$00               ; A9 00
001397  2  8D C7 18                 sta L1846              ; 8D 46 18
00139A  2  60                       rts                    ; 60
00139B  2               
00139B  2  20 61 27     L132F:      jsr L254D              ; Scroll conveyor
00139E  2  4C 8D 14                 jmp L1423              ; 4C 23 14
0013A1  2               
0013A1  2               ;--------------------------------------------
0013A1  2               ; Miner jumps
0013A1  2               ;--------------------------------------------
0013A1  2               
0013A1  2               ; Check hit sealing for wall while jumping
0013A1  2               
0013A1  2               L1335:
0013A1  2  AD BD 18     	lda L183C		; X-coordinaat Miner in pixels new
0013A4  2  4A           	lsr A			; 4A
0013A5  2  4A           	lsr A                  ; 4A
0013A6  2  38           	sec
0013A7  2  E9 04        	sbc #4
0013A9  2  8D 18 03     	sta XPOS
0013AC  2               
0013AC  2  AD BE 18     	lda L183D              ; Y-coordinaat Miner in pixels new
0013AF  2  4A           	lsr A                  ; 4A
0013B0  2  4A           	lsr A                  ; 4A
0013B1  2  4A           	lsr A                  ; 4A
0013B2  2  38           	sec                    ; 38
0013B3  2  E9 01        	sbc #$01               ; E9 01
0013B5  2  8D 19 03     	sta YPOS		; Get left+right top tiles above miner
0013B8  2               
0013B8  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
0013BB  2               
0013BB  2               ; Check top left tile above miner
0013BB  2               
0013BB  2  AD CA 18                 lda L1849              ; Char at current position
0013BE  2  C9 8F                    cmp #$8F               ; Check hit wall
0013C0  2  F0 1A                    beq L1372              ; Jump if hit wall
0013C2  2               
0013C2  2               ; Check top right tile above miner
0013C2  2               
0013C2  2  AD CB 18                 lda L184A              ; AD 4A 18
0013C5  2  C9 8F                    cmp #$8F               ; Check hit wall
0013C7  2  F0 13                    beq L1372              ; Jump if hit wall
0013C9  2               
0013C9  2  A9 01                    lda #$01               ; A9 01
0013CB  2  8D CC 18                 sta L184B              ; Miner jump flag
0013CE  2               
0013CE  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
0013D1  2  8D CD 18                 sta L184C              ; 8D 4C 18
0013D4  2               
0013D4  2  A9 00                    lda #$00               ; A9 00
0013D6  2  8D CE 18                 sta L184D              ; Miner jump position
0013D9  2  4C AC 16                 jmp L1634              ; Miner is jumping
0013DC  2               
0013DC  2  4C 80 13     L1372:      jmp L1314              ; Return
0013DF  2               
0013DF  2               ;--------------------------------------------
0013DF  2               ;
0013DF  2               ;--------------------------------------------
0013DF  2               
0013DF  2  A9 00        L1375:      lda #$00               ; A9 00
0013E1  2  8D 28 11                 sta L105F              ; 8D 5F 10
0013E4  2  8D D2 18                 sta L1851              ; 8D 51 18
0013E7  2               
0013E7  2               ; Check if miner landed
0013E7  2               
0013E7  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
0013EA  2  29 07                    and #$07               ; 29 07
0013EC  2  C9 00                    cmp #$00               ; C9 00
0013EE  2  F0 0C                    beq L1392              ; F0 0C
0013F0  2  8D D1 18                 sta L1850              ; 8D 50 18
0013F3  2               
0013F3  2               ; Miner is jumping
0013F3  2               
0013F3  2  A9 FF                    lda #$FF               ; A9 FF
0013F5  2  18                       clc                    ; 18
0013F6  2  ED D1 18                 sbc L1850              ; ED 50 18
0013F9  2  8D D2 18                 sta L1851              ; 8D 51 18
0013FC  2               
0013FC  2               ; Miner is landed
0013FC  2               
0013FC  2  AD BD 18     L1392:      lda L183C              ; X-coordinaat Miner in pixels new
0013FF  2  29 03                    and #$03               ; 29 03
001401  2  8D D1 18                 sta L1850              ; 8D 50 18
001404  2               
001404  2  AD D1 18                 lda L1850              ; AD 50 18
001407  2  C9 03                    cmp #$03               ; C9 03
001409  2  D0 0A                    bne L13AB              ; D0 0A
00140B  2               
00140B  2  AD BF 18                 lda L183E              ; Delta X old
00140E  2  C9 FF                    cmp #$FF               ; C9 FF
001410  2  D0 03                    bne L13AB              ; D0 03
001412  2               
001412  2  20 94 17                 jsr L1709              ; Check movement to the left
001415  2               
001415  2  AD BF 18     L13AB:      lda L183E              ; Delta X old
001418  2  C9 FD                    cmp #$FD               ; C9 FD
00141A  2  D0 11                    bne L13C3              ; D0 11
00141C  2               
00141C  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
00141F  2  18                       clc                    ; 18
001420  2  69 01                    adc #$01               ; 69 01
001422  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
001425  2               
001425  2  A9 00                    lda #$00               ; A9 00
001427  2  8D BF 18                 sta L183E              ; Delta X old
00142A  2               
00142A  2  4C 59 14                 jmp L13EF              ; 4C EF 13
00142D  2               
00142D  2  AD D1 18     L13C3:      lda L1850              ; AD 50 18
001430  2  C9 00                    cmp #$00               ; C9 00
001432  2  D0 0A                    bne L13D4              ; D0 0A
001434  2               
001434  2  AD BF 18                 lda L183E              ; Delta X old
001437  2  C9 01                    cmp #$01               ; C9 01
001439  2  D0 03                    bne L13D4              ; D0 03
00143B  2  20 F8 17                 jsr L1772              ; Check movement to the right
00143E  2               
00143E  2  AD BF 18     L13D4:      lda L183E              ; Delta X old
001441  2  C9 FE                    cmp #$FE               ; C9 FE
001443  2  D0 11                    bne L13EC              ; D0 11
001445  2               
001445  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
001448  2  38                       sec                    ; 38
001449  2  E9 01                    sbc #$01               ; E9 01
00144B  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
00144E  2  A9 00                    lda #$00               ; A9 00
001450  2  8D BF 18                 sta L183E              ; Delta X old
001453  2  4C 59 14                 jmp L13EF              ; 4C EF 13
001456  2               
001456  2  4C 6F 14     L13EC:      jmp L1405              ; 4C 05 14
001459  2               
001459  2  AD BC 18     L13EF:      lda L183B              ; Y-coordinaat Miner in pixels old
00145C  2  CD CD 18                 cmp L184C              ; CD 4C 18
00145F  2  D0 0E                    bne L1405              ; D0 0E
001461  2  AD CE 18                 lda L184D              ; Miner jump position
001464  2  C9 00                    cmp #$00               ; C9 00
001466  2  D0 07                    bne L1405              ; D0 07
001468  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
00146B  2  8D BC 18                 sta L183B              ; Y-coordinaat Miner in pixels old
00146E  2  60                       rts                    ; 60
00146F  2               
00146F  2  AE BB 18     L1405:      ldx L183A              ; X-coordinaat Miner in pixels old
001472  2  AC BC 18                 ldy L183B              ; Y-coordinaat Miner in pixels old
001475  2  A9 00                    lda #$00               ; A9 00
001477  2  20 EA 18                 jsr L1869              ; 20 69 18
00147A  2  20 61 27                 jsr L254D              ; Scroll conveyor
00147D  2               
00147D  2  A9 01                    lda #$01               ; A9 01
00147F  2  8D C7 18                 sta L1846              ; 8D 46 18
001482  2  AE BD 18                 ldx L183C              ; X-coordinaat Miner in pixels new
001485  2  AC BE 18                 ldy L183D              ; Y-coordinaat Miner in pixels new
001488  2  A9 01                    lda #$01               ; A9 01
00148A  2  20 EA 18                 jsr L1869              ; 20 69 18
00148D  2               
00148D  2  A9 00        L1423:      lda #$00               ; A9 00
00148F  2  85 77                    sta L0077              ; 85 77
001491  2  AD C1 18                 lda L1840              ; AD 40 18
001494  2  85 78                    sta L0078              ; 85 78
001496  2               
001496  2  A9 00                    lda #$00               ; A9 00
001498  2  85 79                    sta L0079              ; 85 79
00149A  2  A9 0D                    lda #$0D               ; A9 0D
00149C  2  85 7A                    sta L007A              ; 85 7A
00149E  2               
00149E  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
0014A1  2  29 03                    and #$03               ; 29 03
0014A3  2  4D C0 18                 eor L183F              ; Miner sprite nr
0014A6  2  85 75                    sta L0075              ; 85 75
0014A8  2               
0014A8  2  A2 00                    ldx #$00               ; A2 00
0014AA  2  E4 75        L1440:      cpx L0075              ; E4 75
0014AC  2  F0 11                    beq L1455              ; F0 11
0014AE  2               
0014AE  2  A5 77                    lda L0077              ; A5 77
0014B0  2  18                       clc                    ; 18
0014B1  2  69 40                    adc #$40               ; 69 40
0014B3  2  85 77                    sta L0077              ; 85 77
0014B5  2  A5 78                    lda L0078              ; A5 78
0014B7  2  69 00                    adc #$00               ; 69 00
0014B9  2  85 78                    sta L0078              ; 85 78
0014BB  2               
0014BB  2  E8                       inx                    ; E8
0014BC  2               
0014BC  2  4C AA 14                 jmp L1440              ; 4C 40 14
0014BF  2               
0014BF  2               ;--------------------------------------------
0014BF  2               ; Plot Miner
0014BF  2               ;--------------------------------------------
0014BF  2               
0014BF  2  AE BD 18     L1455:      ldx L183C              ; X-coordinaat Miner in pixels new
0014C2  2  AC BE 18                 ldy L183D              ; Y-coordinaat Miner in pixels new
0014C5  2  A9 00                    lda #$00               ; Set plotmode
0014C7  2  20 00 10     L145D:      jsr L0F00              ; Plot sprite
0014CA  2  20 7B 15                 jsr L14FD              ; 20 FD 14
0014CD  2               
0014CD  2  AD BD 18     	lda L183C		; X-coordinaat Miner in pixels old
0014D0  2  4A           	lsr A
0014D1  2  4A           	lsr A
0014D2  2  38           	sec
0014D3  2  E9 04        	sbc #4
0014D5  2  8D 18 03     	sta XPOS
0014D8  2               
0014D8  2  AD BE 18     	lda L183D		; Y-coordinaat Miner in pixels old
0014DB  2  4A           	lsr A
0014DC  2  4A           	lsr A
0014DD  2  4A           	lsr A
0014DE  2  8D 19 03     	sta YPOS
0014E1  2               ;	inc YPOS
0014E1  2               
0014E1  2               ;            lda #$22-4               ; A9 22
0014E1  2               ;	sta XPOS
0014E1  2               ;           lda #22               ; A9 17
0014E1  2               ;	sta YPOS
0014E1  2               
0014E1  2  20 47 15     	jsr L14D3		; Check lb + rb hit
0014E4  2               
0014E4  2  A9 08        	lda #$08               ; Move cursor forward 1 position
0014E6  2  20 10 3A     	jsr OSWRCH             ; 20 EE FF
0014E9  2  A9 0A        	lda #$0a               ; Move cursor forward 1 position
0014EB  2  20 10 3A     	jsr OSWRCH             ; 20 EE FF
0014EE  2  20 47 15     	jsr L14D3		; Check lb + rb hit
0014F1  2               
0014F1  2  AD BE 18     	lda L183D              ; Y-coordinaat Miner in pixels new
0014F4  2  29 07        	and #$07               ; 29 07
0014F6  2  C9 00        	cmp #$00               ; C9 00
0014F8  2  F0 08        	beq L148E              ; F0 08
0014FA  2               
0014FA  2  A9 08        	lda #$08               ; Move cursor forward 1 position ????
0014FC  2  20 10 3A     	jsr OSWRCH             ; 20 EE FF
0014FF  2  20 47 15     	jsr L14D3		; Check lb + rb hit
001502  2               
001502  2  A2 00        L148E:      ldx #$00               ; A2 00
001504  2  B5 77        L1490:      lda L0077,X            ; B5 77
001506  2  9D C3 18                 sta L1842,X            ; 9D 42 18
001509  2  E8                       inx                    ; E8
00150A  2  E0 04                    cpx #$04               ; E0 04
00150C  2  D0 F6                    bne L1490              ; D0 F6
00150E  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
001511  2  8D BB 18                 sta L183A              ; X-coordinaat Miner in pixels old
001514  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
001517  2  8D BC 18                 sta L183B              ; Y-coordinaat Miner in pixels old
00151A  2  60                       rts                    ; 60
00151B  2               
00151B  2               ;-------------------------------------------
00151B  2               ; Read char + 1 char right
00151B  2               ;-------------------------------------------
00151B  2               
00151B  2               L14A7:
00151B  2               
00151B  2               ;	jsr marker
00151B  2               
00151B  2  A9 87                    lda #$87               ; Read char at current position in X
00151D  2  20 E1 3A                 jsr OSBYTE             ; 20 F4 FF
001520  2  8E CA 18                 stx L1849              ; Char at current position
001523  2               ;	cpx #$90
001523  2               ;	bne go_on
001523  2               ;	jsr $fe94
001523  2               
001523  2               go_on:
001523  2  A9 09                    lda #$09               ; Move cursor forward 1 position
001525  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001528  2               
001528  2               ;	jsr marker
001528  2               
001528  2  A9 87                    lda #$87               ; Read char at current position in X
00152A  2  20 E1 3A                 jsr OSBYTE             ; 20 F4 FF
00152D  2  8E CB 18                 stx L184A              ; 8E 4A 18
001530  2               ;	cpx #$90
001530  2               ;	bne go_on2
001530  2               ;	jsr $fe94
001530  2               go_on2:
001530  2  60                       rts                    ; 60
001531  2               
001531  2               ;-------------------------------------------
001531  2               ; Read char + 1 char down
001531  2               ;-------------------------------------------
001531  2               
001531  2               L14BD:
001531  2  A9 87                    lda #$87               ; Read char at current position in X
001533  2  20 E1 3A                 jsr OSBYTE             ; 20 F4 FF
001536  2  8E CA 18                 stx L1849              ; Char at current position
001539  2               
001539  2  A9 0A                    lda #$0A               ; Move cursor down 1 position
00153B  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
00153E  2               
00153E  2  A9 87                    lda #$87               ; Read character at cursor position in X
001540  2  20 E1 3A                 jsr OSBYTE             ; 20 F4 FF
001543  2  8E CB 18                 stx L184A              ; 8E 4A 18
001546  2               
001546  2  60                       rts                    ; 60
001547  2               
001547  2               ;-------------------------------------------
001547  2               ; Read char + 1 char right
001547  2               ;-------------------------------------------
001547  2               
001547  2               L14D3:
001547  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
00154A  2               
00154A  2  A9 08                    lda #$08               ; Move cursor back 1 position
00154C  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
00154F  2               
00154F  2               
00154F  2  AD CA 18                 lda L1849              ; Char at current position
001552  2  20 61 15                 jsr L14EC              ; Check hit character
001555  2               
001555  2               ;???
001555  2  A9 09                    lda #$09               ; Move cursor forward 1 position
001557  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
00155A  2               ;???
00155A  2               
00155A  2  AD CB 18                 lda L184A              ; AD 4A 18
00155D  2  20 61 15                 jsr L14EC              ; Check hit character
001560  2               
001560  2  60           	rts
001561  2               
001561  2               ;--------------------------------------------
001561  2               ; Check hit character
001561  2               ;--------------------------------------------
001561  2               
001561  2               L14EC:
001561  2  C9 9B                    cmp #$9B               ; Check hit bush
001563  2  D0 03                    bne L14ED
001565  2  4C C9 15     	jmp L1550              ; Death if hit
001568  2               L14ED:
001568  2  C9 9C                    cmp #$9c               ; Check hit rock1
00156A  2  D0 03                    bne L14EE
00156C  2  4C C9 15     	jmp L1550              ; Death if hit
00156F  2               L14EE:
00156F  2  C9 90                    cmp #$90               ; Check hit key
001571  2  F0 35                    beq L152F              ; Add points if hit
001573  2               
001573  2  C9 98                    cmp #$98               ; Check hit switch
001575  2  D0 03                    bne L14EF
001577  2  4C CE 15     	jmp L1555              ; F0 59
00157A  2               L14EF:
00157A  2  60                       rts                    ; 60
00157B  2               
00157B  2               ;--------------------------------------------
00157B  2               ; Check hit bush, rock
00157B  2               ;--------------------------------------------
00157B  2               
00157B  2               L14FD:
00157B  2  A9 1E                    lda #$22-4               ; A9 22
00157D  2  8D 18 03     	sta XPOS
001580  2  A9 16                    lda #22               ; A9 17
001582  2  8D 19 03     	sta YPOS
001585  2               
001585  2               L150C:
001585  2  A9 87                    lda #$87               ; Read char at current position in X
001587  2  20 E1 3A                 jsr OSBYTE             ; 20 F4 FF
00158A  2               
00158A  2  E0 00                    cpx #$00               ; E0 00
00158C  2  F0 15                    beq L152A              ; F0 15
00158E  2               
00158E  2  E0 9B                    cpx #$9B               ; Check hit bush
001590  2  F0 37                    beq L1550              ; Death if hit
001592  2               
001592  2  E0 9C                    cpx #$9C               ; Check hit rock1
001594  2  F0 33                    beq L1550              ; Death if hit
001596  2               
001596  2  A9 09                    lda #$09               ; Move cursor forward 1 position
001598  2  20 10 3A     L151F:      jsr OSWRCH             ; 20 EE FF
00159B  2               
00159B  2  AD 18 03                 lda L0318              ; AD 18 03
00159E  2  C9 00                    cmp #$00               ; C9 00
0015A0  2  D0 E3                    bne L150C              ; D0 E3
0015A2  2  60                       rts                    ; 60
0015A3  2               
0015A3  2  A9 20        L152A:      lda #$20               ; A9 20
0015A5  2  4C 98 15                 jmp L151F              ; 4C 1F 15
0015A8  2               
0015A8  2               ;--------------------------------------------
0015A8  2               ; Hit key
0015A8  2               ;--------------------------------------------
0015A8  2               
0015A8  2               L152F:
0015A8  2  A9 20                    lda #$20              ; Print space
0015AA  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
0015AD  2               
0015AD  2               
0015AD  2  CE 24 31                 dec L2FFF              ; Nr of keys
0015B0  2               
0015B0  2  A9 08                    lda #$08               ; Move cursor back 1 position
0015B2  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
0015B5  2               
0015B5  2  AD 18 03                 lda L0318              ; AD 18 03
0015B8  2  8D E8 18                 sta L1867              ; 8D 67 18
0015BB  2  AD 19 03                 lda L0319              ; AD 19 03
0015BE  2  8D E9 18                 sta L1868              ; 8D 68 18
0015C1  2               
0015C1  2  A9 63                    lda #$63               ; A9 63
0015C3  2  20 5D 43                 jsr L673C              ; 20 3C 67
0015C6  2               
0015C6  2  4C 0D 16                 jmp L159B              ; 4C 9B 15
0015C9  2               
0015C9  2               ;--------------------------------------------
0015C9  2               ; Hit rock,bush
0015C9  2               ;--------------------------------------------
0015C9  2               
0015C9  2               L1550:
0015C9  2  4C FF 43                 jmp L67D6              ; Death
0015CC  2  EA                       nop                    ; EA
0015CD  2  EA                       nop                    ; EA
0015CE  2               
0015CE  2               ;--------------------------------------------
0015CE  2               ; Hit switch
0015CE  2               ;--------------------------------------------
0015CE  2               
0015CE  2               L1555:
0015CE  2  A9 01        	lda #1			; jsr L0040
0015D0  2  85 9F        	sta L009F
0015D2  2               
0015D2  2               ; Save XPOS and YPOS
0015D2  2               
0015D2  2  AD 18 03     	lda L0318
0015D5  2  8D E8 18     	sta L1867              ; 8D 67 18
0015D8  2  AD 19 03     	lda L0319              ; AD 19 03
0015DB  2  8D E9 18     	sta L1868              ; 8D 68 18
0015DE  2               
0015DE  2  A9 80        	lda #$80
0015E0  2  8D D0 3E     	sta shadow_print
0015E3  2  20 BA 33     	jsr L0060		; Print turned switch and hole in wall
0015E6  2  0E D0 3E     	asl shadow_print
0015E9  2               
0015E9  2               ; Check hit left or right switch
0015E9  2               
0015E9  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
0015EC  2  C9 50        	cmp #$50               ; C9 50
0015EE  2  90 1D        	bcc L159B              ; Hit left switch
0015F0  2               
0015F0  2               ; Hit right switch
0015F0  2               
0015F0  2  A9 01        	lda #$01               ; A9 01
0015F2  2  8D B3 19     	sta L197F              ; Monster falling flag
0015F5  2               
0015F5  2  A9 80        	lda #$80
0015F7  2  8D D0 3E     	sta shadow_print
0015FA  2  20 97 33     	jsr L0050
0015FD  2               
0015FD  2               ; Erase Kong + floor Kong (3 lines)
0015FD  2               
0015FD  2  A0 02        	ldy #$02               ; A0 02
0015FF  2               L1587:
0015FF  2  20 A1 33     	jsr L0053
001602  2  88           	dey                    ; 88
001603  2  D0 FA        	bne L1587              ; D0 F1
001605  2               
001605  2  0E D0 3E     	asl shadow_print
001608  2               
001608  2  A9 60        	lda #$60               ; Set RTS instruction in Kong plot routine
00160A  2  8D 22 1A     	sta L19EE              ; 8D EE 19
00160D  2               
00160D  2               ; Restore XPOS and YPOS
00160D  2               
00160D  2               L159B:
00160D  2  AD E8 18     	lda L1867              ; AD 67 18
001610  2  8D 18 03     	sta XPOS
001613  2  AD E9 18     	lda L1868              ; AD 68 18
001616  2  8D 19 03     	sta YPOS
001619  2  60           	rts
00161A  2               
00161A  2               ;--------------------------------------------
00161A  2               ; Check if hit solid floor
00161A  2               ;
00161A  2               ;  .. .. 5f .. .. 80 .. .. 90 .. .. 95 .. ..
00161A  2               ;  00 00 01 00 00 01 01 01 00 00 00 01 01 01
00161A  2               ;--------------------------------------------
00161A  2               
00161A  2               L15AC:
00161A  2  C9 95        	    cmp #$95              ; If char>$95
00161C  2  F0 10        	beq L15BC
00161E  2               
00161E  2  C9 9C        	cmp #$9c
001620  2  B0 0C        	bcs L15BC              ; Makes miner fall through bush!!
001622  2               
001622  2  C9 5F                    cmp #$5F               ; If char=$5f
001624  2  F0 08                    beq L15BC              ; Jump
001626  2               
001626  2  C9 80                    cmp #$80               ; If char<$80
001628  2  90 0D                    bcc L15C5              ; Jump
00162A  2               
00162A  2  C9 90                    cmp #$90               ; If char>$90
00162C  2  B0 09                    bcs L15C5              ; Jump
00162E  2               
00162E  2  AD BC 18     L15BC:      lda L183B              ; Y-coordinaat Miner in pixels old
001631  2  8D CD 18                 sta L184C              ; 8D 4C 18
001634  2  A9 01                    lda #$01               ; A9 01
001636  2  60                       rts                    ; 60
001637  2               
001637  2  A9 00        L15C5:      lda #$00               ; A9 00
001639  2  60                       rts                    ; 60
00163A  2               
00163A  2               ;--------------------------------------------
00163A  2               ; Check if hit sinking floor
00163A  2               ;
00163A  2               ;  .. .. 5f .. .. 82 .. .. 8a .. ..
00163A  2               ;  00 00 01 00 00 01 01 01 01 00 00 
00163A  2               ;--------------------------------------------
00163A  2               
00163A  2  C9 5F        L15C8:      cmp #$5F               ; C9 5F
00163C  2  F0 08                    beq L15D4              ; F0 08
00163E  2               
00163E  2  C9 82                    cmp #$82               ; C9 82
001640  2  90 07                    bcc L15D7              ; 90 07
001642  2               
001642  2  C9 8A                    cmp #$8A               ; C9 8A
001644  2  B0 03                    bcs L15D7              ; B0 03
001646  2               
001646  2  A9 01        L15D4:      lda #$01               ; A9 01
001648  2  60                       rts                    ; 60
001649  2               
001649  2  A9 00        L15D7:      lda #$00               ; A9 00
00164B  2  60                       rts                    ; 60
00164C  2               
00164C  2               ;--------------------------------------------
00164C  2               ; Check if hit conveyor
00164C  2               ;
00164C  2               ;  .. .. 8b .. .. 8f .. ..
00164C  2               ;  00 00 01 01 01 01 00 00 
00164C  2               ;--------------------------------------------
00164C  2               
00164C  2  C9 8B        L15DA:      cmp #$8B               ; C9 8B
00164E  2  90 07                    bcc L15E5              ; 90 07
001650  2               
001650  2  C9 8F                    cmp #$8F               ; C9 8F
001652  2  B0 03                    bcs L15E5              ; B0 03
001654  2               
001654  2  A9 01                    lda #$01               ; A9 01
001656  2  60                       rts                    ; 60
001657  2               
001657  2  A9 00        L15E5:      lda #$00               ; A9 00
001659  2  60                       rts                    ; 60
00165A  2               
00165A  2               ;--------------------------------------------
00165A  2               ;
00165A  2               ;--------------------------------------------
00165A  2               
00165A  2  AD CF 18     L15E8:      lda L184E              ; Delta X new
00165D  2  C9 00                    cmp #$00               ; C9 00
00165F  2  D0 06                    bne L15F5              ; D0 06
001661  2               
001661  2  A9 01                    lda #$01               ; A9 01
001663  2  8D C8 18                 sta L1847              ; 8D 47 18
001666  2               
001666  2  60                       rts                    ; 60
001667  2               
001667  2               ; Check hit conveyor while landing
001667  2               
001667  2               L15F5:
001667  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
00166A  2  4A           	lsr A                  ; 4A
00166B  2  4A           	lsr A                  ; 4A
00166C  2  38           	sec
00166D  2  E9 04        	sbc #4
00166F  2  8D 18 03     	sta XPOS
001672  2               
001672  2  AD BC 18     	lda L183B              ; Y-coordinaat Miner in pixels old
001675  2  4A           	lsr A                  ; 4A
001676  2  4A           	lsr A                  ; 4A
001677  2  4A           	lsr A                  ; 4A
001678  2  18           	clc                    ; 18
001679  2  69 02        	adc #$02               ; 69 02
00167B  2  8D 19 03     	sta YPOS
00167E  2               
00167E  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
001681  2  AD CA 18                 lda L1849              ; Char at current position
001684  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
001687  2  C9 01                    cmp #$01               ; C9 01
001689  2  F0 0B                    beq L1626              ; F0 0B
00168B  2               
00168B  2  AD CB 18                 lda L184A              ; AD 4A 18
00168E  2  20 4C 16                 jsr L15DA              ; Check hit conveyor
001691  2  C9 01                    cmp #$01               ; C9 01
001693  2  F0 01                    beq L1626              ; F0 01
001695  2               
001695  2  60                       rts                    ; 60
001696  2               
001696  2  A9 01        L1626:      lda #$01               ; A9 01
001698  2  8D C9 18                 sta L1848              ; Start walking on conveyor
00169B  2  AD CF 18                 lda L184E              ; Delta X new
00169E  2  8D BF 18                 sta L183E              ; Delta X old
0016A1  2  4C AC 12                 jmp L1238              ; 4C 38 12
0016A4  2               
0016A4  2               ;--------------------------------------------
0016A4  2               ; Miner is jumping
0016A4  2               ;--------------------------------------------
0016A4  2               
0016A4  2  80 70 60 50  jump_snd:	.byte $80,$70,$60,$50,$40,$30,$20,$10
0016A8  2  40 30 20 10  
0016AC  2               
0016AC  2               
0016AC  2               L1634:
0016AC  2  AD CC 18     	lda L184B
0016AF  2  F0 12        	beq no_jump_sound
0016B1  2               
0016B1  2  AD CE 18     	lda L184D
0016B4  2  C9 08        	cmp #8
0016B6  2  B0 0B        	bcs no_jump_sound
0016B8  2  29 07        	and #7
0016BA  2  AA           	tax
0016BB  2  BD A4 16     	lda jump_snd,x
0016BE  2  A0 10        	ldy #$10
0016C0  2  20 B1 34     	jsr sound
0016C3  2               	
0016C3  2               ;	lda #$02
0016C3  2               ;	ldx #$64
0016C3  2               ;	ldy #$02
0016C3  2               ;	jmp L68AC		; Make sound
0016C3  2               
0016C3  2               no_jump_sound:
0016C3  2  AD CE 18                 lda L184D              ; Miner jump position
0016C6  2  C9 11                    cmp #$11               ; Check highest position
0016C8  2  90 03                    bcc L163E              ; If not reached, skip
0016CA  2  4C 83 17                 jmp L16F8              ; Top of jump reached, jump
0016CD  2               
0016CD  2               L163E:
0016CD  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
0016D0  2  29 07                    and #$07               ; 29 07
0016D2  2  C9 00                    cmp #$00               ; C9 00
0016D4  2  F0 03                    beq L164A              ; F0 03
0016D6  2  4C 5A 17                 jmp L16CF              ; 4C CF 16
0016D9  2               
0016D9  2               ; Check sealing for wall while jumping
0016D9  2               
0016D9  2               L164A:
0016D9  2  AD BB 18     	lda L183A			; X-coordinaat Miner in pixels old
0016DC  2  4A           	lsr A                  ; 4A
0016DD  2  4A           	lsr A                  ; 4A
0016DE  2  38           	sec
0016DF  2  E9 04        	sbc #4
0016E1  2  8D 18 03     	sta XPOS
0016E4  2               
0016E4  2  AD BC 18     	lda L183B              ; Y-coordinaat Miner in pixels old
0016E7  2  38           	sec                    ; 38
0016E8  2  E9 02        	sbc #$02               ; E9 02
0016EA  2  4A           	lsr A                  ; 4A
0016EB  2  4A           	lsr A                  ; 4A
0016EC  2  4A           	lsr A                  ; 4A
0016ED  2  8D 19 03     	sta YPOS
0016F0  2               
0016F0  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
0016F3  2               
0016F3  2  AD CA 18                 lda L1849              ; Char at current position
0016F6  2  C9 8F                    cmp #$8F               ; Check hit wall
0016F8  2  F0 0A                    beq L1677              ; F0 0A
0016FA  2               
0016FA  2  AD CB 18                 lda L184A              ; AD 4A 18
0016FD  2  C9 8F                    cmp #$8F               ; Check hit wall
0016FF  2  F0 03                    beq L1677              ; F0 03
001701  2               
001701  2  4C 19 17                 jmp L168C              ; 4C 8C 16
001704  2               
001704  2  AD CE 18     L1677:      lda L184D              ; Miner jump position
001707  2  C9 09                    cmp #$09               ; C9 09
001709  2  B0 0E                    bcs L168C              ; B0 0E
00170B  2               
00170B  2  A9 11                    lda #$11               ; A9 11
00170D  2  38                       sec                    ; 38
00170E  2  ED CE 18                 sbc L184D              ; Miner jump position
001711  2  8D CE 18                 sta L184D              ; Miner jump position
001714  2               
001714  2  A9 00                    lda #$00               ; A9 00
001716  2  8D CF 18                 sta L184E              ; Delta X new
001719  2               
001719  2               L168C:
001719  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
00171C  2  29 07                    and #$07               ; 29 07
00171E  2  C9 00                    cmp #$00               ; C9 00
001720  2  D0 38                    bne L16CF              ; D0 3A
001722  2               
001722  2  AD CE 18                 lda L184D              ; Miner jump position
001725  2  C9 08                    cmp #$08               ; C9 08
001727  2  90 31                    bcc L16CF              ; 90 33
001729  2               
001729  2               ; Check floor while jumping for solid
001729  2               
001729  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
00172C  2  4A           	lsr A                  ; 4A
00172D  2  4A           	lsr A                  ; 4A
00172E  2  38           	sec
00172F  2  E9 04        	sbc #4
001731  2  8D 18 03     	sta XPOS
001734  2               
001734  2  AD BC 18     	lda L183B              ; Y-coordinaat Miner in pixels old
001737  2  18           	clc                    ; 18
001738  2  69 03        	adc #$03               ; 69 03
00173A  2  4A           	lsr A                  ; 4A
00173B  2  4A           	lsr A                  ; 4A
00173C  2  4A           	lsr A                  ; 4A
00173D  2  18           	clc                    ; 18
00173E  2  69 02        	adc #$02               ; 69 02
001740  2  8D 19 03     	sta YPOS
001743  2               
001743  2  20 1B 15                 jsr L14A7              ; Read char + 1 char right
001746  2  AD CA 18                 lda L1849              ; Char at current position
001749  2  20 1A 16                 jsr L15AC              ; Check hit solid floor
00174C  2  C9 01                    cmp #$01               ; C9 01
00174E  2  F0 33                    beq L16F8              ; F0 33
001750  2               
001750  2  AD CB 18                 lda L184A              ; AD 4A 18
001753  2  20 1A 16                 jsr L15AC              ; Check hit solid floor
001756  2  C9 01                    cmp #$01               ; C9 01
001758  2  F0 29                    beq L16F8              ; F0 29
00175A  2               
00175A  2               ; Miner still falling, calculate new coordinates
00175A  2               
00175A  2  AD CE 18     L16CF:      lda L184D              ; Incr.miner jump position
00175D  2  18                       clc
00175E  2  69 01                    adc #$01
001760  2  8D CE 18                 sta L184D
001763  2               
001763  2  AC CE 18                 ldy L184D              ; Set pointer
001766  2               
001766  2  AD BE 18                 lda L183D              ; Get Y-coordinaat Miner in pixels new
001769  2  38                       sec
00176A  2  F9 D6 18                 sbc L1855,Y            ; Substract delta Y-jump
00176D  2  8D BE 18                 sta L183D              ; Set Y-coordinaat Miner in pixels new
001770  2               
001770  2  AD BD 18                 lda L183C              ; Get X-coordinaat Miner in pixels new
001773  2  18                       clc                    ; 18
001774  2  6D CF 18                 adc L184E              ; Delta X new
001777  2  8D BD 18                 sta L183C              ; Set X-coordinaat Miner in pixels new
00177A  2               
00177A  2  AD CF 18                 lda L184E              ; Get delta X new
00177D  2  8D BF 18                 sta L183E              ; Set delta X old
001780  2               
001780  2  4C DF 13                 jmp L1375              ; 4C 75 13
001783  2               
001783  2               ;--------------------------------------------
001783  2               ; Top of jump reached, fall
001783  2               ;--------------------------------------------
001783  2               
001783  2  A9 00        L16F8:      lda #$00
001785  2  8D CC 18                 sta L184B              ; Miner jump flag
001788  2  8D CE 18                 sta L184D              ; Miner jump position
00178B  2  20 61 27                 jsr L254D              ; Scroll conveyor
00178E  2  20 5A 16                 jsr L15E8              ; 20 E8 15
001791  2  4C 71 11                 jmp L109C              ; 4C 9C 10
001794  2               
001794  2               ;--------------------------------------------
001794  2               ; Check movement to the left
001794  2               ;--------------------------------------------
001794  2               
001794  2               L1709:
001794  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
001797  2  4A           	lsr A                  ; 4A
001798  2  4A           	lsr A                  ; 4A
001799  2  38           	sec
00179A  2  E9 05        	sbc #$5               ; E9 01
00179C  2  8D 18 03     	sta XPOS
00179F  2               
00179F  2  AD BE 18     	lda L183D              ; Y-coordinaat Miner in pixels new
0017A2  2  18           	clc                    ; 18
0017A3  2  6D D2 18     	adc L1851              ; 6D 51 18
0017A6  2  4A           	lsr A                  ; 4A
0017A7  2  4A           	lsr A                  ; 4A
0017A8  2  4A           	lsr A                  ; 4A
0017A9  2  8D 19 03     	sta YPOS
0017AC  2               
0017AC  2  20 31 15                 jsr L14BD              ; Read char + 1 char down
0017AF  2               
0017AF  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
0017B2  2  29 07                    and #$07               ; 29 07
0017B4  2  C9 00                    cmp #$00               ; C9 00
0017B6  2  F0 0E                    beq L1740              ; F0 0E
0017B8  2               
0017B8  2  AD CB 18                 lda L184A              ; AD 4A 18
0017BB  2  8D 28 11                 sta L105F              ; 8D 5F 10
0017BE  2               
0017BE  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
0017C0  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
0017C3  2               
0017C3  2  20 31 15                 jsr L14BD              ; Read char + 1 char down
0017C6  2               
0017C6  2  AD 28 11     L1740:      lda L105F              ; AD 5F 10
0017C9  2  C9 20                    cmp #$20               ; C9 20
0017CB  2  D0 0F                    bne L1756              ; D0 0F
0017CD  2               
0017CD  2  AD CB 18                 lda L184A              ; AD 4A 18
0017D0  2  C9 20                    cmp #$20               ; C9 20
0017D2  2  D0 08                    bne L1756              ; D0 08
0017D4  2               
0017D4  2  AD CE 18                 lda L184D              ; Miner jump position
0017D7  2  C9 05                    cmp #$05               ; C9 05
0017D9  2  D0 01                    bne L1756              ; D0 01
0017DB  2               
0017DB  2  60                       rts                    ; 60
0017DC  2               
0017DC  2  AD CA 18     L1756:      lda L1849              ; Char at current position
0017DF  2  C9 8F                    cmp #$8F               ; Check if wall
0017E1  2  F0 0F                    beq L176C              ; If so decrement X-pos with 2
0017E3  2               
0017E3  2  AD CB 18                 lda L184A              ; Char at 1 position down
0017E6  2  C9 8F                    cmp #$8F               ; Check if wall
0017E8  2  F0 08                    beq L176C              ; If so decrement X-pos with 2
0017EA  2               
0017EA  2  AD 28 11                 lda L105F              ; Char at 
0017ED  2  C9 8F                    cmp #$8F               ; Check if wall
0017EF  2  F0 01                    beq L176C              ; If so decrement X-pos with 2
0017F1  2  60                       rts
0017F2  2               
0017F2  2  A9 FD        L176C:      lda #$FD               ; Set -3
0017F4  2  8D BF 18                 sta L183E              ; Delta X old
0017F7  2  60                       rts
0017F8  2               
0017F8  2               ;--------------------------------------------
0017F8  2               ; Check movement to the right
0017F8  2               ;--------------------------------------------
0017F8  2               
0017F8  2               L1772:
0017F8  2  AD BB 18     	lda L183A              ; X-coordinaat Miner in pixels old
0017FB  2  4A           	lsr A                  ; 4A
0017FC  2  4A           	lsr A                  ; 4A
0017FD  2  38           	sec
0017FE  2  E9 02        	sbc #$02
001800  2  8D 18 03     	sta XPOS
001803  2               
001803  2  AD BE 18     	lda L183D              ; Y-coordinaat Miner in pixels new
001806  2  18           	clc                    ; 18
001807  2  6D D2 18     	adc L1851              ; 6D 51 18
00180A  2  4A           	lsr A                  ; 4A
00180B  2  4A           	lsr A                  ; 4A
00180C  2  4A           	lsr A                  ; 4A
00180D  2  8D 19 03     	sta YPOS
001810  2               
001810  2  20 31 15                 jsr L14BD              ; Read char + 1 char down
001813  2               
001813  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
001816  2  29 07                    and #$07               ; 29 07
001818  2  C9 00                    cmp #$00               ; C9 00
00181A  2  F0 0E                    beq L17A9              ; F0 0E
00181C  2               
00181C  2  AD CB 18                 lda L184A              ; AD 4A 18
00181F  2  8D 28 11                 sta L105F              ; 8D 5F 10
001822  2               
001822  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
001824  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001827  2               
001827  2  20 31 15                 jsr L14BD              ; Read char + 1 char down
00182A  2               
00182A  2  AD 28 11     L17A9:      lda L105F              ; AD 5F 10
00182D  2  C9 20                    cmp #$20               ; C9 20
00182F  2  D0 0F                    bne L17BF              ; D0 0F
001831  2               
001831  2  AD CB 18                 lda L184A              ; AD 4A 18
001834  2  C9 20                    cmp #$20               ; C9 20
001836  2  D0 08                    bne L17BF              ; D0 08
001838  2               
001838  2  AD CE 18                 lda L184D              ; Miner jump position
00183B  2  C9 05                    cmp #$05               ; C9 05
00183D  2  D0 01                    bne L17BF              ; D0 01
00183F  2               
00183F  2  60                       rts                    ; 60
001840  2               
001840  2  AD CA 18     L17BF:      lda L1849              ; Char at current position
001843  2  C9 8F                    cmp #$8F               ; Check if wall
001845  2  F0 0F                    beq L17D5              ; F0 0F
001847  2               
001847  2  AD CB 18                 lda L184A              ; AD 4A 18
00184A  2  C9 8F                    cmp #$8F               ; Check if wall
00184C  2  F0 08                    beq L17D5              ; F0 08
00184E  2               
00184E  2  AD 28 11                 lda L105F              ; AD 5F 10
001851  2  C9 8F                    cmp #$8F               ; Check if wall
001853  2  F0 01                    beq L17D5              ; F0 01
001855  2               
001855  2  60                       rts                    ; 60
001856  2               
001856  2  A9 FE        L17D5:      lda #$FE               ; Set -2
001858  2  8D BF 18                 sta L183E              ; Delta X old
00185B  2  60                       rts                    ; 60
00185C  2               
00185C  2               ;--------------------------------------------
00185C  2               
00185C  2  AD D5 18     L17DB:      lda L1854              ; AD 54 18
00185F  2  C9 01                    cmp #$01               ; C9 01
001861  2  D0 14                    bne L17F6              ; D0 14
001863  2  AD C0 18                 lda L183F              ; Miner sprite nr
001866  2  C9 03                    cmp #$03               ; C9 03
001868  2  D0 0D                    bne L17F6              ; D0 0D
00186A  2  A9 05                    lda #$05               ; A9 05
00186C  2  8D C1 18                 sta L1840              ; 8D 40 18
00186F  2  A9 00                    lda #$00               ; A9 00
001871  2  8D C0 18                 sta L183F              ; Miner sprite nr
001874  2  4C DF 13                 jmp L1375              ; 4C 75 13
001877  2               
001877  2  AD D5 18     L17F6:      lda L1854              ; AD 54 18
00187A  2  C9 01                    cmp #$01               ; C9 01
00187C  2  D0 11                    bne L180E              ; D0 11
00187E  2  AD D5 18                 lda L1854              ; AD 54 18
001881  2  8D BF 18                 sta L183E              ; Delta X old
001884  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
001887  2  18                       clc                    ; 18
001888  2  6D D5 18                 adc L1854              ; 6D 54 18
00188B  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
00188E  2  60                       rts                    ; 60
00188F  2               
00188F  2  AD D5 18     L180E:      lda L1854              ; AD 54 18
001892  2  C9 FF                    cmp #$FF               ; C9 FF
001894  2  D0 14                    bne L1829              ; D0 14
001896  2  AD C0 18                 lda L183F              ; Miner sprite nr
001899  2  C9 00                    cmp #$00               ; C9 00
00189B  2  D0 0D                    bne L1829              ; D0 0D
00189D  2  A9 06                    lda #$06               ; A9 06
00189F  2  8D C1 18                 sta L1840              ; 8D 40 18
0018A2  2  A9 03                    lda #$03               ; A9 03
0018A4  2  8D C0 18                 sta L183F              ; Miner sprite nr
0018A7  2  4C DF 13                 jmp L1375              ; 4C 75 13
0018AA  2               
0018AA  2  AD D5 18     L1829:      lda L1854              ; AD 54 18
0018AD  2  8D BF 18                 sta L183E              ; Delta X old
0018B0  2  AD BD 18                 lda L183C              ; X-coordinaat Miner in pixels new
0018B3  2  18                       clc                    ; 18
0018B4  2  6D D5 18                 adc L1854              ; 6D 54 18
0018B7  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
0018BA  2  60                       rts                    ; 60
0018BB  2               
0018BB  2  18           L183A:      .byte $18		; X-coordinaat Miner in pixels old
0018BC  2  20           L183B:      .byte $20		; Y-coordinaat Miner in pixels old
0018BD  2               
0018BD  2  18           L183C:      .byte $18		; X-coordinaat Miner in pixels new
0018BE  2  20           L183D:      .byte $20		; Y-coordinaat Miner in pixels new
0018BF  2               
0018BF  2  EA           L183E:      .byte $EA		; Delta X old
0018C0  2  03           L183F:      .byte $03		; Miner sprite nr
0018C1  2  06           L1840:      .byte $06		; Direction, 5=right, 6=left
0018C2  2  EA           L1841:      .byte $EA           ; Direction change 0=no change, 1=changed
0018C3  2               
0018C3  2  00           L1842:      .byte $00           ; Temp storage data/screen addresses
0018C4  2  00 00 00     L1843:      .byte $00,$00,$00
0018C7  2               
0018C7  2  EA           L1846:      .byte $EA
0018C8  2  EA           L1847:      .byte $EA
0018C9  2  EA           L1848:      .byte $EA		; Start walking on conveyor
0018CA  2  EA           L1849:      .byte $EA		; Char at current position
0018CB  2  EA           L184A:      .byte $EA
0018CC  2  EA           L184B:      .byte $EA		; Miner jump flag
0018CD  2  EA           L184C:      .byte $EA
0018CE  2  EA           L184D:      .byte $EA		; Miner jump position
0018CF  2  EA           L184E:      .byte $EA		; Delta X new
0018D0  2  EA           L184F:      .byte $EA		
0018D1  2  EA           L1850:      .byte $EA
0018D2  2  EA           L1851:      .byte $EA
0018D3  2  EA           L1852:      .byte $EA		; Move on conveyor flag
0018D4  2  EA           L1853:      .byte $EA		; Direction movement on conveyor
0018D5  2  FF           L1854:      .byte $FF
0018D6  2               
0018D6  2  EA 04 04 03  L1855:      .byte $EA,$04,$04,$03,$03,$02,$02,$01 ; Delta Y miner jump
0018DA  2  03 02 02 01  
0018DE  2  00 00 00 FF              .byte $00,$00,$00,$FF,$FE,$FE,$FD,$FD
0018E2  2  FE FE FD FD  
0018E6  2  FC FC                    .byte $FC,$FC
0018E8  2               
0018E8  2  00           L1867:      .byte $00           ; Temp X-pos
0018E9  2  EA           L1868:      .byte $EA           ; Temp Y-pos
0018EA  2               
0018EA  2               ;--------------------------------------------
0018EA  2               ; Move miner
0018EA  2               ; - Plotmode=0 -> Copy buffer to screen
0018EA  2               ; - Plotmode=1 -> Copy screen to buffer
0018EA  2               ;--------------------------------------------
0018EA  2               
0018EA  2               L1869:
0018EA  2  86 71        	stx L0071		; Current X-pos miner
0018EC  2  84 72        	sty L0072		; Current Y-pos miner
0018EE  2  85 70        	sta L0070		; Plotmode
0018F0  2               
0018F0  2               ; Calculate screenaddress and set address in subroutine at L196A
0018F0  2               
0018F0  2  8A           	txa
0018F1  2  29 FC        	and #$FC
0018F3  2  18           	clc
0018F4  2  6A           	ror a
0018F5  2  6A           	ror a
0018F6  2  38           	sec
0018F7  2  E9 04        	sbc #4
0018F9  2  85 71        	sta L0071		; Set column
0018FB  2               
0018FB  2  98           	tya
0018FC  2  29 F8        	and #$f8
0018FE  2  18           	clc
0018FF  2  6A           	ror a
001900  2  6A           	ror a
001901  2  6A           	ror a
001902  2  85 72        	sta L0072		; Set major row
001904  2               
001904  2  98           	tya
001905  2  29 07        	and #$07
001907  2  A8           	tay
001908  2  B9 CA 10     	lda scrtab,y
00190B  2  18           	clc
00190C  2  65 71        	adc L0071
00190E  2  8D A3 19     	sta L196E+1
001911  2  8D 9F 19     	sta L196B		; Set lb screenaddress
001914  2               
001914  2  A5 72        	lda L0072
001916  2  69 5C        	adc #>buffer		; Bufferaddress
001918  2  8D A4 19     	sta L196E+2
00191B  2  69 24        	adc #($8000-buffer)/256
00191D  2  8D A0 19     	sta L196C		; Set hb screenaddress
001920  2               
001920  2               ; If plotmode=1 -> Set JSR L1978
001920  2               
001920  2               L18B7:
001920  2  A9 AC        	lda #<L1978		; Copy screen to buffer
001922  2  8D 84 19     	sta L1933
001925  2  A9 19        	lda #>L1978
001927  2  8D 85 19     	sta L1934
00192A  2               
00192A  2  A9 B9        	lda #$B9		; Set LDA,Y instruction
00192C  2  8D 9E 19     	sta L196A		; Load screen
00192F  2  A9 9D        	lda #$9D		; Set STA,X instruction
001931  2  8D A2 19     	sta L196E		; Store buffer
001934  2               
001934  2               ; Check plotmode
001934  2               
001934  2  A5 70        	lda L0070              ; A5 70
001936  2  C9 01        	cmp #$01               ; C9 01
001938  2  F0 5F        	beq L194E		; L18E5              ; F0 14
00193A  2               
00193A  2               ; If plotmode=0 -> Set JSR L1972
00193A  2               
00193A  2  A9 A6        	lda #<L1972		; Copy buffer to screen
00193C  2  8D 84 19     	sta L1933
00193F  2  A9 19        	lda #>L1972
001941  2  8D 85 19     	sta L1934
001944  2               
001944  2  A9 99        	lda #$99		; Set STA,Y instruction
001946  2  8D 9E 19     	sta L196A		; Store screen
001949  2  A9 B9        	lda #$B9		; Set LDA,Y instruction
00194B  2  8D A2 19     	sta L196E		; Load buffer
00194E  2               
00194E  2               ; Settings done
00194E  2               
00194E  2               L18E5:
00194E  2  AD D3 18                 lda L1852              ; Move on conveyor flag
001951  2  C9 01                    cmp #$01               ; C9 01
001953  2  F0 26                    beq L192B              ; F0 3A
001955  2               
001955  2  A5 9F                    lda L009F              ; A5 9F
001957  2  C9 01                    cmp #$01               ; C9 01
001959  2  F0 20                    beq L192B              ; F0 34
00195B  2               
00195B  2  AD C2 18                 lda L1841              ; Direction change
00195E  2  C9 00                    cmp #$00               ; C9 00
001960  2  D0 19                    bne L192B              ; D0 2D
001962  2               
001962  2  A5 70                    lda L0070              ; A5 70
001964  2  C9 00        L1900:      cmp #$00               ; C9 00
001966  2  D0 13                    bne L192B              ; Jump if plotmode=1
001968  2               
001968  2  AD BB 18                 lda L183A              ; AD 3A 18
00196B  2  29 03                    and #$03               ; 29 03
00196D  2  4D C0 18                 eor L183F              ; 4D 3F 18
001970  2  C9 00                    cmp #$00               ; C9 00
001972  2  D0 07                    bne L192B              ; D0 1B
001974  2               
001974  2  AD C0 18                 lda L183F              ; AD 3F 18
001977  2  C9 03                    cmp #$03               ; C9 03
001979  2  F0 00                    beq L191F              ; F0 08
00197B  2               L191F:
00197B  2               
00197B  2               L192B:
00197B  2  A2 00                    ldx #$00               ; Copy toprow miner to buffer
00197D  2  BC CA 10     L1930:      ldy scrtab,x
001980  2  8E 9A 19                 stx L194F              ; 8E 4F 19
001983  2  20 FF FF     L1932:      jsr LFFFF              ; Adjustable code
001986  2  E8                       inx                    ; E8
001987  2  C8                       iny                    ; C8
001988  2  E0 20        L1937:      cpx #$20               ; Adjustable code
00198A  2  F0 0D                    beq L194E
00198C  2  E0 10        	cpx #$10
00198E  2  D0 ED        	bne L1930              ; D0 F7
001990  2  EE A0 19     	inc L196C
001993  2  EE A4 19     	inc L196E+2
001996  2  4C 7D 19     	jmp L1930
001999  2               L194E:
001999  2  A9 00                    lda #$00               ; A9 00
00199B  2  85 9F                    sta L009F              ; 85 9F
00199D  2               
00199D  2  60                       rts                    ; 60
00199E  2               
00199E  2               ;--------------------------------------------
00199E  2               
00199E  2  BD 25 31     L196A:      lda L3000,X            ; BD 00 30
0019A1  2  60                       rts                    ; 60
0019A2  2               
0019A2  2  B9 00 5C     L196E:      lda buffer,Y            ; B9 A0 6B
0019A5  2  60                       rts                    ; 60
0019A6  2               
0019A6  2  20 A2 19     L1972:      jsr L196E              ; 20 6E 19
0019A9  2  4C 9E 19     L1975:      jmp L196A              ; 4C 6A 19
0019AC  2               
0019AC  2  20 9E 19     L1978:      jsr L196A              ; 20 6A 19
0019AF  2  4C A2 19     L187B:      jmp L196E              ; 4C 6E 19
0019B2  2               
0019B2  2  00           L197E:      .byte $00
0019B3  2  00           L197F:      .byte $00		; Monster falling flag
0019B4  2               
0019B4  2               ;--------------------------------------------
0019B4  2               ; Plot monsters in levels
0019B4  2               ;--------------------------------------------
0019B4  2               
0019B4  2  A5 80        L1980:      lda L0080              ; Get level nr
0019B6  2               
0019B6  2  C9 05                    cmp #$05               ; C9 05
0019B8  2  F0 18                    beq L199E              ; Jump at level 5
0019BA  2               
0019BA  2  C9 08                    cmp #$08               ; C9 08
0019BC  2  F0 64                    beq L19EE              ; Jump at level 8
0019BE  2               
0019BE  2  C9 0C                    cmp #$0C               ; 
0019C0  2  F0 60                    beq L19EE              ; Jump at level 12
0019C2  2               
0019C2  2  C9 09                    cmp #$09               ; C9 09
0019C4  2  F0 09                    beq L199B              ; Jump at level 9
0019C6  2               
0019C6  2  C9 10                    cmp #$10               ; C9 10
0019C8  2  F0 04                    beq L199A              ; Jump at level 16
0019CA  2               
0019CA  2  C9 0B                    cmp #$0B               ; C9 0B
0019CC  2  B0 01                    bcs L199B              ; Jump at level >10
0019CE  2               
0019CE  2  60           L199A:      rts                    ; 60
0019CF  2               
0019CF  2               ;--------------------------------------------
0019CF  2               ; Entry level 9 + >10
0019CF  2               ;--------------------------------------------
0019CF  2               
0019CF  2  4C 5D 1A     L199B:      jmp L1A29              ; 4C 29 1A
0019D2  2               
0019D2  2               ;--------------------------------------------
0019D2  2               ; Entry level 5+8+12
0019D2  2               ;--------------------------------------------
0019D2  2               
0019D2  2               L199E:
0019D2  2  A9 FF        	lda #$FF
0019D4  2  8D 6F 11     	sta L109B		; Colour mask
0019D7  2               
0019D7  2  AD 7C 1C     	lda L1C48		; Vertical pos monster
0019DA  2  29 7F        	and #$7F		; Filter Y-pos
0019DC  2               	
0019DC  2  C9 60        	cmp #$60		; Check lower position monster
0019DE  2  F0 37        	beq L19E3		; Invert direction if reached
0019E0  2               
0019E0  2  C9 08        	cmp #$08		; Check upper position monster
0019E2  2  F0 33        	beq L19E3		; Invert direction if reached
0019E4  2               L19B0:
0019E4  2  AD 7C 1C     	lda L1C48		; Vertical pos monster
0019E7  2  29 80        	and #$80		; Filter direction bit
0019E9  2  C9 80        	cmp #$80
0019EB  2  D0 06        	bne L19BF		; Jump if rising
0019ED  2               
0019ED  2  EE 7C 1C     	inc L1C48		; Monster is falling
0019F0  2  4C F6 19     	jmp L19C2		; Plot vertical guard
0019F3  2               L19BF:
0019F3  2  CE 7C 1C     	dec L1C48		; Monster is rising
0019F6  2               
0019F6  2               ; plot vertical guard
0019F6  2               
0019F6  2               L19C2:
0019F6  2  A2 4C        	ldx #$4C		; X-pos 
0019F8  2               
0019F8  2  AD 7C 1C     	lda L1C48		; Vertical pos monster
0019FB  2  29 7F        	and #$7F		; Filter Y-pos
0019FD  2  A8           	tay			; Set Y-pos
0019FE  2  20 06 1A     	jsr L19D2		; Set sprite vars
001A01  2  A9 03        	lda #$03		; Set plot mode
001A03  2  4C 00 10     	jmp L0F00		; Plot sprite
001A06  2               
001A06  2               ; Set sprite vars
001A06  2               
001A06  2               L19D2:
001A06  2  A9 00        	lda #<L0400		; Set sprite data address
001A08  2  85 77        	sta L0077
001A0A  2  A9 04        	lda #>L0400
001A0C  2  85 78        	sta L0078
001A0E  2               
001A0E  2  A9 00        	lda #$00		; Set ???
001A10  2  85 79        	sta L0079
001A12  2  A9 2F        	lda #$2F
001A14  2  85 7A        	sta L007A
001A16  2  60           	rts
001A17  2               
001A17  2               ; Invert vertical direction monster
001A17  2               
001A17  2               L19E3:
001A17  2  AD 7C 1C     	lda L1C48		; Vertical pos monster
001A1A  2  49 80        	eor #$80		; Filter direction bit
001A1C  2  8D 7C 1C     	sta L1C48		; Set direction bit
001A1F  2               L19EB:
001A1F  2  4C E4 19     	jmp L19B0		; Return
001A22  2               
001A22  2               ;--------------------------------------------
001A22  2               ; Entry level 8+12
001A22  2               ;--------------------------------------------
001A22  2               
001A22  2               L19EE:
001A22  2  A9 FF        	lda #$FF
001A24  2  8D 6F 11     	sta L109B		; Colour mask
001A27  2               
001A27  2  EE 7D 1C     	inc L1C49		; Monster move delay counter
001A2A  2  AD 7D 1C     	lda L1C49		; Monster move delay counter
001A2D  2  29 08        	and #$08		; Move every 8 frames
001A2F  2  C9 08        	cmp #$08
001A31  2  F0 0B        	beq L1A0A		; Display monster 1
001A33  2               
001A33  2  A9 00        	lda #<L0400		; Sprite address monster 1
001A35  2  85 77        	sta L0077
001A37  2  A9 04        	lda #>L0400
001A39  2  85 78        	sta L0078
001A3B  2               
001A3B  2  4C 46 1A     	jmp L1A12		; Plot sprite
001A3E  2               L1A0A:
001A3E  2  A9 20        	lda #<(L0440)	; Sprite address monster 2
001A40  2  85 77        	sta L0077
001A42  2  A9 04        	lda #>(L0440)
001A44  2  85 78        	sta L0078
001A46  2               L1A12:
001A46  2  A2 4E        	ldx #$4E		; Set X-pos
001A48  2  A0 08        	ldy #$08		; Set Y-pos
001A4A  2  A9 03        	lda #$03		; Set plotmode
001A4C  2  4C 00 10     	jmp L0F00		; Plot sprite
001A4F  2               L1A1B:
001A4F  2  60           	rts
001A50  2               
001A50  2               ;--------------------------------------------
001A50  2               ; Called by level 9 + >10 
001A50  2               ;--------------------------------------------
001A50  2               
001A50  2               L1A1C:
001A50  2  A9 04        	lda #$04		; Set plotmode
001A52  2  8D 5E 1B     	sta L1B2A
001A55  2               
001A55  2  A9 05        	lda #$05		; Set plotmode
001A57  2  8D 1D 1B     	sta L1AE9
001A5A  2               
001A5A  2  4C 6D 1A     	jmp L1A39		; Jump
001A5D  2               
001A5D  2               ;--------------------------------------------
001A5D  2               ; Entry level 9 + >10 at L1A29
001A5D  2               ;--------------------------------------------
001A5D  2               
001A5D  2               L1A29:
001A5D  2  A5 80        	lda L0080		; Get level nr
001A5F  2  C9 13        	cmp #$13
001A61  2  F0 ED        	beq L1A1C		; Jump if level=19
001A63  2               
001A63  2  A9 02        	lda #$02		; Set plotmode
001A65  2  8D 1D 1B     	sta L1AE9
001A68  2               
001A68  2  A9 03        	lda #$03		; Set plotmode
001A6A  2  8D 5E 1B     	sta L1B2A
001A6D  2               L1A39:
001A6D  2  EE 7E 1C     	inc L1C4A		; Increment counter
001A70  2  AD 7E 1C     	lda L1C4A
001A73  2  29 03        	and #$03		; Mask 0-3
001A75  2  8D 7C 1C     	sta L1C48		; Set Sprite delay
001A78  2               
001A78  2  A2 00        	ldx #$00		; Reset animation pointer
001A7A  2               
001A7A  2  A9 00        	lda #<L0400		; Set first sprite animation
001A7C  2  8D 88 1C     	sta L1C54
001A7F  2  A9 04        	lda #>L0400
001A81  2  8D 89 1C     	sta L1C55
001A84  2               
001A84  2               ; Set animation sprite address
001A84  2               
001A84  2               L1A50:
001A84  2  EC 7C 1C     	cpx L1C48		; Load sprite animation
001A87  2  F0 0D        	beq L1A62		; Stop at current sprite address
001A89  2               
001A89  2  E8           	inx
001A8A  2  AD 88 1C     	lda L1C54
001A8D  2  18           	clc
001A8E  2  69 20        	adc #$20		; Skip to next sprite
001A90  2  8D 88 1C     	sta L1C54
001A93  2  4C 84 1A     	jmp L1A50
001A96  2               
001A96  2               ; Check for level 14
001A96  2               
001A96  2               L1A62:
001A96  2  A5 80        	lda L0080		; Get level nr
001A98  2  C9 0E        	cmp #$0E		; Check if level 14
001A9A  2  D0 05        	bne L1A6D		; If not level14, jump
001A9C  2               
001A9C  2  A9 00        	lda #$00		; Reset animation pointer at level 14
001A9E  2  8D 88 1C     	sta L1C54
001AA1  2               L1A6D:
001AA1  2  A9 00        	lda #$00		; Don't reset at other levels
001AA3  2  8D 91 1D     	sta L1D95		; 8D 95 1D
001AA6  2               
001AA6  2  A2 00        	ldx #$00		; A2 00
001AA8  2  8E 83 1C     	stx L1C4F		; 8E 4F 1C
001AAB  2               L1A77:
001AAB  2  BD A9 1D     	lda L1DAD,X		; Read sprite data
001AAE  2  C9 FF        	cmp #$FF
001AB0  2  F0 9D        	beq L1A1B		; Skip if all sprite s handled
001AB2  2               
001AB2  2  8D 7F 1C     	sta L1C4B		; Set X-pos
001AB5  2  E8           	inx
001AB6  2               
001AB6  2  20 96 1D     	jsr L1D9A		; Read sprite data
001AB9  2  8D 80 1C     	sta L1C4C		; Set Y-pos
001ABC  2  E8           	inx
001ABD  2               
001ABD  2  20 96 1D     	jsr L1D9A		; Read sprite data
001AC0  2  8D 81 1C     	sta L1C4D		; Set plotmode
001AC3  2  E8           	inx
001AC4  2               
001AC4  2  20 96 1D     	jsr L1D9A		; Read sprite data
001AC7  2  8D 82 1C     	sta L1C4E		; Set ??
001ACA  2               
001ACA  2  8E 83 1C     	stx L1C4F              ; 8E 4F 1C
001ACD  2               
001ACD  2  AD 7F 1C     	lda L1C4B              ; AD 4B 1C
001AD0  2  29 40        	and #$40               ; 29 40
001AD2  2  C9 40        	cmp #$40               ; C9 40
001AD4  2  F0 05        	beq L1AA7              ; F0 05
001AD6  2               
001AD6  2  A9 02        	lda #$02               ; A9 02
001AD8  2  4C DD 1A     	jmp L1AA9              ; 4C A9 1A
001ADB  2               
001ADB  2  A9 04        L1AA7:      lda #$04               ; A9 04
001ADD  2  8D 8B 1C     L1AA9:      sta L1C57              ; 8D 57 1C
001AE0  2               
001AE0  2               ; Set colour mask
001AE0  2  AD 91 1D     	lda L1D95		; Get data
001AE3  2  29 03        	and #$03		; Mask 0-3
001AE5  2  AA           	tax
001AE6  2  BD B9 1D     	lda L1DBD,X		; Get colour mask
001AE9  2  8D 6F 11     	sta L109B		; Colour mask
001AEC  2               
001AEC  2  AD 81 1C                 lda L1C4D              ; AD 4D 1C
001AEF  2  29 80                    and #$80               ; 29 80
001AF1  2  C9 80                    cmp #$80               ; C9 80
001AF3  2  D0 03                    bne L1AC4              ; D0 03
001AF5  2  4C CB 1B                 jmp L1B97              ; 4C 97 1B
001AF8  2               
001AF8  2  A5 80        L1AC4:      lda L0080              ; Get level nr
001AFA  2  C9 13                    cmp #$13               ; C9 13
001AFC  2  D0 0C                    bne L1AD6              ; D0 0C
001AFE  2  AD 6F 11                 lda L109B              ; Colour mask
001B01  2  C9 FF                    cmp #$FF               ; C9 FF
001B03  2  D0 05                    bne L1AD6              ; D0 05
001B05  2  A9 FF                    lda #$FF               ; A9 F0
001B07  2  8D 6F 11                 sta L109B              ; Colour mask
001B0A  2               
001B0A  2  AD 7F 1C     L1AD6:      lda L1C4B              ; AD 4B 1C
001B0D  2  29 3F                    and #$3F               ; 29 3F
001B0F  2  0A                       asl A                  ; 0A
001B10  2  0A                       asl A                  ; 0A
001B11  2  18                       clc                    ; 18
001B12  2  69 10                    adc #$10               ; 69 10
001B14  2  AA                       tax                    ; AA
001B15  2               
001B15  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001B18  2  18                       clc                    ; 18
001B19  2  69 08                    adc #$08               ; 69 08
001B1B  2  A8                       tay                    ; A8
001B1C  2               
001B1C  2  A9 05        L1AE8:      lda #$05               ; A9 05
001B1E  2  20 00 10                 jsr L0F00              ; Plot sprite
001B21  2               
001B21  2  AD 7F 1C                 lda L1C4B              ; AD 4B 1C
001B24  2  29 80                    and #$80               ; 29 80
001B26  2  C9 80                    cmp #$80               ; C9 80
001B28  2  F0 0D                    beq L1B03              ; F0 0D
001B2A  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001B2D  2  38                       sec                    ; 38
001B2E  2  ED 8B 1C                 sbc L1C57              ; ED 57 1C
001B31  2  8D 80 1C                 sta L1C4C              ; 8D 4C 1C
001B34  2  4C 41 1B                 jmp L1B0D              ; 4C 0D 1B
001B37  2               
001B37  2  AD 80 1C     L1B03:      lda L1C4C              ; AD 4C 1C
001B3A  2  18                       clc                    ; 18
001B3B  2  6D 8B 1C                 adc L1C57              ; 6D 57 1C
001B3E  2  8D 80 1C                 sta L1C4C              ; 8D 4C 1C
001B41  2  AD 7F 1C     L1B0D:      lda L1C4B              ; AD 4B 1C
001B44  2  29 3F                    and #$3F               ; 29 3F
001B46  2  0A                       asl A                  ; 0A
001B47  2  0A                       asl A                  ; 0A
001B48  2  18                       clc                    ; 18
001B49  2  69 10                    adc #$10               ; 69 10
001B4B  2  AA                       tax                    ; AA
001B4C  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001B4F  2  18                       clc                    ; 18
001B50  2  69 08                    adc #$08               ; 69 08
001B52  2  A8                       tay                    ; A8
001B53  2               
001B53  2  AD 88 1C                 lda L1C54              ; AD 54 1C
001B56  2  85 77                    sta L0077              ; 85 77
001B58  2  AD 89 1C                 lda L1C55              ; AD 55 1C
001B5B  2  85 78                    sta L0078              ; 85 78
001B5D  2               
001B5D  2  A9 04        L1B29:      lda #$04               ; A9 04
001B5F  2  20 00 10                 jsr L0F00              ; Plot sprite
001B62  2               
001B62  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001B65  2  CD 81 1C                 cmp L1C4D              ; CD 4D 1C
001B68  2  F0 3D                    beq L1B73              ; F0 3D
001B6A  2  CD 82 1C                 cmp L1C4E              ; CD 4E 1C
001B6D  2  F0 38                    beq L1B73              ; F0 38
001B6F  2               
001B6F  2  AE 83 1C     L1B3B:      ldx L1C4F              ; AE 4F 1C
001B72  2  CA                       dex                    ; CA
001B73  2  CA                       dex                    ; CA
001B74  2  CA                       dex                    ; CA
001B75  2  AD 7F 1C                 lda L1C4B              ; AD 4B 1C
001B78  2  20 9A 1D                 jsr L1D9E              ; 20 9E 1D
001B7B  2  E8                       inx                    ; E8
001B7C  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001B7F  2  20 9A 1D                 jsr L1D9E              ; 20 9E 1D
001B82  2  E8                       inx                    ; E8
001B83  2  AD 81 1C                 lda L1C4D              ; AD 4D 1C
001B86  2  20 9A 1D                 jsr L1D9E              ; 20 9E 1D
001B89  2  E8                       inx                    ; E8
001B8A  2  AD 82 1C                 lda L1C4E              ; AD 4E 1C
001B8D  2  20 9A 1D                 jsr L1D9E              ; 20 9E 1D
001B90  2  E8                       inx                    ; E8
001B91  2  8E 83 1C                 stx L1C4F              ; 8E 4F 1C
001B94  2  AD 91 1D                 lda L1D95              ; AD 95 1D
001B97  2  18                       clc                    ; 18
001B98  2  69 01                    adc #$01               ; 69 01
001B9A  2  29 03                    and #$03               ; 29 03
001B9C  2  8D 91 1D                 sta L1D95              ; 8D 95 1D
001B9F  2  E0 10                    cpx #$10               ; E0 10
001BA1  2  F0 03                    beq L1B72              ; F0 03
001BA3  2  4C AB 1A                 jmp L1A77              ; 4C 77 1A
001BA6  2               
001BA6  2  60           L1B72:      rts                    ; 60
001BA7  2               
001BA7  2               ;--------------------------------------------
001BA7  2               
001BA7  2  A5 80        L1B73:      lda L0080              ; Get level nr
001BA9  2  C9 0E                    cmp #$0E               ; C9 0E
001BAB  2  F0 0B                    beq L1B84              ; F0 0B
001BAD  2               
001BAD  2  AD 7F 1C                 lda L1C4B              ; AD 4B 1C
001BB0  2  49 80                    eor #$80               ; 49 80
001BB2  2  8D 7F 1C                 sta L1C4B              ; 8D 4B 1C
001BB5  2  4C 6F 1B                 jmp L1B3B              ; 4C 3B 1B
001BB8  2               
001BB8  2  AD 81 1C     L1B84:      lda L1C4D              ; AD 4D 1C
001BBB  2  49 80                    eor #$80               ; 49 80
001BBD  2  8D 81 1C                 sta L1C4D              ; 8D 4D 1C
001BC0  2  20 2A 1C                 jsr L1BF6              ; 20 F6 1B
001BC3  2  A9 00                    lda #$00               ; A9 00
001BC5  2  99 85 1C                 sta L1C51,Y            ; 99 51 1C
001BC8  2  4C 6F 1B                 jmp L1B3B              ; 4C 3B 1B
001BCB  2               
001BCB  2  20 2A 1C     L1B97:      jsr L1BF6              ; 20 F6 1B
001BCE  2               
001BCE  2  B9 85 1C                 lda L1C51,Y            ; B9 51 1C
001BD1  2  18                       clc                    ; 18
001BD2  2  69 01                    adc #$01               ; 69 01
001BD4  2  99 85 1C                 sta L1C51,Y            ; 99 51 1C
001BD7  2  0A                       asl A                  ; 0A
001BD8  2  0A                       asl A                  ; 0A
001BD9  2  0A                       asl A                  ; 0A
001BDA  2  0A                       asl A                  ; 0A
001BDB  2  0A                       asl A                  ; 0A
001BDC  2  0A                       asl A                  ; 0A
001BDD  2  85 77                    sta L0077              ; 85 77
001BDF  2               
001BDF  2  8C 84 1C                 sty L1C50              ; 8C 50 1C
001BE2  2               
001BE2  2  20 4A 1C                 jsr L1C16              ; 20 16 1C
001BE5  2               
001BE5  2  AD 7F 1C                 lda L1C4B              ; AD 4B 1C
001BE8  2  29 3F                    and #$3F               ; 29 3F
001BEA  2  0A                       asl A                  ; 0A
001BEB  2  0A                       asl A                  ; 0A
001BEC  2  18                       clc                    ; 18
001BED  2  69 10                    adc #$10               ; 69 10
001BEF  2  AA                       tax                    ; X-pos
001BF0  2               
001BF0  2  AD 80 1C                 lda L1C4C              ; AD 4C 1C
001BF3  2  18                       clc                    ; 18
001BF4  2  69 08                    adc #$08               ; 69 08
001BF6  2  A8                       tay                    ; Y-pos
001BF7  2               
001BF7  2  A9 03                    lda #$03               ; A9 03
001BF9  2  20 00 10                 jsr L0F00              ; Plot sprite
001BFC  2               
001BFC  2  AC 84 1C                 ldy L1C50              ; AC 50 1C
001BFF  2  B9 85 1C                 lda L1C51,Y            ; B9 51 1C
001C02  2  C9 06                    cmp #$06               ; C9 06
001C04  2  F0 03                    beq L1BD5              ; F0 03
001C06  2  4C 6F 1B                 jmp L1B3B              ; 4C 3B 1B
001C09  2               
001C09  2  A9 00        L1BD5:      lda #$00               ; A9 00
001C0B  2  8D 80 1C                 sta L1C4C              ; 8D 4C 1C
001C0E  2  AD 81 1C                 lda L1C4D              ; AD 4D 1C
001C11  2  49 80                    eor #$80               ; 49 80
001C13  2  8D 81 1C                 sta L1C4D              ; 8D 4D 1C
001C16  2  AD 7F 1C                 lda L1C4B              ; AD 4B 1C
001C19  2  09 80                    ora #$80               ; 09 80
001C1B  2  18                       clc                    ; 18
001C1C  2  69 08                    adc #$08               ; 69 08
001C1E  2  8D 7F 1C                 sta L1C4B              ; 8D 4B 1C
001C21  2  29 3F                    and #$3F               ; 29 3F
001C23  2  C9 20                    cmp #$20               ; C9 20
001C25  2  B0 17                    bcs L1C0A              ; B0 17
001C27  2  4C 6F 1B                 jmp L1B3B              ; 4C 3B 1B
001C2A  2               
001C2A  2  AD 80 1C     L1BF6:      lda L1C4C              ; AD 4C 1C
001C2D  2  C9 48                    cmp #$48               ; C9 48
001C2F  2  F0 07                    beq L1C04              ; F0 07
001C31  2  C9 38                    cmp #$38               ; C9 38
001C33  2  F0 06                    beq L1C07              ; F0 06
001C35  2  A0 02                    ldy #$02               ; A0 02
001C37  2  60                       rts                    ; 60
001C38  2               
001C38  2  A0 00        L1C04:      ldy #$00               ; A0 00
001C3A  2  60                       rts                    ; 60
001C3B  2               
001C3B  2  A0 01        L1C07:      ldy #$01               ; A0 01
001C3D  2  60                       rts                    ; 60
001C3E  2               
001C3E  2  AD 7F 1C     L1C0A:      lda L1C4B              ; AD 4B 1C
001C41  2  38                       sec                    ; 38
001C42  2  E9 20                    sbc #$20               ; E9 20
001C44  2  8D 7F 1C                 sta L1C4B              ; 8D 4B 1C
001C47  2  4C 6F 1B                 jmp L1B3B              ; 4C 3B 1B
001C4A  2               
001C4A  2  20 2A 1C     L1C16:      jsr L1BF6              ; 20 F6 1B
001C4D  2               
001C4D  2  B9 85 1C                 lda L1C51,Y            ; B9 51 1C
001C50  2  C9 04                    cmp #$04               ; C9 04
001C52  2  F0 0D                    beq L1C2D              ; F0 0D
001C54  2  C9 05                    cmp #$05               ; C9 05
001C56  2  F0 12                    beq L1C36              ; F0 12
001C58  2  C9 06                    cmp #$06               ; C9 06
001C5A  2  F0 17                    beq L1C3F              ; F0 17
001C5C  2               
001C5C  2  A9 04                    lda #>L0400               ; A9 04
001C5E  2  85 78                    sta L0078              ; 85 78
001C60  2  60                       rts                    ; 60
001C61  2               
001C61  2  A9 80        L1C2D:      lda #<L7A80               ; A9 80
001C63  2  85 77                    sta L0077              ; 85 77
001C65  2  A9 56                    lda #>L7A80               ; A9 7A
001C67  2  85 78                    sta L0078              ; 85 78
001C69  2  60                       rts                    ; 60
001C6A  2               
001C6A  2  A9 C0        L1C36:      lda #<L7AC0               ; A9 C0
001C6C  2  85 77                    sta L0077              ; 85 77
001C6E  2  A9 56                    lda #>L7AC0               ; A9 7A
001C70  2  85 78                    sta L0078              ; 85 78
001C72  2  60                       rts                    ; 60
001C73  2               
001C73  2  A9 1F        L1C3F:      lda #<$801F               ; A9 D0
001C75  2  85 77                    sta L0077              ; 85 77
001C77  2  A9 80                    lda #>$801F               ; A9 34
001C79  2  85 78                    sta L0078              ; 85 78
001C7B  2  60                       rts                    ; 60
001C7C  2               
001C7C  2  EA           L1C48:      nop                    ; EA
001C7D  2  EA           L1C49:      nop                    ; Monster move delay counter
001C7E  2  EA           L1C4A:      nop                    ; Sprite pointer
001C7F  2  EA           L1C4B:      nop                    ; EA
001C80  2  EA           L1C4C:      nop                    ; EA
001C81  2  EA           L1C4D:      nop                    ; EA
001C82  2  EA           L1C4E:      nop                    ; EA
001C83  2  EA           L1C4F:      nop                    ; EA
001C84  2  EA           L1C50:      nop                    ; EA
001C85  2  EA           L1C51:      nop                    ; EA
001C86  2  EA                       nop                    ; EA
001C87  2  EA                       nop                    ; EA
001C88  2  EA           L1C54:      nop                    ; EA
001C89  2  EA           L1C55:      nop                    ; EA
001C8A  2  EA                       nop                    ; EA
001C8B  2  EA           L1C57:      nop                    ; EA
001C8C  2               
001C8C  2               ;--------------------------------------------
001C8C  2               ; Copy sprite data guard to L0400
001C8C  2               ;--------------------------------------------
001C8C  2               
001C8C  2  A0 00        L1C58:      ldy #$00               ; A0 00
001C8E  2               
001C8E  2  A9 00                    lda #<L0400               ; A9 00
001C90  2  8D BA 1C                 sta L1CC5              ; 8D C5 1C
001C93  2  8D BF 1C                 sta L1CCA              ; 8D CA 1C
001C96  2               
001C96  2  A9 04                    lda #>L0400               ; A9 04
001C98  2  8D BB 1C                 sta L1CC6              ; 8D C6 1C
001C9B  2               
001C9B  2  AE BF 1C     L1C67:      ldx L1CCA              ; AE CA 1C
001C9E  2  BD 00 57     L1C6A:      lda L7B00,X            ; BD 00 7B
001CA1  2  8E BF 1C                 stx L1CCA              ; 8E CA 1C
001CA4  2  20 B9 1C                 jsr L1CC4              ; 20 C4 1C
001CA7  2               
001CA7  2  AE BF 1C                 ldx L1CCA              ; AE CA 1C
001CAA  2  E8                       inx                    ; E8
001CAB  2  8E BF 1C                 stx L1CCA              ; 8E CA 1C
001CAE  2  EE BA 1C     	inc L1CC5
001CB1  2               
001CB1  2  AE BF 1C                 ldx L1CCA              ; AE CA 1C
001CB4  2  E0 80                    cpx #$80               ; E0 80
001CB6  2  D0 E3                    bne L1C67              ; D0 A4
001CB8  2               
001CB8  2  60                       rts                    ; 60
001CB9  2               
001CB9  2  99 FF FF     L1CC4:      sta LFFFF,Y            ; 99 FF FF
001CBC  2  60                       rts                    ; 60
001CBD  2               
001CBD  2  EA           L1CC8:      nop                    ; EA
001CBE  2  EA           L1CC9:      nop                    ; EA
001CBF  2  EA           L1CCA:      nop                    ; EA
001CC0  2               
001CC0  2               ;-------------------------------------------
001CC0  2               ; Entry level 8 + 12
001CC0  2               ;-------------------------------------------
001CC0  2               
001CC0  2  A9 02        L1CCB:      lda #$02               ; A9 02
001CC2  2  8D BE 1C                 sta L1CC9              ; 8D C9 1C
001CC5  2  4C 0A 1D                 jmp L1D15              ; 4C 15 1D
001CC8  2               
001CC8  2               ;-------------------------------------------
001CC8  2               ; Entry level 9
001CC8  2               ;-------------------------------------------
001CC8  2               
001CC8  2  A9 09        L1CD3:      lda #$09               ; A9 09
001CCA  2  8D BE 1C                 sta L1CC9              ; 8D C9 1C
001CCD  2  4C 0A 1D                 jmp L1D15              ; 4C 15 1D
001CD0  2               
001CD0  2               ;-------------------------------------------
001CD0  2               ; Entry level 5
001CD0  2               ;-------------------------------------------
001CD0  2               
001CD0  2  A9 01        L1CDB:      lda #$01               ; A9 01
001CD2  2  8D BE 1C                 sta L1CC9              ; 8D C9 1C
001CD5  2               
001CD5  2  A9 08                    lda #$08               ; A9 08
001CD7  2  8D 7C 1C                 sta L1C48              ; 8D 48 1C
001CDA  2               
001CDA  2  4C 0A 1D                 jmp L1D15              ; 4C 15 1D
001CDD  2               
001CDD  2               ;--------------------------------------------
001CDD  2               ;--------------------------------------------
001CDD  2               
001CDD  2  A9 00        L1CE8:      lda #$00               ; A9 00
001CDF  2  8D 7E 1C                 sta L1C4A              ; Sprite pointer
001CE2  2               
001CE2  2  A9 57                    lda #>L7B00               ; Data address
001CE4  2  8D A0 1C                 sta L1C6C              ; 8D 6C 1C
001CE7  2  A9 00                    lda #<L7B00               ; A9 00
001CE9  2  8D 9F 1C                 sta L1C6B              ; 8D 6B 1C
001CEC  2               
001CEC  2  A5 80                    lda L0080              ; Get level nr
001CEE  2  C9 0C                    cmp #$0C               ; 
001CF0  2  F0 CE                    beq L1CCB              ; If level=12, jump
001CF2  2               
001CF2  2  C9 08                    cmp #$08               ; C9 08
001CF4  2  F0 CA                    beq L1CCB              ; If level=8, jump
001CF6  2               
001CF6  2  C9 09                    cmp #$09               ; C9 09
001CF8  2  F0 CE                    beq L1CD3              ; If level=9, jump
001CFA  2               
001CFA  2  C9 05                    cmp #$05               ; C9 05
001CFC  2  F0 D2                    beq L1CDB              ; If level=5, jump
001CFE  2               
001CFE  2  A5 80                    lda L0080              ; Get level nr
001D00  2  38                       sec                    ; 38
001D01  2  E9 0A                    sbc #$0A               ; E9 0A
001D03  2  AA                       tax                    ; AA
001D04  2  BD 9E 1D                 lda L1DA2,X            ; BD A2 1D
001D07  2  8D BE 1C                 sta L1CC9              ; 8D C9 1C
001D0A  2               
001D0A  2  A2 01        L1D15:      ldx #$01               ; A2 01
001D0C  2  EC BE 1C     L1D17:      cpx L1CC9              ; EC C9 1C
001D0F  2  F0 16                    beq L1D32              ; F0 16
001D11  2               
001D11  2  AD 9F 1C                 lda L1C6B              ; AD 6B 1C
001D14  2  18                       clc                    ; 18
001D15  2  69 80                    adc #$80               ; 69 80
001D17  2  8D 9F 1C                 sta L1C6B              ; 8D 6B 1C
001D1A  2               
001D1A  2  AD A0 1C                 lda L1C6C              ; AD 6C 1C
001D1D  2  69 00                    adc #$00               ; 69 00
001D1F  2  8D A0 1C                 sta L1C6C              ; 8D 6C 1C
001D22  2               
001D22  2  E8                       inx                    ; E8
001D23  2               
001D23  2  4C 0C 1D                 jmp L1D17              ; 4C 17 1D
001D26  2               
001D26  2  60           L1D31:      rts                    ; 60
001D27  2               
001D27  2  20 8C 1C     L1D32:      jsr L1C58              ; Plot horizontal guard
001D2A  2               
001D2A  2  A5 80                    lda L0080              ; Get level nr
001D2C  2  C9 09                    cmp #$09               ; If level=9, jump
001D2E  2  F0 04                    beq L1D3F              ; F0 04
001D30  2               
001D30  2  C9 0B                    cmp #$0B               ; C9 0B
001D32  2  90 F2                    bcc L1D31              ; If level <=10, jump
001D34  2               
001D34  2  A2 08        L1D3F:      ldx #$08               ; Level is >10
001D36  2  A9 00                    lda #$00               ; A9 00
001D38  2  18           L1D43:      clc                    ; 18
001D39  2  69 08                    adc #$08               ; 69 08
001D3B  2  E8                       inx                    ; E8
001D3C  2  E4 80                    cpx L0080              ; Get level nr
001D3E  2  D0 F8                    bne L1D43              ; D0 F8
001D40  2               
001D40  2  18                       clc                    ; 18
001D41  2  69 66                    adc #<(L2480-$8)      ; 69 78
001D43  2  8D 93 1D                 sta L1D97              ; 8D 97 1D
001D46  2  A9 26        	lda #>(L2480-$8)
001D48  2  69 00        	adc #0
001D4A  2  8D 94 1D     	sta L1D98
001D4D  2               
001D4D  2  A2 00                    ldx #$00               ; A2 00
001D4F  2  A0 00                    ldy #$00               ; A0 00
001D51  2  20 92 1D     L1D55:      jsr L1D96              ; Get level data
001D54  2  C9 FF                    cmp #$FF               ; C9 FF
001D56  2  F0 35                    beq L1D91              ; F0 35
001D58  2               
001D58  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D5B  2  C8                       iny                    ; C8
001D5C  2  E8                       inx                    ; E8
001D5D  2  20 92 1D                 jsr L1D96              ; 20 96 1D
001D60  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D63  2               
001D63  2  C8                       iny                    ; C8
001D64  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D67  2               
001D67  2  C8                       iny                    ; C8
001D68  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D6B  2               
001D6B  2  B9 A9 1D                 lda L1DAD,Y            ; B9 AD 1D
001D6E  2  29 0F                    and #$0F               ; 29 0F
001D70  2  0A                       asl A                  ; 0A
001D71  2  0A                       asl A                  ; 0A
001D72  2  0A                       asl A                  ; 0A
001D73  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D76  2               
001D76  2  88                       dey                    ; 88
001D77  2  B9 A9 1D                 lda L1DAD,Y            ; B9 AD 1D
001D7A  2  29 F0                    and #$F0               ; 29 F0
001D7C  2  4A                       lsr A                  ; 4A
001D7D  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D80  2               
001D80  2  88                       dey                    ; 88
001D81  2  99 A9 1D                 sta L1DAD,Y            ; 99 AD 1D
001D84  2  C8                       iny                    ; C8
001D85  2  C8                       iny                    ; C8
001D86  2  C8                       iny                    ; C8
001D87  2  E8                       inx                    ; E8
001D88  2  E0 08                    cpx #$08               ; E0 08
001D8A  2  D0 C5                    bne L1D55              ; D0 C5
001D8C  2               
001D8C  2  60                       rts                    ; 60
001D8D  2               
001D8D  2  99 A9 1D     L1D91:      sta L1DAD,Y            ; 99 AD 1D
001D90  2  60                       rts                    ; 60
001D91  2               
001D91  2  EA           L1D95:      .byte $EA
001D92  2               
001D92  2  BD 6E 26     L1D96:      lda L2480,X            ; BD 80 24
001D95  2  60                       rts                    ; 60
001D96  2               
001D96  2  BD A9 1D     L1D9A:      lda L1DAD,X            ; BD AD 1D
001D99  2  60                       rts                    ; 60
001D9A  2               
001D9A  2  9D A9 1D     L1D9E:      sta L1DAD,X            ; 9D AD 1D
001D9D  2  60                       rts                    ; 60
001D9E  2               
001D9E  2               ;--------------------------------------------
001D9E  2               ; Level data pointer
001D9E  2               ;--------------------------------------------
001D9E  2               
001D9E  2  EA 03 00 04  L1DA2:      .byte $EA,$03,$00,$04,$05,$06,$00,$07
001DA2  2  05 06 00 07  
001DA6  2  0A 08 04                 .byte $0A,$08,$04
001DA9  2               
001DA9  2               ;--------------------------------------------
001DA9  2               
001DA9  2  EA           L1DAD:      .byte $EA
001DAA  2  EA EA EA     L1DAE:      .byte $EA,$EA,$EA
001DAD  2  EA EA EA EA  L1DB1:      .byte $EA,$EA,$EA,$EA
001DB1  2  EA EA EA EA              .byte $EA,$EA,$EA,$EA,$EA,$EA,$EA,$EA
001DB5  2  EA EA EA EA  
001DB9  2               
001DB9  2               ;--------------------------------------------
001DB9  2               ; Colour mask
001DB9  2               ;--------------------------------------------
001DB9  2               
001DB9  2               L1DBD:
001DB9  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF
001DBD  2               
001DBD  2               ;--------------------------------------------
001DBD  2               ;
001DBD  2               ;--------------------------------------------
001DBD  2               
001DBD  2  FF 66 00 24  L1DC1:      .byte $FF,$66,$00,$24
001DC1  2  42 24 42 24              .byte $42,$24,$42,$24,$42,$24,$42,$24
001DC5  2  42 24 42 24  
001DC9  2  42 00 66 FF              .byte $42,$00,$66,$FF,$FF,$66,$00,$42
001DCD  2  FF 66 00 42  
001DD1  2  24 42 24 42              .byte $24,$42,$24,$42,$24,$42,$24,$42
001DD5  2  24 42 24 42  
001DD9  2  24 00 66 FF              .byte $24,$00,$66,$FF,$00,$00,$00,$00
001DDD  2  00 00 00 00  
001DE1  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
001DE5  2  00 00 00 00  
001DE9  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
001DED  2  00 00 00 00  
001DF1  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
001DF5  2  00 00 00 00  
001DF9  2  00 00 49                 .byte $00,$00,$49
001DFC  2               
001DFC  2  4C 84 22     L1E00:      jmp L2074              ; 4C 74 20
001DFF  2               
001DFF  2  BD 93 24     L1E03:      lda L2280,X            ; BD 80 22
001E02  2  60                       rts                    ; 60
001E03  2               
001E03  2  20 18 1E     L1E07:      jsr L1E26              ; 20 26 1E
001E06  2  4C 19 23                 jmp L20FA              ; 4C FA 20
001E09  2               
001E09  2               ;--------------------------------------------
001E09  2               ; Show guards
001E09  2               ;--------------------------------------------
001E09  2               
001E09  2  EA           L1E0D:      nop                    ; EA
001E0A  2  EA                       nop                    ; EA
001E0B  2  EA                       nop                    ; EA
001E0C  2               
001E0C  2  20 07 30                 jsr L2E8C              ; 20 8C 2E
001E0F  2               
001E0F  2  A5 80                    lda L0080              ; Get level nr
001E11  2  C9 13                    cmp #$13               ; C9 13
001E13  2  F0 EE                    beq L1E07              ; F0 E4
001E15  2               
001E15  2  4C 18 1E                 jmp L1E26              ; Level 19
001E18  2               
001E18  2  20 84 22     L1E26:      jsr L2074              ; 20 74 20
001E1B  2               
001E1B  2  A9 00                    lda #$00               ; A9 00
001E1D  2  8D 83 1F                 sta L1FA6              ; 8D A6 1F
001E20  2  A8                       tay                    ; A8
001E21  2  AA                       tax                    ; AA
001E22  2  B9 80 0E     L1E30:      lda L0D80,Y            ; B9 80 0D
001E25  2  95 8A                    sta L008A,X            ; 95 8A
001E27  2  C8                       iny                    ; C8
001E28  2  E8                       inx                    ; E8
001E29  2  E0 04                    cpx #$04               ; E0 04
001E2B  2  D0 F5                    bne L1E30              ; D0 F5
001E2D  2               
001E2D  2  A5 8A                    lda L008A              ; A5 8A
001E2F  2  C9 FF                    cmp #$FF               ; C9 FF
001E31  2  F0 C9                    beq L1E00              ; F0 BF
001E33  2               
001E33  2  20 59 1E                 jsr L1E78              ; 20 78 1E
001E36  2               
001E36  2  AD 83 1F                 lda L1FA6              ; AD A6 1F
001E39  2  18                       clc                    ; 18
001E3A  2  2A                       rol A                  ; 2A
001E3B  2  2A                       rol A                  ; 2A
001E3C  2  A8                       tay                    ; A8
001E3D  2  A2 00                    ldx #$00               ; A2 00
001E3F  2               
001E3F  2  B5 8A        L1E4D:      lda L008A,X            ; B5 8A
001E41  2  99 80 0E                 sta L0D80,Y            ; 99 80 0D
001E44  2  E8                       inx                    ; E8
001E45  2  C8                       iny                    ; C8
001E46  2  E0 04                    cpx #$04               ; E0 04
001E48  2  D0 F5                    bne L1E4D              ; D0 F5
001E4A  2               
001E4A  2  EE 83 1F                 inc L1FA6              ; EE A6 1F
001E4D  2               
001E4D  2  AD 83 1F                 lda L1FA6              ; AD A6 1F
001E50  2  18                       clc                    ; 18
001E51  2  2A                       rol A                  ; 2A
001E52  2  2A                       rol A                  ; 2A
001E53  2  A8                       tay                    ; A8
001E54  2  A2 00                    ldx #$00               ; A2 00
001E56  2               
001E56  2  4C 22 1E                 jmp L1E30              ; 4C 30 1E
001E59  2               
001E59  2               ;--------------------------------------------
001E59  2               
001E59  2  A5 8B        L1E78:      lda L008B              ; A5 8B
001E5B  2  49 40                    eor #$40               ; 49 40
001E5D  2  85 8B                    sta L008B              ; 85 8B
001E5F  2  A8                       tay                    ; A8
001E60  2  29 20                    and #$20               ; 29 20
001E62  2  C9 20                    cmp #$20               ; C9 20
001E64  2  D0 08                    bne L1E8D              ; D0 08
001E66  2  98                       tya                    ; 98
001E67  2  29 40                    and #$40               ; 29 40
001E69  2  C9 40                    cmp #$40               ; C9 40
001E6B  2  F0 01                    beq L1E8D              ; F0 01
001E6D  2  60                       rts                    ; 60
001E6E  2               
001E6E  2  A5 8B        L1E8D:      lda L008B              ; A5 8B
001E70  2  29 80                    and #$80               ; 29 80
001E72  2  C9 80                    cmp #$80               ; C9 80
001E74  2  D0 5A                    bne L1EEF              ; D0 5A
001E76  2  A5 8A                    lda L008A              ; A5 8A
001E78  2  18                       clc                    ; 18
001E79  2  69 01                    adc #$01               ; 69 01
001E7B  2  29 7F                    and #$7F               ; 29 7F
001E7D  2  8D 82 1F                 sta L1FA5              ; 8D A5 1F
001E80  2  A5 8A                    lda L008A              ; A5 8A
001E82  2  29 03                    and #$03               ; 29 03
001E84  2  0A                       asl A                  ; 0A
001E85  2  85 8E                    sta L008E              ; 85 8E
001E87  2  20 2C 1F                 jsr L1F4B              ; Set XPOS/YPOS
001E8A  2               
001E8A  2  A5 8E                    lda L008E              ; A5 8E
001E8C  2  C9 00                    cmp #$00               ; C9 00
001E8E  2  D0 06                    bne L1EB5              ; D0 06
001E90  2  20 44 1F                 jsr L1F67              ; 20 67 1F
001E93  2  20 2C 1F                 jsr L1F4B              ; Set XPOS/YPOS
001E96  2               
001E96  2  A9 E0        L1EB5:      lda #$E0               ; A9 E0
001E98  2  18                       clc                    ; 18
001E99  2  65 8E                    adc L008E              ; 65 8E
001E9B  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001E9E  2  A9 E1                    lda #$E1               ; A9 E1
001EA0  2  18                       clc                    ; 18
001EA1  2  65 8E                    adc L008E              ; 65 8E
001EA3  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001EA6  2               
001EA6  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
001EA8  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001EAB  2               
001EAB  2  A9 08                    lda #$08               ; Move cursor back 2 pos
001EAD  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001EB0  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001EB3  2               
001EB3  2  A9 E8                    lda #$E8               ; A9 E8
001EB5  2  18                       clc                    ; 18
001EB6  2  65 8E                    adc L008E              ; 65 8E
001EB8  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001EBB  2  A9 E9                    lda #$E9               ; A9 E9
001EBD  2  18                       clc                    ; 18
001EBE  2  65 8E                    adc L008E              ; 65 8E
001EC0  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001EC3  2  4C 84 1F                 jmp L1FA7              ; 4C A7 1F
001EC6  2               
001EC6  2  A5 8A        L1EE5:      lda L008A              ; A5 8A
001EC8  2  29 03                    and #$03               ; 29 03
001ECA  2  0A                       asl A                  ; 0A
001ECB  2  85 8E                    sta L008E              ; 85 8E
001ECD  2  4C 96 1E                 jmp L1EB5              ; 4C B5 1E
001ED0  2               
001ED0  2  A5 8A        L1EEF:      lda L008A              ; A5 8A
001ED2  2  38                       sec                    ; 38
001ED3  2  E9 01                    sbc #$01               ; E9 01
001ED5  2  29 7F                    and #$7F               ; 29 7F
001ED7  2  8D 82 1F                 sta L1FA5              ; 8D A5 1F
001EDA  2  A5 8A                    lda L008A              ; A5 8A
001EDC  2  29 03                    and #$03               ; 29 03
001EDE  2  49 03                    eor #$03               ; 49 03
001EE0  2  0A                       asl A                  ; 0A
001EE1  2  85 8E                    sta L008E              ; 85 8E
001EE3  2  20 2C 1F                 jsr L1F4B              ; Set XPOS/YPOS
001EE6  2  A5 8E                    lda L008E              ; A5 8E
001EE8  2  C9 00                    cmp #$00               ; C9 00
001EEA  2  D0 06                    bne L1F11              ; D0 06
001EEC  2  20 5E 1F                 jsr L1F81              ; 20 81 1F
001EEF  2  20 2C 1F                 jsr L1F4B              ; Set XPOS/YPOS
001EF2  2               
001EF2  2  A5 80        L1F11:      lda L0080              ; Get level nr
001EF4  2  C9 13                    cmp #$13               ; C9 13
001EF6  2  F0 CE                    beq L1EE5              ; F0 CE
001EF8  2  C9 0F                    cmp #$0F               ; C9 0F
001EFA  2  F0 CA                    beq L1EE5              ; F0 CA
001EFC  2  A9 F1                    lda #$F1               ; A9 F1
001EFE  2  18                       clc                    ; 18
001EFF  2  65 8E                    adc L008E              ; 65 8E
001F01  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F04  2  A9 F0                    lda #$F0               ; A9 F0
001F06  2  18                       clc                    ; 18
001F07  2  65 8E                    adc L008E              ; 65 8E
001F09  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F0C  2               
001F0C  2  A9 08                    lda #$08               ; Move cursor back 2 pos
001F0E  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F11  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F14  2               
001F14  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
001F16  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F19  2               
001F19  2  A9 F9                    lda #$F9               ; A9 F9
001F1B  2  18                       clc                    ; 18
001F1C  2  65 8E                    adc L008E              ; 65 8E
001F1E  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F21  2  A9 F8                    lda #$F8               ; A9 F8
001F23  2  18                       clc                    ; 18
001F24  2  65 8E                    adc L008E              ; 65 8E
001F26  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F29  2  4C 84 1F                 jmp L1FA7              ; 4C A7 1F
001F2C  2               
001F2C  2               ;--------------------------------------------
001F2C  2               ; Set XPOS/YPOS
001F2C  2               ;--------------------------------------------
001F2C  2               
001F2C  2               L1F4B:
001F2C  2  A5 8A                    lda L008A              ; A5 8A
001F2E  2  29 FC                    and #$FC               ; 29 FC
001F30  2  18                       clc                    ; 18
001F31  2  6A                       ror A                  ; 6A
001F32  2  6A                       ror A                  ; 6A
001F33  2  18                       clc                    ; 18
001F34  2  69 01                    adc #$05-4               ; 69 05
001F36  2  8D 18 03     	sta XPOS
001F39  2  A5 8B                    lda L008B              ; A5 8B
001F3B  2  29 0F                    and #$0F               ; 29 0F
001F3D  2  18                       clc                    ; 18
001F3E  2  69 01                    adc #$01               ; 69 01
001F40  2  8D 19 03     	sta YPOS
001F43  2  60           	rts
001F44  2               
001F44  2               ;--------------------------------------------
001F44  2               ; Wipe 2 characters vertical
001F44  2               ;--------------------------------------------
001F44  2               
001F44  2  A9 08        L1F67:      lda #$08               ; Move cursor back 1 pos
001F46  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F49  2               
001F49  2  A9 20                    lda #$20               ; A9 20
001F4B  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F4E  2               
001F4E  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
001F50  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F53  2               
001F53  2  A9 08                    lda #$08               ; Move cursor back 1 pos
001F55  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F58  2               
001F58  2  A9 20                    lda #$20               ; A9 20
001F5A  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F5D  2  60                       rts                    ; 60
001F5E  2               
001F5E  2  A9 09        L1F81:      lda #$09               ; Move cursor forward 2 pos
001F60  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F63  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F66  2               
001F66  2  A9 20                    lda #$20               ; A9 20
001F68  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F6B  2               
001F6B  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
001F6D  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F70  2               
001F70  2  A9 08                    lda #$08               ; Move cursor back 1 pos
001F72  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
001F75  2               
001F75  2  A9 20                    lda #$20               ; A9 20
001F77  2  20 BD 22                 jsr L20AD              ; 20 AD 20
001F7A  2  60                       rts                    ; 60
001F7B  2  A5 8B        L1F9E:      lda L008B              ; A5 8B
001F7D  2  49 80                    eor #$80               ; 49 80
001F7F  2  85 8B                    sta L008B              ; 85 8B
001F81  2  60                       rts                    ; 60
001F82  2  EA           L1FA5:      nop                    ; EA
001F83  2  EA           L1FA6:      nop                    ; EA
001F84  2  AD 82 1F     L1FA7:      lda L1FA5              ; AD A5 1F
001F87  2  85 8A                    sta L008A              ; 85 8A
001F89  2  C5 8C                    cmp L008C              ; C5 8C
001F8B  2  F0 EE                    beq L1F9E              ; F0 EE
001F8D  2  C5 8D                    cmp L008D              ; C5 8D
001F8F  2  F0 EA                    beq L1F9E              ; F0 EA
001F91  2  60                       rts                    ; 60
001F92  2               
001F92  2               ;--------------------------------------------
001F92  2               ;--------------------------------------------
001F92  2               
001F92  2  A9 80        L1FB5:      lda #<L7280            ; Guard data
001F94  2  8D 00 1E                 sta L1E04
001F97  2  A9 4E                    lda #>L7280
001F99  2  8D 01 1E                 sta L1E05
001F9C  2               
001F9C  2  A9 EA                    lda #$EA               ; A9 EA
001F9E  2  A2 00                    ldx #$00               ; Wait loop
001FA0  2  EA           L1FC3:      nop                    ; EA
001FA1  2  EA                       nop                    ; EA
001FA2  2  EA                       nop                    ; EA
001FA3  2  EA                       nop                    ; EA
001FA4  2  EA                       nop                    ; EA
001FA5  2  EA                       nop                    ; EA
001FA6  2  E8                       inx                    ; E8
001FA7  2  E0 04                    cpx #$04               ; E0 04
001FA9  2  D0 F5                    bne L1FC3              ; D0 F5
001FAB  2               
001FAB  2  A6 80                    ldx L0080              ; Get level nr
001FAD  2  BD 04 23                 lda L20E5,X            ; BD E5 20
001FB0  2  85 8A                    sta L008A              ; 85 8A
001FB2  2               
001FB2  2               ; Set pointer to guards according to level
001FB2  2               
001FB2  2  A2 01                    ldx #$01               ; A2 01
001FB4  2  E4 8A        L1FD7:      cpx L008A              ; E4 8A
001FB6  2  D0 03                    bne no_jump
001FB8  2  4C 00 22     	jmp L1FF0              ; F0 15
001FBB  2               no_jump:
001FBB  2  AD 00 1E                 lda L1E04              ; AD 04 1E
001FBE  2  18                       clc                    ; 18
001FBF  2  69 80                    adc #$80               ; 69 80
001FC1  2  8D 00 1E                 sta L1E04              ; 8D 04 1E
001FC4  2  AD 01 1E                 lda L1E05              ; AD 05 1E
001FC7  2  69 00                    adc #$00               ; 69 00
001FC9  2  8D 01 1E                 sta L1E05              ; 8D 05 1E
001FCC  2  E8                       inx                    ; E8
001FCD  2               
001FCD  2  4C B4 1F                 jmp L1FD7              ; 4C D7 1F
001FD0  2               
001FD0  2  00 00 00 00  	.repeat $2200-*
001FD4  2  00 00 00 00  
001FD8  2  00 00 00 00  
002200  2               	  .byte 0
002200  2               	.endrep
002200  2               
002200  2               ; Copy guard data to ext_font
002200  2               
002200  2  A2 00        L1FF0:      ldx #$00               ; A2 00
002202  2  20 FF 1D     L1FF2:      jsr L1E03              ; Get data
002205  2  9D C8 38                 sta ext_font,X            ; 9D 00 0C
002208  2  E8                       inx                    ; E8
002209  2  E0 80                    cpx #$80               ; E0 80
00220B  2  D0 F5                    bne L1FF2              ; D0 F5
00220D  2               
00220D  2  A0 00                    ldy #$00               ; A0 00
00220F  2  B9 C8 38     L1FFF:      lda ext_font,Y            ; B9 00 0C
002212  2  8C B6 22                 sty L20A6              ; 8C A6 20
002215  2  20 9A 22                 jsr L208A              ; 20 8A 20
002218  2  AC B6 22                 ldy L20A6              ; AC A6 20
00221B  2  99 48 39                 sta ext_font+$80,Y            ; 99 80 0C
00221E  2  C8                       iny                    ; C8
00221F  2  C0 80                    cpy #$80               ; C0 80
002221  2  D0 EC                    bne L1FFF              ; D0 EC
002223  2               
002223  2               ; Set pointer to ?? according to level
002223  2               
002223  2  A9 12                    lda #<L22FF               ; A9 FF
002225  2  8D 00 1E                 sta L1E04              ; 8D 04 1E
002228  2  A9 25                    lda #>L22FF               ; A9 22
00222A  2  8D 01 1E                 sta L1E05              ; 8D 05 1E
00222D  2               
00222D  2  A0 00                    ldy #$00               ; A0 00
00222F  2  A2 00                    ldx #$00               ; A2 00
002231  2  AD 00 1E     L2021:      lda L1E04              ; AD 04 1E
002234  2  18                       clc                    ; 18
002235  2  69 01                    adc #$01               ; 69 01
002237  2  8D 00 1E                 sta L1E04              ; 8D 04 1E
00223A  2  AD 01 1E                 lda L1E05              ; AD 05 1E
00223D  2  69 00                    adc #$00               ; 69 00
00223F  2  8D 01 1E                 sta L1E05              ; 8D 05 1E
002242  2               
002242  2  20 FF 1D                 jsr L1E03              ; Get data
002245  2               
002245  2  C9 FF                    cmp #$FF               ; C9 FF
002247  2  F0 03                    beq L203C              ; F0 03
002249  2               
002249  2  4C 31 22                 jmp L2021              ; 4C 21 20
00224C  2               
00224C  2  C8           L203C:      iny                    ; C8
00224D  2  C4 80                    cpy L0080              ; Get level nr
00224F  2  D0 E0                    bne L2021              ; D0 E0
002251  2               
002251  2  A0 00                    ldy #$00               ; A0 00
002253  2  A2 01                    ldx #$01               ; A2 01
002255  2               
002255  2  20 FF 1D     L2045:      jsr L1E03              ; Get data
002258  2  20 80 22                 jsr L2070              ; 20 70 20
00225B  2               
00225B  2  C8                       iny                    ; C8
00225C  2  C8                       iny                    ; C8
00225D  2  20 80 22                 jsr L2070              ; 20 70 20
002260  2  E8                       inx                    ; E8
002261  2  88                       dey                    ; 88
002262  2  20 FF 1D                 jsr L1E03              ; Get data
002265  2  20 80 22                 jsr L2070              ; 20 70 20
002268  2  E8                       inx                    ; E8
002269  2  C8                       iny                    ; C8
00226A  2  C8                       iny                    ; C8
00226B  2  20 FF 1D                 jsr L1E03              ; Get data
00226E  2  20 80 22                 jsr L2070              ; 20 70 20
002271  2  E8                       inx                    ; E8
002272  2  20 FF 1D                 jsr L1E03              ; Get data
002275  2  C8                       iny                    ; C8
002276  2  C9 FF                    cmp #$FF               ; C9 FF
002278  2  D0 DB                    bne L2045              ; D0 DB
00227A  2  20 80 22                 jsr L2070              ; 20 70 20
00227D  2  4C 84 22                 jmp L2074              ; 4C 74 20
002280  2               
002280  2               ;--------------------------------------------
002280  2               
002280  2  99 80 0E     L2070:      sta L0D80,Y            ; 99 80 0D
002283  2  60                       rts                    ; 60
002284  2               
002284  2               ;------------------------------------------------
002284  2               ; Switch #0Exx with #0Cxx
002284  2               ;------------------------------------------------
002284  2               
002284  2  A2 00        L2074:      ldx #$00               ; A2 00
002286  2  BD C8 38     L2076:      lda ext_font,X            ; BD 00 0C
002289  2  A8                       tay                    ; A8
00228A  2  BD 00 0F                 lda L0E00,X            ; BD 00 0E
00228D  2  9D C8 38                 sta ext_font,X           ; 9D 00 0C
002290  2  98                       tya                    ; 98
002291  2  9D 00 0F                 sta L0E00,X            ; 9D 00 0E
002294  2  E8                       inx                    ; E8
002295  2  E0 FF                    cpx #$FF               ; E0 FF
002297  2  D0 ED                    bne L2076              ; D0 ED
002299  2  60                       rts                    ; 60
00229A  2               
00229A  2               ;------------------------------------------------
00229A  2               
00229A  2  8D B5 22     L208A:      sta L20A5              ; 8D A5 20
00229D  2  A0 00                    ldy #$00               ; A0 00
00229F  2  A2 00                    ldx #$00               ; A2 00
0022A1  2  AD B5 22     L2091:      lda L20A5              ; AD A5 20
0022A4  2  18                       clc                    ; 18
0022A5  2  2A                       rol A                  ; 2A
0022A6  2  8D B5 22                 sta L20A5              ; 8D A5 20
0022A9  2  B0 0C                    bcs L20A7              ; B0 0C
0022AB  2  8A                       txa                    ; 8A
0022AC  2  18                       clc                    ; 18
0022AD  2  6A           L209D:      ror A                  ; 6A
0022AE  2  AA                       tax                    ; AA
0022AF  2  C8                       iny                    ; C8
0022B0  2  C0 08                    cpy #$08               ; C0 08
0022B2  2  D0 ED                    bne L2091              ; D0 ED
0022B4  2  60                       rts                    ; 60
0022B5  2               
0022B5  2  EA           L20A5:      nop                    ; EA
0022B6  2  EA           L20A6:      nop                    ; EA
0022B7  2               
0022B7  2  8A           L20A7:      txa                    ; 8A
0022B8  2  38                       sec                    ; 38
0022B9  2  4C AD 22                 jmp L209D              ; 4C 9D 20
0022BC  2               
0022BC  2  EA           L20AC:      .byte $EA
0022BD  2               
0022BD  2  8D BC 22     L20AD:      sta L20AC              ; 8D AC 20
0022C0  2  AD 19 03                 lda L0319              ; AD 19 03
0022C3  2  18                       clc                    ; 18
0022C4  2  69 02                    adc #$02               ; 69 02
0022C6  2  CD 04 28                 cmp L25FF              ; YPOS Exit
0022C9  2  D0 15                    bne L20D0              ; D0 15
0022CB  2  AD 18 03     L20BB:      lda L0318              ; AD 18 03
0022CE  2  CD 03 28                 cmp L25FE              ; XPOS Exit
0022D1  2  F0 08                    beq L20CB              ; F0 08
0022D3  2  38                       sec                    ; 38
0022D4  2  E9 01                    sbc #$01               ; E9 01
0022D6  2  CD 03 28                 cmp L25FE              ; XPOS Exit
0022D9  2  D0 10                    bne L20DB              ; D0 10
0022DB  2               
0022DB  2  A9 09        L20CB:      lda #$09               ; Move cursor forward 1 pos
0022DD  2  4C 10 3A                 jmp OSWRCH             ; 4C EE FF
0022E0  2               
0022E0  2  38           L20D0:      sec                    ; 38
0022E1  2  E9 01                    sbc #$01               ; E9 01
0022E3  2  CD 04 28                 cmp L25FF              ; YPOS Exit
0022E6  2  D0 03                    bne L20DB              ; D0 03
0022E8  2  4C CB 22                 jmp L20BB              ; 4C BB 20
0022EB  2               
0022EB  2  AD BC 22     L20DB:      lda L20AC              ; AD AC 20
0022EE  2  C9 E0        	cmp #$e0
0022F0  2  90 05        	bcc is_space
0022F2  2  A2 80        	ldx #$80
0022F4  2  8E CF 3E     	stx guardflag
0022F7  2               is_space:
0022F7  2  20 10 3A                 jsr OSWRCH             ; Print character
0022FA  2  A2 00        	ldx #$00
0022FC  2  8E CF 3E     	stx guardflag
0022FF  2  60           	rts
002300  2               
002300  2               ;--------------------------------------------
002300  2               ; Colours
002300  2               ;--------------------------------------------
002300  2               
002300  2  03 02 01 03  L20E1:      .byte $03,$02,$01,$03
002304  2               
002304  2               ;--------------------------------------------
002304  2               
002304  2  EA 01 02 03  L20E5:      .byte $EA,$01,$02,$03,$04,$05,$06,$07
002308  2  04 05 06 07  
00230C  2  08 09 0A 0B              .byte $08,$09,$0A,$0B,$08,$0C,$00,$0D
002310  2  08 0C 00 0D  
002314  2  0E 0F 09 10              .byte $0E,$0F,$09,$10,$01
002318  2  01           
002319  2               
002319  2               ;--------------------------------------------
002319  2               ;
002319  2               ;--------------------------------------------
002319  2               
002319  2  20 3A 24     L20FA:      jsr L2227              ; 20 27 22
00231C  2               
00231C  2  A2 00                    ldx #$00               ; A2 00
00231E  2  BD 80 0E     L20FF:      lda L0D80,X            ; BD 80 0D
002321  2  9D 90 0E                 sta L0D90,X            ; 9D 90 0D
002324  2  E8                       inx                    ; E8
002325  2  E0 05                    cpx #$05               ; E0 05
002327  2  D0 F5                    bne L20FF              ; D0 F5
002329  2               
002329  2  AD 8F 24                 lda L227C              ; AD 7C 22
00232C  2  38                       sec                    ; 38
00232D  2  E9 05                    sbc #$05               ; E9 05
00232F  2  0A                       asl A                  ; 0A
002330  2  0A                       asl A                  ; 0A
002331  2  8D 80 0E                 sta L0D80              ; 8D 80 0D
002334  2               
002334  2  AD 90 24                 lda L227D              ; AD 7D 22
002337  2  18                       clc                    ; 18
002338  2  69 01                    adc #$01               ; 69 01
00233A  2  8D 81 0E                 sta L0D81              ; 8D 81 0D
00233D  2               
00233D  2  A9 FF                    lda #$FF               ; A9 FF
00233F  2  8D 84 0E                 sta L0D84              ; 8D 84 0D
002342  2               
002342  2  20 23 45                 jsr L68DF              ; 20 DF 68
002345  2               
002345  2  A2 00                    ldx #$00               ; A2 00
002347  2  BD 90 0E     L2128:      lda L0D90,X            ; BD 90 0D
00234A  2  9D 80 0E                 sta L0D80,X            ; 9D 80 0D
00234D  2  E8                       inx                    ; E8
00234E  2  E0 05                    cpx #$05               ; E0 05
002350  2  D0 F5                    bne L2128              ; D0 F5
002352  2               
002352  2  20 17 24                 jsr L2204              ; 20 04 22
002355  2  EE 90 24                 inc L227D              ; EE 7D 22
002358  2               
002358  2  AD 8F 24     	lda L227C              ; AD 7C 22
00235B  2  38           	sec
00235C  2  E9 04        	sbc #4
00235E  2  8D 18 03     	sta XPOS
002361  2  AD 90 24     	lda L227D              ; AD 7D 22
002364  2  29 01        	and #$01               ; 29 01
002366  2  85 3F        	sta L003F              ; 85 3F
002368  2  AD 90 24     	lda L227D              ; AD 7D 22
00236B  2  C9 00        	cmp #$00               ; C9 00
00236D  2  D0 09        	bne L2165              ; D0 09
00236F  2  18           	clc                    ; 18
002370  2  69 01        	adc #$01               ; 69 01
002372  2  8D 19 03     	sta YPOS
002375  2               
002375  2  4C 80 23                 jmp L216D              ; 4C 6D 21
002378  2               
002378  2               L2165:
002378  2  8D 19 03     	sta YPOS
00237B  2               
00237B  2  A9 20                    lda #$20               ; A9 20
00237D  2  20 2D 24                 jsr L221A              ; 20 1A 22
002380  2               
002380  2  AD 90 24     L216D:      lda L227D              ; AD 7D 22
002383  2  CD 8E 24                 cmp L227B              ; CD 7B 22
002386  2  F0 13                    beq L2188              ; F0 13
002388  2               
002388  2  A9 E0        L2175:      lda #$E0               ; A9 E0
00238A  2  18                       clc                    ; 18
00238B  2  65 3F                    adc L003F              ; 65 3F
00238D  2  A8                       tay                    ; A8
00238E  2  20 2D 24                 jsr L221A              ; 20 1A 22
002391  2  98                       tya                    ; 98
002392  2  18                       clc                    ; 18
002393  2  69 02                    adc #$02               ; 69 02
002395  2  20 10 3A                 jsr OSWRCH             ; Print character
002398  2  4C 17 24                 jmp L2204              ; 4C 04 22
00239B  2               
00239B  2  EE 91 24     L2188:      inc L227E              ; EE 7E 22
00239E  2  CE 90 24                 dec L227D              ; CE 7D 22
0023A1  2  AD 91 24                 lda L227E              ; AD 7E 22
0023A4  2  C9 04                    cmp #$04               ; C9 04
0023A6  2  F0 15                    beq L21AA              ; F0 15
0023A8  2  C9 01                    cmp #$01               ; C9 01
0023AA  2  F0 DC                    beq L2175              ; F0 DC
0023AC  2  C9 02                    cmp #$02               ; C9 02
0023AE  2  F0 5A                    beq L21F7              ; F0 5A
0023B0  2  A9 E5                    lda #$E5               ; A9 E5
0023B2  2  20 2D 24                 jsr L221A              ; 20 1A 22
0023B5  2               
0023B5  2  A9 E7                    lda #$E7               ; A9 E7
0023B7  2  20 10 3A                 jsr OSWRCH             ; Print character
0023BA  2  4C 17 24                 jmp L2204              ; 4C 04 22
0023BD  2               
0023BD  2  A9 00        L21AA:      lda #$00               ; A9 00
0023BF  2  8D 91 24                 sta L227E              ; 8D 7E 22
0023C2  2  A9 FF                    lda #$FF               ; A9 FF
0023C4  2  8D 90 24                 sta L227D              ; 8D 7D 22
0023C7  2  A9 20                    lda #$20               ; A9 20
0023C9  2  20 2D 24                 jsr L221A              ; 20 1A 22
0023CC  2               
0023CC  2  A9 20                    lda #$20               ; Print space
0023CE  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
0023D1  2               
0023D1  2  EE 92 24                 inc L227F              ; EE 7F 22
0023D4  2  AD 92 24                 lda L227F              ; AD 7F 22
0023D7  2  29 0F                    and #$0F               ; 29 0F
0023D9  2  AA                       tax                    ; AA
0023DA  2  BD 93 24                 lda L2280,X            ; BD 80 22
0023DD  2  A8                       tay                    ; A8
0023DE  2  29 1F                    and #$1F               ; 29 1F
0023E0  2  18                       clc                    ; 18
0023E1  2  69 04                    adc #$04               ; 69 04
0023E3  2  8D 8F 24                 sta L227C              ; 8D 7C 22
0023E6  2  98                       tya                    ; 98
0023E7  2  29 E0                    and #$E0               ; 29 E0
0023E9  2  4A                       lsr A                  ; 4A
0023EA  2  4A                       lsr A                  ; 4A
0023EB  2  4A                       lsr A                  ; 4A
0023EC  2  4A                       lsr A                  ; 4A
0023ED  2  4A                       lsr A                  ; 4A
0023EE  2  18                       clc                    ; 18
0023EF  2  69 03                    adc #$03               ; 69 03
0023F1  2  8D 8E 24                 sta L227B              ; 8D 7B 22
0023F4  2  AD 8F 24                 lda L227C              ; AD 7C 22
0023F7  2  C9 19                    cmp #$19               ; C9 19
0023F9  2  F0 07                    beq L21EF              ; F0 07
0023FB  2  C9 1A                    cmp #$1A               ; C9 1A
0023FD  2  F0 03                    beq L21EF              ; F0 03
0023FF  2  4C 17 24                 jmp L2204              ; 4C 04 22
002402  2               
002402  2  A9 0B        L21EF:      lda #$0B               ; A9 0B
002404  2  8D 8E 24                 sta L227B              ; 8D 7B 22
002407  2  4C 17 24                 jmp L2204              ; 4C 04 22
00240A  2               
00240A  2  A9 E4        L21F7:      lda #$E4               ; A9 E4
00240C  2  20 2D 24                 jsr L221A              ; 20 1A 22
00240F  2               
00240F  2  A9 E6                    lda #$E6               ; A9 E6
002411  2  20 10 3A                 jsr OSWRCH             ; Print character
002414  2  4C 17 24                 jmp L2204              ; 4C 04 22
002417  2               
002417  2  A2 00        L2204:      ldx #$00               ; A2 00
002419  2  BD D3 24     L2206:      lda L22C0,X            ; BD C0 22
00241C  2  A8                       tay                    ; A8
00241D  2  BD C8 38                 lda ext_font,X            ; BD 00 0C
002420  2  9D D3 24                 sta L22C0,X            ; 9D C0 22
002423  2  98                       tya                    ; 98
002424  2  9D C8 38                 sta ext_font,X            ; 9D 00 0C
002427  2  E8                       inx                    ; E8
002428  2  E0 40                    cpx #$40               ; E0 40
00242A  2  D0 ED                    bne L2206              ; D0 ED
00242C  2  60                       rts                    ; 60
00242D  2               
00242D  2               ;--------------------------------------------
00242D  2               
00242D  2  20 10 3A     L221A:      jsr OSWRCH             ; Print character
002430  2               
002430  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
002432  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002435  2               
002435  2  A9 08                    lda #$08               ; Move cursor back 1 pos
002437  2  4C 10 3A                 jmp OSWRCH             ; 4C EE FF
00243A  2               
00243A  2  AD E9 5A     L2227:      lda L7EED              ; AD ED 7E
00243D  2  29 10                    and #$10               ; 29 10
00243F  2  C9 00                    cmp #$00               ; C9 00
002441  2  F0 0E                    beq L223E              ; F0 0E
002443  2               
002443  2               ;------------------------
002443  2               ; AANPASSEN
002443  2               ;------------------------
002443  2               
002443  2  A2 86                    ldx #>$862b               ; A2 3F
002445  2  A0 2B                    ldy #<$862b               ; A0 F2
002447  2  20 54 24                 jsr L2241              ; 20 41 22
00244A  2               
00244A  2  A2 8A                    ldx #>$8a2b               ; A2 49
00244C  2  A0 2B                    ldy #<$8a2b               ; A0 F2
00244E  2  20 54 24                 jsr L2241              ; 20 41 22
002451  2               
002451  2               ;------------------------
002451  2               
002451  2  4C 80 5A     L223E:      jmp L7E80              ; 4C 80 7E
002454  2               
002454  2  8E 8C 24     L2241:      stx L2279              ; 8E 79 22
002457  2  8C 8B 24                 sty L2278              ; 8C 78 22
00245A  2               
00245A  2  A2 00                    ldx #$00               ; A2 00
00245C  2  20 8A 24                 jsr L2277              ; 20 77 22
00245F  2  29 80                    and #$80               ; 29 80
002461  2  C9 00                    cmp #$00               ; C9 00
002463  2  D0 22                    bne L2274              ; Death
002465  2               
002465  2  A2 20                    ldx #$20               ; A2 07
002467  2  20 8A 24                 jsr L2277              ; 20 77 22
00246A  2  29 01                    and #$01               ; 29 01
00246C  2  C9 00                    cmp #$00               ; C9 00
00246E  2  D0 17                    bne L2274              ; Death
002470  2               
002470  2  A2 09                    ldx #$09               ; A2 90
002472  2  20 8A 24                 jsr L2277              ; 20 77 22
002475  2  29 80                    and #$80               ; 29 80
002477  2  C9 00                    cmp #$00               ; C9 00
002479  2  D0 0C                    bne L2274              ; Death
00247B  2               
00247B  2  A2 29                    ldx #$29               ; A2 97
00247D  2  20 8A 24                 jsr L2277              ; 20 77 22
002480  2  29 01                    and #$01               ; 29 01
002482  2  C9 00                    cmp #$00               ; C9 00
002484  2  D0 01                    bne L2274              ; Death
002486  2  60                       rts                    ; 60
002487  2               
002487  2  4C FF 43     L2274:      jmp L67D6              ; Death
00248A  2               
00248A  2  BD FF FF     L2277:      lda LFFFF,X            ; BD FF FF
00248D  2  60                       rts                    ; 60
00248E  2               
00248E  2  06           L227B:      .byte $06
00248F  2               
00248F  2  08           L227C:      .byte $08
002490  2  FF           L227D:      .byte $FF
002491  2               
002491  2  00           L227E:      .byte $00
002492  2  00           L227F:      .byte $00
002493  2               
002493  2  64 1B 28 A9  L2280:      .byte $64,$1B,$28,$A9,$16,$1D,$02,$58
002497  2  16 1D 02 58  
00249B  2  65 57 27 D9              .byte $65,$57,$27,$D9,$AA,$1C,$15,$63
00249F  2  AA 1C 15 63  
0024A3  2               
0024A3  2               ;--------------------------------------------
0024A3  2               ; Set RTS instruction in print bottomline routine
0024A3  2               ; to skip printing bottomline
0024A3  2               ; Print level name
0024A3  2               ;--------------------------------------------
0024A3  2               
0024A3  2  A9 60        L2290:      lda #$60               ; RTS instruction
0024A5  2  8D 19 27                 sta L2500              ; 8D 00 25
0024A8  2               
0024A8  2  20 6C 30                 jsr L2EF0              ; Print level name
0024AB  2  4C 1C 27                 jmp L2503              ; Print bottom line
0024AE  2               
0024AE  2               ;--------------------------------------------
0024AE  2               ; Set RTS instruction in print bottomline routine
0024AE  2               ; to skip printing bottomline + set vars
0024AE  2               ;--------------------------------------------
0024AE  2               
0024AE  2               L229B:
0024AE  2  A9 20                    lda #$20               ; JSR instruction
0024B0  2  8D 19 27                 sta L2500              ; 8D 00 25
0024B3  2               
0024B3  2  A9 08                    lda #$08               ; A9 08
0024B5  2  8D 8F 24                 sta L227C              ; 8D 7C 22
0024B8  2  A9 FF                    lda #$FF               ; A9 FF
0024BA  2  8D 90 24                 sta L227D              ; 8D 7D 22
0024BD  2               
0024BD  2  A9 06                    lda #$06               ; A9 06
0024BF  2  8D 8E 24                 sta L227B              ; 8D 7B 22
0024C2  2               
0024C2  2  A9 00                    lda #$00               ; A9 00
0024C4  2  8D 92 24                 sta L227F              ; 8D 7F 22
0024C7  2               
0024C7  2  A9 F0                    lda #$F0               ; A9 F0
0024C9  2  8D E9 5A                 sta L7EED              ; 8D ED 7E
0024CC  2               
0024CC  2  4C 07 26                 jmp L2427              ; 4C 27 24
0024CF  2               
0024CF  2               ;--------------------------------------------
0024CF  2               
0024CF  2  7C 6B 4C E8              .byte $7C,$6B,$4C,$E8
0024D3  2               
0024D3  2  00 00 22 91  L22C0:      .byte $00,$00,$22,$91,$4A,$91,$4A,$12
0024D7  2  4A 91 4A 12  
0024DB  2  00 20 2A 4A              .byte $00,$20,$2A,$4A,$4A,$51,$22,$14
0024DF  2  4A 51 22 14  
0024E3  2  48 1C 2E 7D              .byte $48,$1C,$2E,$7D,$57,$7D,$36,$1C
0024E7  2  57 7D 36 1C  
0024EB  2  42 3C 36 5F              .byte $42,$3C,$36,$5F,$7D,$6F,$3A,$1C
0024EF  2  7D 6F 3A 1C  
0024F3  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$22,$91,$4A
0024F7  2  00 22 91 4A  
0024FB  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$40
0024FF  2  00 00 00 40  
002503  2  91 4A 12 48              .byte $91,$4A,$12,$48,$1C,$2E,$7D,$57
002507  2  1C 2E 7D 57  
00250B  2  09 20 14 40              .byte $09,$20,$14,$40,$28,$02,$22
00250F  2  28 02 22     
002512  2               
002512  2               ; Horizontal guard data
002512  2               
002512  2  5D           L22FF:      .byte $5D
002513  2               
002513  2  FF 1A 87 3A              .byte $FF,$1A,$87,$3A					; Level 1
002517  2  FF 47 03 01              .byte $FF,$47,$03,$01, $72,$0D,$2D				; Level 2
00251B  2  72 0D 2D     
00251E  2  FF 3F 03 01              .byte $FF,$3F,$03,$01, $4A,$0D,$01, $45,$83,$72		; Level 3
002522  2  4A 0D 01 45  
002526  2  83 72        
002528  2  FF 01 8D 26              .byte $FF,$01,$8D,$26, $15,$8D,$3A				; Level 4
00252C  2  15 8D 3A     
00252F  2  FF 0C 87 2F              .byte $FF,$0C,$87,$2F, $2F,$03,$01				; Level 5
002533  2  2F 03 01     
002536  2  FF 14 88 32              .byte $FF,$14,$88,$32, $34,$88,$52, $19,$8D,$4E, $5D,$8D,$72; Level 6
00253A  2  34 88 52 19  
00253E  2  8D 4E 5D 8D  
002543  2  FF 38 81 72              .byte $FF,$38,$81,$72, $27,$08,$05, $41,$8D,$72		; Level 7
002547  2  27 08 05 41  
00254B  2  8D 72        
00254D  2  FF 22 0D 01              .byte $FF,$22,$0D,$01, $29,$AB,$3A, $45,$87,$52		; Level 8
002551  2  29 AB 3A 45  
002555  2  87 52        
002557  2  FF 31 83 46              .byte $FF,$31,$83,$46, $31,$AA,$46				; Level 9
00255B  2  31 AA 46     
00255E  2  FF 41 85 52              .byte $FF,$41,$85,$52, $20,$87,$36, $0D,$8D,$66, $36,$2A,$1C; Level 10
002562  2  20 87 36 0D  
002566  2  8D 66 36 2A  
00256B  2  FF 14 8D 4A              .byte $FF,$14,$8D,$4A, $38,$83,$5B, $35,$A7,$49		; Level 11
00256F  2  38 83 5B 35  
002573  2  A7 49        
002575  2  FF 26 AB 3A              .byte $FF,$26,$AB,$3A, $22,$0D,$02, $5E,$86,$6E
002579  2  22 0D 02 5E  
00257D  2  86 6E        
00257F  2  FF 1A 81 6E              .byte $FF,$1A,$81,$6E, $6E,$24,$1A, $62,$07,$26, $5A,$2A,$1A
002583  2  6E 24 1A 62  
002587  2  07 26 5A 2A  
00258C  2  FF                       .byte $FF
00258D  2  FF 40 AD 4B              .byte $FF,$40,$AD,$4B
002591  2  FF 65 A5 72              .byte $FF,$65,$A5,$72, $4A,$0D,$02, $45,$87,$5E, $02,$8A,$1E
002595  2  4A 0D 02 45  
002599  2  87 5E 02 8A  
00259E  2  FF 10 AD 1F              .byte $FF,$10,$AD,$1F, $2C,$8D,$62
0025A2  2  2C 8D 62     
0025A5  2  FF 2E A3 46              .byte $FF,$2E,$A3,$46, $46,$06,$2E, $2E,$AA,$46, $42,$0D,$2E
0025A9  2  46 06 2E 2E  
0025AD  2  AA 46 42 0D  
0025B2  2  FF 4A 0B 1E              .byte $FF,$4A,$0B,$1E, $72,$0D,$5A, $1A,$0D,$02
0025B6  2  72 0D 5A 1A  
0025BA  2  0D 02        
0025BC  2  FF 1A 83 2E              .byte $FF,$1A,$83,$2E, $4A,$21,$30, $29,$29,$05
0025C0  2  4A 21 30 29  
0025C4  2  29 05        
0025C6  2  FF 29 05                 .byte $FF,$29,$05
0025C9  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
0025CD  2  FF FF FF FF  
0025D1  2  FF FF        
0025D3  2               
0025D3  2               ;--------------------------------------------
0025D3  2               ; Game entry
0025D3  2               ;--------------------------------------------
0025D3  2               
0025D3  2               L23C0:
0025D3  2               
0025D3  2               ; Set lives = 2
0025D3  2               
0025D3  2  A9 02        	lda #$02
0025D5  2  8D DF 43     	sta L67BE
0025D8  2               
0025D8  2               ; Wait loop for ca. 7 sec
0025D8  2               
0025D8  2  A9 E4        	lda #$E4
0025DA  2  85 70        	sta L0070
0025DC  2  AA           	tax
0025DD  2  A8           	tay
0025DE  2  85 70        	sta L0070
0025E0  2               L23FA:
0025E0  2  E8           	inx
0025E1  2  D0 FD        	bne L23FA
0025E3  2  C8           	iny
0025E4  2  D0 FA        	bne L23FA
0025E6  2  86 71        	stx L0071
0025E8  2  84 72        	sty L0072
0025EA  2               
0025EA  2               ; Wait for keypress
0025EA  2               
0025EA  2               ;	jsr $fe71
0025EA  2               ;	cpy #$0D		; Check RETURN key
0025EA  2  A2 02        	ldx #2
0025EC  2  20 00 34     	jsr readkey
0025EF  2  D0 13        	bne L2424
0025F1  2               
0025F1  2  A4 72        	ldy L0072
0025F3  2  A6 71        	ldx L0071
0025F5  2  E6 70        	inc L0070
0025F7  2  D0 E7        	bne L23FA
0025F9  2               
0025F9  2               
0025F9  2               ; No key pressed, start demo
0025F9  2               
0025F9  2  A9 00        	lda #$00
0025FB  2  8D 9C 31     	sta L3098		; Set hb music counter
0025FE  2               
0025FE  2  20 6B 3F     	jsr L62E3		; Start music
002601  2  4C 9E 31     	jmp L309A		; Show demo screen
002604  2               
002604  2               ; Key pressed, start game
002604  2               
002604  2               L2424:
002604  2  4C 52 3E     	jmp L6200		; Start game
002607  2               
002607  2               ;--------------------------------------------
002607  2               ; Set var
002607  2               ;--------------------------------------------
002607  2               
002607  2  A9 FF        L2427:      lda #$FF               ; A9 FF
002609  2  8D D2 47                 sta L6B7C              ; 8D 7C 6B
00260C  2               
00260C  2  4C DD 1C                 jmp L1CE8              ; 4C E8 1C
00260F  2               
00260F  2               ;--------------------------------------------
00260F  2               
00260F  2  00           L242F:      .byte $00
002610  2               
002610  2               ;--------------------------------------------
002610  2               ; Info Screen data top
002610  2               ;--------------------------------------------
002610  2               
002610  2               L2430:
002610  2  0E 02        	.byte 14,$02				; Cursor at 19,2
002612  2  53 4F 46 54  	.byte "SOFTWARE PROJECTS",0
002616  2  57 41 52 45  
00261A  2  20 50 52 4F  
002624  2  13 04        	.byte 19,$04				; Cursor at 23,4
002626  2  50 72 65 73  	.byte "Presents",0
00262A  2  65 6E 74 73  
00262E  2  00           
00262F  2  11 09        	.byte 17,$09				; Cursor at 26,9
002631  2  41 54 4F 4D  	.byte "ATOM VERSION",0
002635  2  20 56 45 52  
002639  2  53 49 4F 4E  
00263E  2  0F 0B        	.byte 15,$0B				; Cursor at 21,11
002640  2  42 59 20 4B  	.byte "BY KEES VAN OSS",0
002644  2  45 45 53 20  
002648  2  56 41 4E 20  
002650  2  0E 0F        	.byte 14,$0F				; Cursor at 19,15
002652  2  4F 52 49 47  	.byte "ORIGINAL PROGRAM",0,$ff
002656  2  49 4E 41 4C  
00265A  2  20 50 52 4F  
002664  2               
002664  2               L2477:
002664  2  1F 00 00                 .byte $1F,$00,$00				; Cursor at 0,0
002667  2  00 00 00 00              .byte $00,$00,$00,$00,$00
00266B  2  00           
00266C  2  00 00                    .byte $00,$00
00266E  2               
00266E  2               ;------------------------------------------------
00266E  2               ; Level data >level 8
00266E  2               ;------------------------------------------------
00266E  2               
00266E  2  85 0D CB 0D  L2480:      .byte $85,$0D,$CB,$0D,$94,$0D,$D9,$0D	; Level 9
002672  2  94 0D D9 0D  
002676  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00	; Level 10
00267A  2  00 00 00 00  
00267E  2               
00267E  2  83 4D 8C 07  L2490:      .byte $83,$4D,$8C,$07,$95,$6D,$DA,$0D	; Level 11
002682  2  95 6D DA 0D  
002686  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF	; Level 12
00268A  2  FF FF FF FF  
00268E  2  85 1D FF FF              .byte $85,$1D,$FF,$FF,$FF,$FF,$FF,$FF	; Level 13
002692  2  FF FF FF FF  
002696  2  C1 09 8B 04              .byte $C1,$09,$8B,$04,$D5,$07,$FF,$FF	; Level 14
00269A  2  D5 07 FF FF  
00269E  2  89 4D 8F 5D              .byte $89,$4D,$8F,$5D,$D5,$4D,$FF,$FF	; Level 15
0026A2  2  D5 4D FF FF  
0026A6  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF	; Level 16
0026AA  2  FF FF FF FF  
0026AE  2  83 8D 4A C0              .byte $83,$8D,$4A,$C0,$13,$80,$DB,$0C	; Level 17
0026B2  2  13 80 DB 0C  
0026B6  2  C5 1D 8A 1D              .byte $C5,$1D,$8A,$1D,$D4,$1D,$99,$1D	; Level 18
0026BA  2  D4 1D 99 1D  
0026BE  2  FF FF FF FF              .byte $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF	; Level 19
0026C2  2  FF FF FF FF  
0026C6  2  82 06 DA 4D              .byte $82,$06,$DA,$4D,$FF,$FF,$FF,$FF	; Level 20
0026CA  2  FF FF FF FF  
0026CE  2               
0026CE  2               ;--------------------------------------------
0026CE  2               ; Info Screen data bottom
0026CE  2               ;--------------------------------------------
0026CE  2               
0026CE  2               L24E0:
0026CE  2  0E 11        	.byte 14,17				; Cursor at 19,15
0026D0  2  42 59 20 4D  	.byte "BY MATTHEW SMITH",0
0026D4  2  41 54 54 48  
0026D8  2  45 57 20 53  
0026E1  2  10 13        	.byte 16,19
0026E3  2  42 42 43 20  	.byte "BBC  VERSION",0
0026E7  2  20 56 45 52  
0026EB  2  53 49 4F 4E  
0026F0  2  0E 15        	.byte 14,21
0026F2  2  42 59 20 44  	.byte "BY D.J.COATHUPE",0,$ff
0026F6  2  2E 4A 2E 43  
0026FA  2  4F 41 54 48  
002703  2               
002703  2               ;--------------------------------------------
002703  2               
002703  2  00 00 00     L24F5:      .byte $00,$00,$00
002706  2               
002706  2               ;--------------------------------------------
002706  2               ; Reset score
002706  2               ;--------------------------------------------
002706  2               
002706  2               L24F8:
002706  2  A9 00        	lda #0
002708  2  AA           	tax
002709  2               L24F9:
002709  2  9D DB 43     	sta L67BA,x
00270C  2  E8           	inx
00270D  2  E0 03        	cpx #$03
00270F  2  D0 F8        	bne L24F9
002711  2  4C 98 32     	jmp L3190
002714  2               
002714  2               ;--------------------------------------------
002714  2               
002714  2  00 00 00 00              .byte $00,$00,$00,$00,$00
002718  2  00           
002719  2               
002719  2  20 A3 24     L2500:      jsr L2290              ; Skip bottomline 
00271C  2               
00271C  2               ; Print "Score     Lives    Level 18"
00271C  2               
00271C  2  A5 80        L2503:      lda L0080              ; Get level nr
00271E  2  C9 0A                    cmp #$0A               ; C9 0A
002720  2  D0 08                    bne L2511              ; D0 08
002722  2  A9 FF                    lda #$FF               ; A9 FF
002724  2  8D B0 27                 sta L25A6              ; 8D A6 25
002727  2  4C 47 27                 jmp L252E              ; 4C 2E 25
00272A  2               
00272A  2  A4 80        L2511:      ldy L0080              ; Get level nr
00272C  2  B9 B1 27                 lda L25A7,Y            ; B9 A7 25
00272F  2  29 80                    and #$80               ; 29 80
002731  2  18                       clc                    ; 18
002732  2  65 71                    adc L0071              ; 65 71
002734  2  18                       clc                    ; 18
002735  2  69 05                    adc #$05               ; 69 05
002737  2  8D AE 27                 sta L25A4              ; 8D A4 25
00273A  2  A5 72                    lda L0072              ; A5 72
00273C  2  18                       clc                    ; 18
00273D  2  69 01                    adc #$01               ; 69 01
00273F  2  8D AF 27                 sta L25A5              ; 8D A5 25
002742  2  A5 73                    lda L0073              ; A5 73
002744  2  8D B0 27                 sta L25A6              ; 8D A6 25
002747  2               
002747  2               ; Print line "Score         Lives      Level 18" at 4,19
002747  2               
002747  2               L252E:
002747  2  A9 00        	lda #$04-4
002749  2  8D 18 03     	sta XPOS
00274C  2  A9 13        	lda #$13
00274E  2  8D 19 03     	sta YPOS
002751  2               
002751  2  A0 00                    ldy #$00               ; A0 00
002753  2  B9 B2 27     L253F:      lda L25A8,Y            ; B9 A8 25
002756  2  29 7F                    and #$7F               ; 29 7F
002758  2  20 10 3A                 jsr OSWRCH             ; Print character
00275B  2  C8                       iny                    ; C8
00275C  2  C0 20                    cpy #$20               ; C0 20
00275E  2  D0 F3                    bne L253F              ; D0 F3
002760  2  60                       rts                    ; 60
002761  2               
002761  2               ;--------------------------------------------
002761  2               ; Scroll conveyor
002761  2               ;--------------------------------------------
002761  2               
002761  2               L254D:
002761  2  20 C5 40     	jsr L646D		; Set vars in demo mode
002764  2               
002764  2  A5 80        	lda L0080		; Get level nr
002766  2  C9 12        	cmp #$12		; Check level 18
002768  2  F0 3B        	beq L259B		; Jump if level 18
00276A  2               
00276A  2  EE B1 27     	inc L25A7
00276D  2  AD B0 27     	lda L25A6
002770  2  C9 FF        	cmp #$FF
002772  2  F0 31        	beq L259B
002774  2               
002774  2  AD AE 27     	lda L25A4
002777  2  29 80        	and #$80
002779  2  C9 80        	cmp #$80
00277B  2  F0 29        	beq L259C
00277D  2               
00277D  2  AD B1 27     	lda L25A7
002780  2               L2576:
002780  2  AA           	tax
002781  2               
002781  2  AD AE 27     	lda L25A4		; Set cursor pos
002784  2  29 7F        	and #$7F
002786  2  38           	sec
002787  2  E9 04        	sbc #$04
002789  2  8D 18 03     	sta XPOS
00278C  2  AD AF 27     	lda L25A5
00278F  2  8D 19 03     	sta YPOS
002792  2               
002792  2               ; Scroll conveyor
002792  2               
002792  2  A0 00        	ldy #$00               ; A0 00
002794  2  8A           	txa                    ; 8A
002795  2  29 03        	and #$03               ; 29 03
002797  2  18           	clc                    ; 18
002798  2  69 EB        	adc #$EB               ; 69 EB
00279A  2               L2592:
00279A  2  29 8F        	and #$8f
00279C  2  20 10 3A     	jsr OSWRCH             ; Print character
00279F  2  C8           	iny                    ; C8
0027A0  2  CC B0 27     	cpy L25A6              ; CC A6 25
0027A3  2  D0 F5        	bne L2592              ; D0 F7
0027A5  2               L259B:
0027A5  2  60           	rts                    ; 60
0027A6  2               
0027A6  2               L259C:
0027A6  2  AD B1 27     	lda L25A7              ; AD A7 25
0027A9  2  49 03        	eor #$03               ; 49 03
0027AB  2  4C 80 27     	jmp L2576              ; 4C 76 25
0027AE  2               
0027AE  2  EA           L25A4:		.byte $EA
0027AF  2  EA           L25A5:		.byte $EA
0027B0  2  EA           L25A6:		.byte $EA
0027B1  2  EA           L25A7:		.byte $EA
0027B2  2               
0027B2  2               ;--------------------------------------------
0027B2  2               ;        01234567890123456789012345678901
0027B2  2               ; Print "Score         Lives     Level 18"
0027B2  2               ;
0027B2  2               ; Conveyor direction info:
0027B2  2               ; ------------------------
0027B2  2               ; L25A8 = level01, L25A9 = level02, etc
0027B2  2               ;   Bit 7=0 -> conveyor scroll left
0027B2  2               ;   Bit 7=1 -> conveyor scroll right
0027B2  2               ;--------------------------------------------
0027B2  2               
0027B2  2  53 E3 6F F2  L25A8:	.byte $53,$E3,$6F,$F2,$65,$20,$09,$89
0027B6  2  65 20 09 89  
0027BA  2  89 09 09 89  	.byte $89,$09,$09,$89,$A0,$20,$4C,$69
0027BE  2  A0 20 4C 69  
0027C2  2  F6 65 F3 20  	.byte $F6,$65,$F3,$20,$09,$09,$20,$20
0027C6  2  09 09 20 20  
0027CA  2  4C 65 76 65  	.byte $4C,$65,$76,$65,$6C,$20,$31,$38
0027CE  2  6C 20 31 38  
0027D2  2               
0027D2  2               ;--------------------------------------------
0027D2  2               ; Print 2 digit level nr
0027D2  2               ;--------------------------------------------
0027D2  2               
0027D2  2               L25C8:
0027D2  2  A9 FF        	lda #$FF               ; A9 FF
0027D4  2  20 5D 43     	jsr L673C              ; 20 3C 67
0027D7  2               
0027D7  2  A9 1E        	lda #$22-4               ; A9 22
0027D9  2  8D 18 03     	sta XPOS
0027DC  2  A9 13        	lda #$13               ; A9 13
0027DE  2  8D 19 03     	sta YPOS
0027E1  2               
0027E1  2  A5 80        	lda L0080              ; Get level nr
0027E3  2  AA           	tax                    ; AA
0027E4  2  A0 00        	ldy #$00               ; A0 00
0027E6  2  20 EE 27     	jsr L25E9              ; 20 E9 25
0027E9  2  8A           	txa                    ; 8A
0027EA  2  A8           	tay                    ; A8
0027EB  2  4C F9 27     	jmp L25F4              ; 4C F4 25
0027EE  2               L25E9:
0027EE  2  C9 0A        	cmp #$0A               ; C9 0A
0027F0  2  90 07        	bcc L25F4              ; 90 07
0027F2  2  C8           	iny                    ; C8
0027F3  2  38           	sec                    ; 38
0027F4  2  E9 0A        	sbc #$0A               ; E9 0A
0027F6  2  4C EE 27     	jmp L25E9              ; 4C E9 25
0027F9  2               L25F4:
0027F9  2  AA           	tax                    ; AA
0027FA  2  98           	tya                    ; 98
0027FB  2  18           	clc                    ; 18
0027FC  2  69 30        	adc #$30               ; 69 30
0027FE  2  4C 10 3A     	jmp OSWRCH             ; Print number
002801  2               
002801  2               ;--------------------------------------------
002801  2               
002801  2  74 68        L25FC:      .byte $74,$68
002803  2               
002803  2  13           L25FE:      .byte $13		; XPOS Exit
002804  2  07           L25FF:      .byte $07		; YPOS Exit
002805  2               
002805  2               ;--------------------------------------------
002805  2               
002805  2  BD FF FF     L2600:      lda LFFFF,X            ; BD FF FF
002808  2  60                       rts                    ; 60
002809  2               
002809  2  A9 80                    lda #$80               ; A9 80
00280B  2  8D 06 28                 sta L2601              ; 8D 01 26
00280E  2  A9 26                    lda #$26               ; A9 26
002810  2  8D 07 28                 sta L2602              ; 8D 02 26
002813  2  A9 00                    lda #$00               ; A9 00
002815  2  8D 86 28                 sta L2693              ; 8D 93 26
002818  2               
002818  2  A2 00                    ldx #$00               ; A2 00
00281A  2  20 05 28     L261F:      jsr L2600              ; 20 00 26
00281D  2  C9 20                    cmp #$20               ; C9 20
00281F  2  90 0B                    bcc L2631              ; 90 0B
002821  2  E8           L2626:      inx                    ; E8
002822  2  E0 00                    cpx #$00               ; E0 00
002824  2  D0 F4                    bne L261F              ; D0 F4
002826  2  EE 07 28                 inc L2602              ; EE 02 26
002829  2  4C 1A 28                 jmp L261F              ; 4C 1F 26
00282C  2  EE 86 28     L2631:      inc L2693              ; EE 93 26
00282F  2  A5 80                    lda L0080              ; Get level nr
002831  2  CD 86 28                 cmp L2693              ; CD 93 26
002834  2  D0 EB                    bne L2626              ; D0 EB
002836  2               
002836  2  20 05 28                 jsr L2600              ; 20 00 26
002839  2               ;	sec
002839  2               ;	sbc #4
002839  2  8D 18 03     	sta XPOS
00283C  2  A9 11        	lda #$11
00283E  2  8D 19 03     	sta YPOS
002841  2               
002841  2  E8           L264E:      inx                    ; E8
002842  2  20 05 28                 jsr L2600              ; 20 00 26
002845  2  C9 20                    cmp #$20               ; C9 20
002847  2  90 06                    bcc L265C              ; 90 06
002849  2  20 10 3A                 jsr OSWRCH             ; Print character
00284C  2  4C 41 28                 jmp L264E              ; 4C 4E 26
00284F  2               
00284F  2  A9 00        L265C:      lda #$00               ; A9 00
002851  2  8D 88 28                 sta L2695              ; 8D 95 26
002854  2  A9 5A                    lda #$5A               ; A9 5A
002856  2  8D 89 28                 sta L2696              ; 8D 96 26
002859  2  A0 C0                    ldy #$C0               ; A0 C0
00285B  2  A9 B9                    lda #$B9               ; A9 B9
00285D  2  8D 87 28                 sta L2694              ; 8D 94 26
002860  2  20 87 28                 jsr L2694              ; 20 94 26
002863  2  49 FF                    eor #$FF               ; 49 FF
002865  2  AA                       tax                    ; AA
002866  2  A9 99                    lda #$99               ; A9 99
002868  2  8D 87 28                 sta L2694              ; 8D 94 26
00286B  2  8A                       txa                    ; 8A
00286C  2  20 87 28                 jsr L2694              ; 20 94 26
00286F  2  C8                       iny                    ; C8
002870  2  C0 C0                    cpy #$C0               ; C0 C0
002872  2  F0                       .byte $F0
002873  2               
002873  2               ;--------------------------------------------
002873  2               ; Level names
002873  2               ; First byte is nr of spaces
002873  2               ; From 2nd byte on, level name
002873  2               ;--------------------------------------------
002873  2               
002873  2  09           L2680:      .byte $09
002874  2  43 65 6E 74              .byte "Central Cavern"			; Level  1
002878  2  72 61 6C 20  
00287C  2  43 61 76 65  
002882  2               
002882  2  09                       .byte $09
002883  2               L2690:
002883  2  54 68 65 20              .byte "The Cold Room"			; Level  2
002887  2  43 6F 6C 64  
00288B  2  20 52 6F 6F  
002890  2               
002890  2  09                       .byte $09
002891  2  54 68 65 20              .byte "The Menagerie"			; Level  3
002895  2  4D 65 6E 61  
002899  2  67 65 72 69  
00289E  2               
00289E  2  03                       .byte $03
00289F  2  41 62 61 6E              .byte "Abandoned Uranium Workings"		; Level  4
0028A3  2  64 6F 6E 65  
0028A7  2  64 20 55 72  
0028B9  2               
0028B9  2  09                       .byte $09
0028BA  2  45 75 67 65              .byte "Eugene's Lair"			; Level  5
0028BE  2  6E 65 27 73  
0028C2  2  20 4C 61 69  
0028C7  2               
0028C7  2  08                       .byte $08
0028C8  2  50 72 6F 63              .byte "Processing Plant"			; Level  6
0028CC  2  65 73 73 69  
0028D0  2  6E 67 20 50  
0028D8  2               
0028D8  2  0C                       .byte $0C
0028D9  2  54 68 65 20              .byte "The Vat"				; Level  7
0028DD  2  56 61 74     
0028E0  2               
0028E0  2  00                       .byte $00
0028E1  2  4D 69 6E 65              .byte "Miner Willy meets the Kong Beast"	; Level  8
0028E5  2  72 20 57 69  
0028E9  2  6C 6C 79 20  
002901  2               
002901  2  07                       .byte $07
002902  2  57 61 63 6B              .byte "Wacky Amoebatrons"			; Level  9
002906  2  79 20 41 6D  
00290A  2  6F 65 62 61  
002913  2               
002913  2  06                       .byte $06
002914  2  54 68 65 20              .byte "The Endorian Forest"			; Level 10
002918  2  45 6E 64 6F  
00291C  2  72 69 61 6E  
002927  2               
002927  2  00                       .byte $00
002928  2  41 74 74 61              .byte "Attack of the Mutant Telephones"	; Level 11
00292C  2  63 6B 20 6F  
002930  2  66 20 74 68  
002947  2               
002947  2  01                       .byte $01
002948  2  52 65 74 75              .byte "Return of the Alien Kong Beast"	; Level 12
00294C  2  72 6E 20 6F  
002950  2  66 20 74 68  
002966  2               
002966  2  0A                       .byte $0A
002967  2  4F 72 65 20              .byte "Ore Refinery"			; Level 13
00296B  2  52 65 66 69  
00296F  2  6E 65 72 79  
002973  2               
002973  2  07                       .byte $07
002974  2  53 6B 79 6C              .byte "Skylab Landing Bay"			; Level 14
002978  2  61 62 20 4C  
00297C  2  61 6E 64 69  
002986  2               
002986  2  0C                       .byte $0C
002987  2  54 68 65 20              .byte "The Bank"				; Level 15
00298B  2  42 61 6E 6B  
00298F  2               
00298F  2  06                       .byte $06
002990  2  54 68 65 20              .byte "The Sixteenth Cavern"		; Level 16
002994  2  53 69 78 74  
002998  2  65 65 6E 74  
0029A4  2               
0029A4  2  09                       .byte $09
0029A5  2  54 68 65 20              .byte "The Warehouse"			; Level 17
0029A9  2  57 61 72 65  
0029AD  2  68 6F 75 73  
0029B2  2               
0029B2  2  06                       .byte $06
0029B3  2  41 6D 6F 65              .byte "Amoebatrons' Revenge"		; Level 18
0029B7  2  62 61 74 72  
0029BB  2  6F 6E 73 27  
0029C7  2               
0029C7  2  07                       .byte $07
0029C8  2  54 68 65 20              .byte "The Meteor Storm     "		; Level 19
0029CC  2  4D 65 74 65  
0029D0  2  6F 72 20 53  
0029DD  2               
0029DD  2  07                       .byte $07
0029DE  2  54 68 65 20              .byte "The Final Barrier"			; Level 20
0029E2  2  46 69 6E 61  
0029E6  2  6C 20 42 61  
0029EF  2  0D 07                    .byte $0D,$07
0029F1  2  54 68                    .byte "Th"
0029F3  2               
0029F3  2  EA           L2800:      .byte $EA
0029F4  2               
0029F4  2               ;--------------------------------------------
0029F4  2               ; Clear screen
0029F4  2               ;--------------------------------------------
0029F4  2               
0029F4  2               ; Switch to CLEAR4
0029F4  2               
0029F4  2               L2821:
0029F4  2  A9 F0        	lda #$F0		; Switch to CLEAR4 mono
0029F6  2  8D 00 B0     	sta $B000
0029F9  2               
0029F9  2               ; Clear screen ($8000-$97FF)
0029F9  2               
0029F9  2  A9 80        	lda #>$8000	
0029FB  2  8D 09 2A     	sta L283C	
0029FE  2  A9 00        	lda #<$8000	
002A00  2  8D 08 2A     	sta L283B	
002A03  2               
002A03  2  A2 00        	ldx #$00	
002A05  2               L2838:
002A05  2  A9 00        	lda #$00	
002A07  2               L283A:
002A07  2  9D 00 80     	sta $8000,X	
002A0A  2  E8           	inx
002A0B  2  F0 03        	beq L2843
002A0D  2  4C 05 2A     	jmp L2838
002A10  2               L2843:
002A10  2  EE 09 2A     	inc L283C
002A13  2  AD 09 2A     	lda L283C
002A16  2  C9 98        	cmp #>$9800
002A18  2  90 EB        	bcc L2838
002A1A  2               
002A1A  2  A9 20        	lda #$20
002A1C  2  A0 00        	ldy #0
002A1E  2               clr_loop1:
002A1E  2  99 52 3B     	sta charmap,y
002A21  2  99 52 3C     	sta charmap+$100,y
002A24  2  99 52 3D     	sta charmap+$200,y
002A27  2  C8           	iny
002A28  2  D0 F4        	bne clr_loop1
002A2A  2  60           	rts
002A2B  2               
002A2B  2               ;--------------------------------------------
002A2B  2               ; Entry level 8
002A2B  2               ;--------------------------------------------
002A2B  2               
002A2B  2  A9 E1        L2852:      lda #$E1               ; A9 E1
002A2D  2  8D E4 2D                 sta L2C52              ; Conveyor tile
002A30  2  A9 02                    lda #$02               ; A9 02
002A32  2  8D E7 2D                 sta L2C55              ; 8D 55 2C
002A35  2  8D E8 2D                 sta L2C56              ; 8D 56 2C
002A38  2  A9 03                    lda #$03               ; A9 03
002A3A  2  8D E9 2D                 sta L2C57              ; 8D 57 2C
002A3D  2  4C B1 2A                 jmp L28F2              ; 4C F2 28
002A40  2               
002A40  2               ;--------------------------------------------
002A40  2               ; Entry level 8,12
002A40  2               ; Print switch left (&F8)
002A40  2               ;--------------------------------------------
002A40  2               
002A40  2               L2867:
002A40  2  A9 06        	lda #$0A-4               ; A9 0A
002A42  2  8D 18 03     	sta XPOS
002A45  2  A9 01        	lda #$01               ; A9 01
002A47  2  8D 19 03     	sta YPOS
002A4A  2               
002A4A  2  A9 F8                    lda #$F8               ; Print switch
002A4C  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002A4F  2               
002A4F  2  A2 00                    ldx #$00               ; Print 10 spaces
002A51  2  A9 20                    lda #$20               ; A9 20
002A53  2  E8           L287F:      inx                    ; E8
002A54  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002A57  2  E0 0B                    cpx #$0B               ; E0 0B
002A59  2  D0 F8                    bne L287F              ; D0 F8
002A5B  2               
002A5B  2  A9 F8                    lda #$F8               ; Print switch
002A5D  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002A60  2  4C 92 2A                 jmp L28D3              ; 4C D3 28
002A63  2               
002A63  2               ;--------------------------------------------
002A63  2               ; Entry level 13
002A63  2               ;--------------------------------------------
002A63  2               
002A63  2  A9 F5        L288F:      lda #$F5               ; A9 F5
002A65  2  8D E2 2D                 sta L2C50              ; Sinking floor tile
002A68  2  A9 03                    lda #$03               ; A9 03
002A6A  2  8D E7 2D                 sta L2C55              ; 8D 55 2C
002A6D  2  4C B1 2A                 jmp L28F2              ; 4C F2 28
002A70  2               
002A70  2               ;--------------------------------------------
002A70  2               ; Reset colour in A to colour 0
002A70  2               ; VDU 19,X,0,0,0,0
002A70  2               ;--------------------------------------------
002A70  2               
002A70  2               L289C:
002A70  2               ;            tay                    ; A8
002A70  2               ;            lda #$13               ; VDU19
002A70  2               ;            jsr OSWRCH             ; 20 EE FF
002A70  2               ;            txa                    ; 8A
002A70  2               ;            jsr OSWRCH             ; 20 EE FF
002A70  2               ;            tya                    ; 98
002A70  2               ;            ldy #$00               ; A0 00
002A70  2               ;L28A9:      jsr OSWRCH             ; 20 EE FF
002A70  2               ;            iny                    ; C8
002A70  2               ;            cpy #$04               ; C0 04
002A70  2               ;            bne L28A9              ; D0 F8
002A70  2  60           	rts                    ; 60
002A71  2               
002A71  2               ;--------------------------------------------
002A71  2               ; Get screendata
002A71  2               ;--------------------------------------------
002A71  2               
002A71  2  BD A4 2D     L28B2:      lda L2C00,X            ; BD 00 2C
002A74  2  60                       rts                    ; 60
002A75  2               
002A75  2               ;--------------------------------------------
002A75  2               
002A75  2  85 80                    sta L0080              ; Set level nr
002A77  2               
002A77  2               ;--------------------------------------------
002A77  2               ; Plot screen
002A77  2               ;--------------------------------------------
002A77  2               
002A77  2               L28B8:
002A77  2  20 F4 29     	jsr L2821		; Clear screen
002A7A  2               
002A7A  2  A9 48        	lda #>L6C00		; Set hb>L6C00 
002A7C  2  8D 73 2A     	sta L28B4
002A7F  2               
002A7F  2  A9 EB        	lda #$eB		; Bush tile $eb
002A81  2  8D E4 2D     	sta L2C52
002A84  2               
002A84  2  A5 80        	lda L0080		; Get levelnr
002A86  2  C9 0A        	cmp #$0A
002A88  2  F0 A1        	beq L2852		; If levelnr=10, jump L2852
002A8A  2               
002A8A  2  C9 08        	cmp #$08
002A8C  2  F0 B2        	beq L2867		; If levelnr=08, jump L2867
002A8E  2               
002A8E  2  C9 0C        	cmp #$0C
002A90  2  F0 AE        	beq L2867		; If levelnr=12, jump L2867
002A92  2               
002A92  2               ; Entry all other screens
002A92  2               
002A92  2               L28D3:
002A92  2  A9 EB        	lda #$eB		; Bush tile $eb
002A94  2  8D E4 2D     	sta L2C52
002A97  2               
002A97  2  A9 03        	lda #$03
002A99  2  8D E8 2D     	sta L2C56
002A9C  2  A9 01        	lda #$01
002A9E  2  8D E7 2D     	sta L2C55
002AA1  2  A9 02        	lda #$02
002AA3  2  8D E9 2D     	sta L2C57
002AA6  2               	
002AA6  2  A5 80        	lda L0080		; Get levelnr
002AA8  2  C9 0D        	cmp #$0D
002AAA  2  F0 B7        	beq L288F		; If levelnr=13, jump L288F
002AAC  2               
002AAC  2  A9 E2        	lda #$E2
002AAE  2  8D E2 2D     	sta L2C50		; Sinking floor tile
002AB1  2               L28F2:
002AB1  2  A2 00        	ldx #0
002AB3  2               
002AB3  2  A9 00        	lda #<L6C00
002AB5  2  8D 72 2A     	sta L28B3		; Set lb=<L6C00
002AB8  2  8E F3 29     	stx L2800		; 8E 00 28
002ABB  2               
002ABB  2               ; Skip screens to point to current screen
002ABB  2               
002ABB  2               L28FA:
002ABB  2  20 71 2A     	jsr L28B2		; Get screendata
002ABE  2               
002ABE  2  E8           	inx
002ABF  2  E0 00        	cpx #$00
002AC1  2  F0 07        	beq L2909
002AC3  2               
002AC3  2  C9 FF        	cmp #$FF
002AC5  2  F0 09        	beq L290F
002AC7  2               
002AC7  2  4C BB 2A     	jmp L28FA
002ACA  2               L2909:
002ACA  2  EE 73 2A     	inc L28B4		; Next screendata address
002ACD  2  4C BB 2A     	jmp L28FA
002AD0  2               L290F:
002AD0  2  20 71 2A     	jsr L28B2		; Get screendata
002AD3  2  C9 FF        	cmp #$FF
002AD5  2  D0 E4        	bne L28FA
002AD7  2               
002AD7  2  EE F3 29     	inc L2800
002ADA  2  AD F3 29     	lda L2800
002ADD  2  C5 80        	cmp L0080		; Get level nr
002ADF  2  D0 DA        	bne L28FA
002AE1  2               
002AE1  2  4C E8 2A     	jmp L2927		; Data found, build screen
002AE4  2               
002AE4  2               ;---------------------------------------------
002AE4  2               ; Read data
002AE4  2               ;---------------------------------------------
002AE4  2               
002AE4  2               L2923:
002AE4  2  BD A4 2D     	lda L2C00,X		; Get screen layout data
002AE7  2  60           	rts
002AE8  2               
002AE8  2               ;---------------------------------------------
002AE8  2               ; Read parameters of screen data to build screen
002AE8  2               ;
002AE8  2               ; B0 = L0081	; L-nibble = colour 0
002AE8  2               ;		; H-nibble = colour 1
002AE8  2               ; B1 = L0082	; L-nibble = colour 2
002AE8  2               ;		; H-nibble = ?
002AE8  2               ;
002AE8  2               ; B2 = L0083	; L-nibble = char right
002AE8  2               ;		; H-nibble = char left
002AE8  2               ; B3 = L0084
002AE8  2               ; B4 = L0085	; H/L nibble
002AE8  2               ; B5 = L0086
002AE8  2               ;---------------------------------------------
002AE8  2               
002AE8  2               ; Set startaddress screendata
002AE8  2               
002AE8  2               L2927:
002AE8  2  E8           	inx                    
002AE9  2  8E E5 2A     	stx L2924		; Set lb screendata address
002AEC  2  AD 73 2A     	lda L28B4
002AEF  2  8D E6 2A     	sta L2925		; Set hb screendata address
002AF2  2               
002AF2  2               ; Read parameters B0, B1
002AF2  2               
002AF2  2  A2 00        	ldx #$00		; Read B0
002AF4  2  20 E4 2A     	jsr L2923		; Read data
002AF7  2  85 81        	sta L0081
002AF9  2               
002AF9  2  E8           	inx			; Read B1
002AFA  2  20 E4 2A     	jsr L2923		; Read data
002AFD  2  85 82        	sta L0082
002AFF  2               
002AFF  2               ; Reset colours
002AFF  2               
002AFF  2  A2 00        	ldx #$00		; Set colour nr
002B01  2  A9 00        	lda #$00		; Set colour
002B03  2               L2942:
002B03  2  20 70 2A     	jsr L289C		; Reset colour
002B06  2  E8           	inx
002B07  2  E0 04        	cpx #$04
002B09  2  D0 F8        	bne L2942		; Repeat for all colours
002B0B  2               
002B0B  2               ; Read parameters B2, B5
002B0B  2               
002B0B  2  A2 02        	ldx #$02		; Set pointer
002B0D  2               L294C:
002B0D  2  20 E4 2A     	jsr L2923		; Read B2-B7
002B10  2  95 81        	sta L0081,X
002B12  2  E8           	inx
002B13  2  E0 06        	cpx #$06
002B15  2  D0 F6        	bne L294C		; Repeat
002B17  2               
002B17  2               ; Highnibble = char $80/$81 = 8x8 tile
002B17  2               
002B17  2  A5 83        	lda L0083		; Get B2
002B19  2  29 F0        	and #$F0		; Filter high nibble
002B1B  2  18           	clc
002B1C  2  6A           	ror A
002B1D  2  AA           	tax			; Set data ptr to multiple8
002B1E  2               
002B1E  2  A0 00        	ldy #$00		; Set font pointer
002B20  2               L295F:
002B20  2  BD 00 0C     	lda L0B00,X		; Get char data
002B23  2  99 C8 38     	sta ext_font,Y		; Copy into font
002B26  2  E8           	inx			; Inc data ptr
002B27  2  C8           	iny			; Inc font ptr
002B28  2  C0 10        	cpy #$10		; Both chars copied
002B2A  2  D0 F4        	bne L295F		; If not repeat
002B2C  2               
002B2C  2               ; Lownibble  = char $82 = 8x8 tile
002B2C  2               
002B2C  2  A5 83        	lda L0083		; Get B2
002B2E  2  29 0F        	and #$0F		; Filter low nibble
002B30  2  18           	clc
002B31  2  2A           	rol A
002B32  2  2A           	rol A
002B33  2  2A           	rol A
002B34  2  AA           	tax			; Set data ptr to multiple8
002B35  2               
002B35  2  A0 00        	ldy #$00		; Set font pointer
002B37  2               L2976:
002B37  2  BD 80 0C     	lda L0B80,X		; Get char data
002B3A  2  99 D8 38     	sta ext_font+$10,Y	; Copy into font
002B3D  2  C8           	iny			; Inc data ptr
002B3E  2  E8           	inx			; Inc font ptr
002B3F  2  C0 08         	cpy #$08		; Char copied?
002B41  2  D0 F4        	bne L2976		; If not repeat
002B43  2               
002B43  2               ; Create sinking tile char $82 -> char $83-$8A
002B43  2               
002B43  2  A9 01        	lda #$01		; Set sink factor
002B45  2  8D F3 29     	sta L2800
002B48  2               
002B48  2  A9 E0        	lda #<(ext_font+$18)		; Set font char ptr
002B4A  2  8D 5B 2B     	sta L2995
002B4D  2  A9 38        	lda #>(ext_font+$18)		; Set font char ptr
002B4F  2  8D 5C 2B     	sta L2995+1
002B52  2               
002B52  2               L298C:
002B52  2  A2 00        	ldx #$00		; Set data ptr
002B54  2  AC F3 29     	ldy L2800		; Set font ptr
002B57  2               L2991:
002B57  2  BD D8 38     	lda ext_font+$10,X	; Get char data
002B5A  2               L2994:
002B5A  2  99 E0 38     	sta ext_font+$18,Y	; Copy into font
002B5D  2  E8           	inx			; Inc data ptr
002B5E  2  C8           	iny			; Inc font ptr
002B5F  2  C0 08        	cpy #$08		; Char copied?
002B61  2  D0 F4        	bne L2991		; If not repeat
002B63  2               
002B63  2  EE F3 29     	inc L2800		; Decrease sink factor
002B66  2  AD 5B 2B     	lda L2995		; Point to next char
002B69  2  18           	clc
002B6A  2  69 08        	adc #$08
002B6C  2  8D 5B 2B     	sta L2995
002B6F  2  AD 5C 2B     	lda L2995+1
002B72  2  69 00        	adc #0
002B74  2  8D 5C 2B     	sta L2995+1
002B77  2               
002B77  2  AD F3 29     	lda L2800
002B7A  2  C9 08        	cmp #$08		; 8 Sinking tiles created?
002B7C  2  D0 D4        	bne L298C		; No, repeat
002B7E  2               
002B7E  2  A5 84                    lda L0084              ; A5 84
002B80  2  29 7F                    and #$7F               ; 29 7F
002B82  2  18                       clc                    ; 18
002B83  2  2A                       rol A                  ; 2A
002B84  2  2A                       rol A                  ; 2A
002B85  2  2A                       rol A                  ; 2A
002B86  2  2A                       rol A                  ; 2A
002B87  2  2A                       rol A                  ; 2A
002B88  2  AA                       tax                    ; AA
002B89  2               
002B89  2  A0 00                    ldy #$00               ; A0 00
002B8B  2  BD A0 0C     L29BD:      lda L0BA0,X            ; BD A0 0B
002B8E  2  99 20 39                 sta ext_font+$58,Y            ; 99 58 0C
002B91  2  E8                       inx                    ; E8
002B92  2  C8                       iny                    ; C8
002B93  2  C0 20                    cpy #$20               ; C0 20
002B95  2  D0 F4                    bne L29BD              ; D0 F4
002B97  2               
002B97  2  A5 85                    lda L0085              ; A5 85
002B99  2  29 F0                    and #$F0               ; 29 F0
002B9B  2  18                       clc                    ; 18
002B9C  2  6A                       ror A                  ; 6A
002B9D  2  AA                       tax                    ; AA
002B9E  2               
002B9E  2  A0 00                    ldy #$00               ; A0 00
002BA0  2  BD 40 0C     L29D2:      lda L0B40,X            ; BD 40 0B
002BA3  2  99 40 39                 sta ext_font+$78,Y            ; 99 78 0C
002BA6  2  C8                       iny                    ; C8
002BA7  2  E8                       inx                    ; E8
002BA8  2  C0 08                    cpy #$08               ; C0 08
002BAA  2  D0 F4                    bne L29D2              ; D0 F4
002BAC  2               
002BAC  2  A5 85                    lda L0085              ; A5 85
002BAE  2  29 0F                    and #$0F               ; 29 0F
002BB0  2  18                       clc                    ; 18
002BB1  2  2A                       rol A                  ; 2A
002BB2  2  2A                       rol A                  ; 2A
002BB3  2  2A                       rol A                  ; 2A
002BB4  2  AA                       tax                    ; AA
002BB5  2               
002BB5  2  A0 00                    ldy #$00               ; A0 00
002BB7  2  BD B0 0B     L29E9:      lda L0AB0,X            ; BD B0 0A
002BBA  2  99 48 39                 sta ext_font+$80,Y            ; 99 80 0C
002BBD  2  C8                       iny                    ; C8
002BBE  2  E8                       inx                    ; E8
002BBF  2  C0 08                    cpy #$08               ; C0 08
002BC1  2  D0 F4                    bne L29E9              ; D0 F4
002BC3  2               
002BC3  2  20 C9 2B                 jsr L29FB              ; 20 FB 29
002BC6  2               
002BC6  2  4C 42 2D                 jmp L2B85              ; 4C 85 2B
002BC9  2               
002BC9  2               ;-------------------------------------------
002BC9  2               
002BC9  2  A5 86        L29FB:      lda L0086              ; A5 86
002BCB  2  29 C0                    and #$C0               ; 29 C0
002BCD  2  18                       clc                    ; 18
002BCE  2  C9 00                    cmp #$00               ; C9 00
002BD0  2  F0 1E                    beq L2A22              ; F0 1E
002BD2  2               
002BD2  2  C9 80                    cmp #$80               ; C9 80
002BD4  2  F0 3B                    beq L2A43              ; F0 3B
002BD6  2               
002BD6  2  A5 86                    lda L0086              ; A5 86
002BD8  2  29 3F                    and #$3F               ; 29 3F
002BDA  2  18                       clc                    ; 18
002BDB  2  2A                       rol A                  ; 2A
002BDC  2  2A                       rol A                  ; 2A
002BDD  2  2A                       rol A                  ; 2A
002BDE  2  2A                       rol A                  ; 2A
002BDF  2  2A                       rol A                  ; 2A
002BE0  2  AA                       tax                    ; AA
002BE1  2               
002BE1  2  A0 00                    ldy #$00               ; A0 00
002BE3  2  BD 00 09     L2A15:      lda L0900,X            ; BD 00 09
002BE6  2  99 50 39                 sta ext_font+$88,Y            ; 99 88 0C
002BE9  2  E8                       inx                    ; E8
002BEA  2  C8                       iny                    ; C8
002BEB  2  C0 20                    cpy #$20               ; C0 20
002BED  2  D0 F4                    bne L2A15              ; D0 F4
002BEF  2               
002BEF  2  60                       rts                    ; 60
002BF0  2               
002BF0  2               ;-------------------------------------------
002BF0  2               
002BF0  2  A5 86        L2A22:      lda L0086              ; A5 86
002BF2  2  29 07                    and #$07               ; 29 07
002BF4  2  18                       clc                    ; 18
002BF5  2  2A                       rol A                  ; 2A
002BF6  2  2A                       rol A                  ; 2A
002BF7  2  2A                       rol A                  ; 2A
002BF8  2  AA                       tax                    ; AA
002BF9  2  A0 00                    ldy #$00               ; A0 00
002BFB  2  BD 80 09     L2A2D:      lda L0980,X            ; BD 80 09
002BFE  2  99 50 39                 sta ext_font+$88,Y            ; 99 88 0C
002C01  2  99 58 39                 sta ext_font+$90,Y            ; 99 90 0C
002C04  2  99 60 39                 sta ext_font+$98,Y            ; 99 98 0C
002C07  2  99 68 39                 sta ext_font+$A0,Y            ; 99 A0 0C
002C0A  2  E8                       inx                    ; E8
002C0B  2  C8                       iny                    ; C8
002C0C  2  C0 08                    cpy #$08               ; C0 08
002C0E  2  D0 EB                    bne L2A2D              ; D0 EB
002C10  2  60                       rts                    ; 60
002C11  2               
002C11  2  A9 09        L2A43:      lda #$09               ; A9 09
002C13  2  8D 31 2C                 sta L2A63              ; 8D 63 2A
002C16  2  A5 86                    lda L0086              ; A5 86
002C18  2  29 3F                    and #$3F               ; 29 3F
002C1A  2  18                       clc                    ; 18
002C1B  2  2A                       rol A                  ; 2A
002C1C  2  2A                       rol A                  ; 2A
002C1D  2  2A                       rol A                  ; 2A
002C1E  2  2A                       rol A                  ; 2A
002C1F  2  18                       clc                    ; 18
002C20  2  69 98                    adc #$98               ; 69 98
002C22  2  8D 30 2C                 sta L2A62              ; 8D 62 2A
002C25  2  AD 31 2C                 lda L2A63              ; AD 63 2A
002C28  2  69 00                    adc #$00               ; 69 00
002C2A  2  8D 31 2C                 sta L2A63              ; 8D 63 2A
002C2D  2  A0 00                    ldy #$00               ; A0 00
002C2F  2  AD 98 09     L2A61:      lda L0998              ; AD 98 09
002C32  2  99 50 39                 sta ext_font+$88,Y            ; 99 88 0C
002C35  2  AD 30 2C                 lda L2A62              ; AD 62 2A
002C38  2  18                       clc                    ; 18
002C39  2  69 01                    adc #$01               ; 69 01
002C3B  2  8D 30 2C                 sta L2A62              ; 8D 62 2A
002C3E  2  AD 31 2C                 lda L2A63              ; AD 63 2A
002C41  2  69 00                    adc #$00               ; 69 00
002C43  2  8D 31 2C                 sta L2A63              ; 8D 63 2A
002C46  2  C8                       iny                    ; C8
002C47  2  C0 10                    cpy #$10               ; C0 10
002C49  2  D0 E4                    bne L2A61              ; D0 E4
002C4B  2               
002C4B  2  A2 00                    ldx #$00               ; A2 00
002C4D  2  BD 58 39     L2A7F:      lda ext_font+$90,X            ; BD 90 0C
002C50  2  9D 60 39                 sta ext_font+$98,X            ; 9D 98 0C
002C53  2  E8                       inx                    ; E8
002C54  2  E0 08                    cpx #$08               ; E0 08
002C56  2  D0 F5                    bne L2A7F              ; D0 F5
002C58  2               
002C58  2  A2 00                    ldx #$00               ; A2 00
002C5A  2  BD 50 39     L2A8C:      lda ext_font+$88,X            ; BD 88 0C
002C5D  2  8E 7E 2C                 stx L2AB0              ; 8E B0 2A
002C60  2  20 7F 2C                 jsr L2AB1              ; 20 B1 2A
002C63  2  AE 7E 2C                 ldx L2AB0              ; AE B0 2A
002C66  2  9D 58 39                 sta ext_font+$90,X            ; 9D 90 0C
002C69  2  BD 60 39                 lda ext_font+$98,X            ; BD 98 0C
002C6C  2  8E 7E 2C                 stx L2AB0              ; 8E B0 2A
002C6F  2  20 7F 2C                 jsr L2AB1              ; 20 B1 2A
002C72  2  AE 7E 2C                 ldx L2AB0              ; AE B0 2A
002C75  2  9D 68 39                 sta ext_font+$A0,X            ; 9D A0 0C
002C78  2  E8                       inx                    ; E8
002C79  2  E0 08                    cpx #$08               ; E0 08
002C7B  2  D0 DD                    bne L2A8C              ; D0 DD
002C7D  2  60                       rts                    ; 60
002C7E  2               
002C7E  2  EA           L2AB0:      nop                    ; EA
002C7F  2  8D 9A 2C     L2AB1:      sta L2ACC              ; 8D CC 2A
002C82  2  A0 00                    ldy #$00               ; A0 00
002C84  2  A2 00                    ldx #$00               ; A2 00
002C86  2  AD 9A 2C     L2AB8:      lda L2ACC              ; AD CC 2A
002C89  2  18                       clc                    ; 18
002C8A  2  2A                       rol A                  ; 2A
002C8B  2  8D 9A 2C                 sta L2ACC              ; 8D CC 2A
002C8E  2  B0 0B                    bcs L2ACD              ; B0 0B
002C90  2  8A                       txa                    ; 8A
002C91  2  18                       clc                    ; 18
002C92  2  6A           L2AC4:      ror A                  ; 6A
002C93  2  AA                       tax                    ; AA
002C94  2  C8                       iny                    ; C8
002C95  2  C0 08                    cpy #$08               ; C0 08
002C97  2  D0 ED                    bne L2AB8              ; D0 ED
002C99  2  60                       rts                    ; 60
002C9A  2  EA           L2ACC:      nop                    ; EA
002C9B  2  8A           L2ACD:      txa                    ; 8A
002C9C  2  38                       sec                    ; 38
002C9D  2  4C 92 2C                 jmp L2AC4              ; 4C C4 2A
002CA0  2               
002CA0  2               ;--------------------------------------------
002CA0  2               ; Print exit
002CA0  2               ;--------------------------------------------
002CA0  2               
002CA0  2               L2AD2:
002CA0  2               
002CA0  2               ; Read coordinates to plot exit
002CA0  2               
002CA0  2  A2 07        	ldx #$07
002CA2  2  20 E4 2A     	jsr L2923		; Read data B7
002CA5  2  85 70        	sta L0070		; X-pos exit
002CA7  2  E8           	inx
002CA8  2  20 E4 2A     	jsr L2923		; Read data B8
002CAB  2  85 71        	sta L0071		; Y-pos exit
002CAD  2               
002CAD  2               ; Set X,Y coordinates
002CAD  2               
002CAD  2  A5 70        	lda L0070		; X-pos exit
002CAF  2  38           	sec
002CB0  2  E9 04        	sbc #$04
002CB2  2  8D 18 03     	sta XPOS
002CB5  2  A5 71        	lda L0071		; Y-pos exit
002CB7  2  38           	sec
002CB8  2  E9 02        	sbc #$02
002CBA  2  8D 19 03     	sta YPOS
002CBD  2               
002CBD  2               ; Print exit
002CBD  2               
002CBD  2  A2 00        	ldx #$00		; Data pointer
002CBF  2  BD CB 2C     L2AF3:	lda L2AFF,X 		; Get tile
002CC2  2  20 10 3A     	jsr OSWRCH		; Print character
002CC5  2  E8           	inx
002CC6  2  E0 07        	cpx #$08-1
002CC8  2  D0 F5        	bne L2AF3		; Next tile
002CCA  2               
002CCA  2  60           	rts
002CCB  2               
002CCB  2               ; Exit tile data
002CCB  2               
002CCB  2               L2AFF:
002CCB  2  F1 F2 0A 08  	.byte $F1,$F2,$0A,$08,$08,$F3,$F4,$00
002CCF  2  08 F3 F4 00  
002CD3  2               
002CD3  2               ;--------------------------------------------
002CD3  2               ; Exit read screen data + plot routine,
002CD3  2               ; all stripes drawn
002CD3  2               ;--------------------------------------------
002CD3  2               
002CD3  2               L2B07:
002CD3  2               ;            lda #$00		; $A9,$00
002CD3  2               ;            jsr OSWRCH		; $20,$EE,$FF
002CD3  2  20 CE 41                 jsr L6577           ; Draw air gauge
002CD6  2               
002CD6  2  20 61 27                 jsr L254D              ; Scroll conveyor
002CD9  2  20 A0 2C                 jsr L2AD2              ; 20 D2 2A
002CDC  2               
002CDC  2               ; Reset colours
002CDC  2               ; - Colour 0 = low nibble L0081
002CDC  2               ; - Colour 1 = high nibble L0081
002CDC  2               ; - Colour 2 = low nibble L0082
002CDC  2               ; - Colour 3 = 3
002CDC  2               
002CDC  2  A2 00                    ldx #$00               ; A2 00
002CDE  2  A5 81                    lda L0081              ; A5 81
002CE0  2  29 0F                    and #$0F               ; 29 0F
002CE2  2  20 70 2A                 jsr L289C              ; Reset colours
002CE5  2               
002CE5  2  A5 81                    lda L0081              ; A5 81
002CE7  2  29 F0                    and #$F0               ; 29 F0
002CE9  2  18                       clc                    ; 18
002CEA  2  6A                       ror A                  ; 6A
002CEB  2  6A                       ror A                  ; 6A
002CEC  2  6A                       ror A                  ; 6A
002CED  2  6A                       ror A                  ; 6A
002CEE  2  A2 01                    ldx #$01               ; A2 01
002CF0  2  20 70 2A                 jsr L289C              ; Reset colours
002CF3  2               
002CF3  2  A5 82                    lda L0082              ; A5 82
002CF5  2  29 0F                    and #$0F               ; 29 0F
002CF7  2  A2 02                    ldx #$02               ; A2 02
002CF9  2  20 70 2A                 jsr L289C              ; Reset colours
002CFC  2               
002CFC  2  A2 03                    ldx #$03               ; A2 03
002CFE  2  A9 03                    lda #$03               ; A9 03
002D00  2  20 70 2A                 jsr L289C              ; Reset colours
002D03  2               
002D03  2  4C 84 22                 jmp L2074              ; 4C 74 20
002D06  2               
002D06  2               ;--------------------------------------------
002D06  2               ; End of stripe marker
002D06  2               ; Chartype: 0 = Solid floor
002D06  2               ;           1 = Sinking floor
002D06  2               ;           2 = Wall
002D06  2               ;           3 = Conveyor
002D06  2               ;--------------------------------------------
002D06  2               
002D06  2  86 70        L2B49:      stx L0070              ; 86 70
002D08  2  A5 79                    lda L0079              ; A5 79
002D0A  2  C9 05                    cmp #$05               ; C9 05
002D0C  2  F0 C5                    beq L2B07              ; F0 B6
002D0E  2  E6 79                    inc L0079              ; E6 79
002D10  2  4C 4D 2D                 jmp L2B90              ; 4C 90 2B
002D13  2               
002D13  2               ;--------------------------------------------
002D13  2               ; Reset char type
002D13  2               ;--------------------------------------------
002D13  2               
002D13  2  E8           L2B56:      inx                    ; E8
002D14  2  20 E4 2A                 jsr L2923              ; Read data
002D17  2  85 79                    sta L0079              ; 85 79
002D19  2  86 70                    stx L0070              ; 86 70
002D1B  2  4C 4D 2D                 jmp L2B90              ; 4C 90 2B
002D1E  2               
002D1E  2               ;--------------------------------------------
002D1E  2               ; Vertical stripe marker
002D1E  2               ; Read X,Y,W,H
002D1E  2               ;--------------------------------------------
002D1E  2               
002D1E  2               L2B61:
002D1E  2  E8           	inx                    ; E8
002D1F  2  A0 00        	ldy #$00               ; A0 00
002D21  2               L2B64:
002D21  2  20 E4 2A     	jsr L2923              ; Read data
002D24  2  99 71 00     	sta L0071,Y            ; Save parameters
002D27  2  E8           	inx                    ; E8
002D28  2  C8           	iny                    ; C8
002D29  2  C0 04        	cpy #$04               ; C0 04
002D2B  2  D0 F4        	bne L2B64              ; D0 F4
002D2D  2               
002D2D  2  CA           	dex                    ; CA
002D2E  2  86 70        	stx L0070              ; 86 70
002D30  2               
002D30  2  20 36 2D     	jsr L2B79              ; Draw vertical stripe
002D33  2               
002D33  2  4C 4D 2D     	jmp L2B90              ; 4C 90 2B
002D36  2               
002D36  2               ;--------------------------------------------
002D36  2               ; Plot vertical stripe
002D36  2               ;
002D36  2               ; L0070 = data pointer
002D36  2               ; L0072 = Y-pos
002D36  2               ; L0074 = Heigth
002D36  2               ;--------------------------------------------
002D36  2               
002D36  2               L2B79:
002D36  2  20 A3 2D     	jsr L2BFF		; Plot tile
002D39  2  E6 72        	inc L0072		; Pos down
002D3B  2  A5 72        	lda L0072
002D3D  2  C5 74        	cmp L0074		; Check if all tiles plot
002D3F  2  D0 F5        	bne L2B79		; If no, repeat
002D41  2  60           	rts
002D42  2               
002D42  2               ;--------------------------------------------
002D42  2               ; Read screen data and plot stripe
002D42  2               ;--------------------------------------------
002D42  2               
002D42  2  20 EE 2D     L2B85:      jsr L2C5C              ; Build walls left + right + floor
002D45  2               
002D45  2  A9 08                    lda #$08               ; Set data pointer to first stripe
002D47  2  85 70                    sta L0070              ; 85 70
002D49  2               
002D49  2  A9 00                    lda #$00               ; 
002D4B  2  85 79                    sta L0079              ; Solid floor tile
002D4D  2               
002D4D  2  E6 70        L2B90:      inc L0070              ; E6 70
002D4F  2               
002D4F  2  A6 70                    ldx L0070              ; A6 70
002D51  2  20 E4 2A                 jsr L2923              ; Read data
002D54  2               
002D54  2  C9 FF                    cmp #$FF               ; Check for end of stripe marker
002D56  2  F0 AE                    beq L2B49              ; F0 AE
002D58  2               
002D58  2  C9 FE                    cmp #$FE               ; Check for vertical stripe marker
002D5A  2  F0 C2                    beq L2B61              ; F0 C2
002D5C  2               
002D5C  2  C9 FD                    cmp #$FD               ; Reset char type
002D5E  2  F0 B3                    beq L2B56              ; F0 B3
002D60  2               
002D60  2  A0 00                    ldy #$00               ; A0 00
002D62  2  A6 70                    ldx L0070              ; A6 70
002D64  2  20 E4 2A     L2BA7:      jsr L2923              ; Read data
002D67  2  99 71 00                 sta L0071,Y            ; 99 71 00
002D6A  2  C8                       iny                    ; C8
002D6B  2  E8                       inx                    ; E8
002D6C  2  C0 03                    cpy #$03               ; C0 03
002D6E  2  D0 F4                    bne L2BA7              ; D0 F4
002D70  2               
002D70  2  CA                       dex                    ; CA
002D71  2  86 70                    stx L0070              ; 86 70
002D73  2  20 A3 2D                 jsr L2BFF              ; Plot horizontal stripe
002D76  2               
002D76  2  4C 4D 2D                 jmp L2B90              ; 4C 90 2B
002D79  2               
002D79  2  A5 79        L2BBC:      lda L0079              ; A5 79
002D7B  2  C9 01                    cmp #$01               ; C9 01
002D7D  2  D0 2E                    bne L2C09              ; D0 47
002D7F  2               
002D7F  2  4C AD 2D                 jmp L2C16              ; 4C 16 2C
002D82  2               
002D82  2               ;--------------------------------------------
002D82  2               ; Plot sprite + mirrored sprite in level 14
002D82  2               ;--------------------------------------------
002D82  2               
002D82  2               L2BCF:
002D82  2  A5 79        	lda L0079
002D84  2  C9 00        	cmp #$00
002D86  2  D0 25        	bne L2C09
002D88  2               
002D88  2  A5 71        	lda L0071		; Set X-pos
002D8A  2  18           	clc
002D8B  2  69 01        	adc #$05-4
002D8D  2  8D 18 03     	sta XPOS
002D90  2               
002D90  2  A5 72        	lda L0072		; Set Y-pos
002D92  2  18           	clc
002D93  2  69 01        	adc #$01
002D95  2  8D 19 03     	sta YPOS
002D98  2               
002D98  2  A9 E0        	lda #$E0		; Character left
002D9A  2  20 10 3A     	jsr OSWRCH		; Print character
002D9D  2  A9 E1        	lda #$E1		; Character right
002D9F  2  20 10 3A     	jsr OSWRCH		; Print character
002DA2  2  60           	rts
002DA3  2               
002DA3  2               ;--------------------------------------------
002DA3  2               ; Plot horizontal stripe
002DA3  2               ;
002DA3  2               ; L0071 = X-pos
002DA3  2               ; L0072 = Y-pos
002DA3  2               ; L0073 = Nr of horizontal characters to plot
002DA3  2               ; L0074 = Nr of vertical characters to plot
002DA3  2               ; L0079 = Character pointer
002DA3  2               ;--------------------------------------------
002DA3  2               
002DA3  2               L2BFF:
002DA3  2  A5 80        	lda L0080		; Get level nr
002DA5  2               
002DA5  2  C9 07        	cmp #$07
002DA7  2  F0 D0        	beq L2BBC		; Jump if level=7
002DA9  2               
002DA9  2  C9 0E        	cmp #$0E
002DAB  2  F0 D5        	beq L2BCF		; Jump if level=14
002DAD  2               
002DAD  2               L2C09:
002DAD  2               L2C16:
002DAD  2  A5 71        	lda L0071		; Set X-pos
002DAF  2  18           	clc
002DB0  2  69 01        	adc #$05-4
002DB2  2  8D 18 03     	sta XPOS
002DB5  2               
002DB5  2  A5 72        	lda L0072		; Set Y-pos
002DB7  2  18           	clc
002DB8  2  69 01        	adc #$01
002DBA  2  8D 19 03     	sta YPOS
002DBD  2               
002DBD  2  A6 79        	ldx L0079		; Get char pointer
002DBF  2  BD E1 2D     	lda L2C4F,X		; Get character
002DC2  2  A0 00        	ldy #$00		; Set counter
002DC4  2               L2C32:
002DC4  2  20 10 3A     	jsr OSWRCH		; Print character
002DC7  2               
002DC7  2  C8           	iny			; Move left
002DC8  2  C4 73        	cpy L0073		; Check if all chars plotted
002DCA  2  D0 F8        	bne L2C32		; If not repeat
002DCC  2               
002DCC  2  A5 79        	lda L0079		; Get char pointer
002DCE  2  C9 03        	cmp #$03
002DD0  2  F0 01        	beq L2C41
002DD2  2               
002DD2  2  60           	rts
002DD3  2               
002DD3  2  A5 80        L2C41:      lda L0080              ; Get level nr
002DD5  2  C9 0A                    cmp #$0A               ; C9 0A
002DD7  2  F0 05                    beq L2C4C              ; Jump if level=10
002DD9  2               
002DD9  2  A9 F6                    lda #$F6               ; A9 F6
002DDB  2  8D E4 2D                 sta L2C52              ; Conveyor tile
002DDE  2               
002DDE  2  4C 19 27     L2C4C:      jmp L2500              ; 4C 00 25
002DE1  2               
002DE1  2               ;--------------------------------------------
002DE1  2               ; Screen tile types
002DE1  2               ;--------------------------------------------
002DE1  2               
002DE1  2  E0           L2C4F:      .byte $E0		; Solid floor tile
002DE2  2  E2           L2C50:      .byte $E2		; Sinking floor tile
002DE3  2  EF                       .byte $EF		; Wall tile
002DE4  2  EB           L2C52:      .byte $EB		; Bush tile $eb
002DE5  2  20           L2C53:      .byte $20		; Rock tile
002DE6  2               
002DE6  2               ;--------------------------------------------
002DE6  2               ; Textcolour setting
002DE6  2               ;--------------------------------------------
002DE6  2               
002DE6  2  01           L2C54:      .byte $01
002DE7  2  01           L2C55:      .byte $01
002DE8  2  03           L2C56:      .byte $03
002DE9  2  02 03 00 00  L2C57:      .byte $02,$03,$00,$00,$00
002DED  2  00           
002DEE  2               
002DEE  2               ;--------------------------------------------
002DEE  2               ; Build walls left + right + floor
002DEE  2               ;--------------------------------------------
002DEE  2               
002DEE  2               L2C5C:
002DEE  2               
002DEE  2               ; Build wall left
002DEE  2               
002DEE  2  A9 FF        	lda #$FF		; X pos-1
002DF0  2  85 71        	sta L0071
002DF2  2  A9 00        	lda #$00		; Y pos-1
002DF4  2  85 72        	sta L0072
002DF6  2  A9 01        	lda #$01		; Char count hor
002DF8  2  85 73        	sta L0073
002DFA  2  A9 10        	lda #$10		; Char count ver
002DFC  2  85 74        	sta L0074
002DFE  2  A9 02        	lda #$02		; Character pointer
002E00  2  85 79        	sta L0079
002E02  2  20 36 2D     	jsr L2B79		; Plot vertical stripe
002E05  2               
002E05  2               ; Build wall right
002E05  2               
002E05  2  A9 1E        	lda #$1E		; X pos-1
002E07  2  85 71        	sta L0071
002E09  2  A9 00        	lda #$00		; Y pos-1
002E0B  2  85 72        	sta L0072
002E0D  2  A9 10        	lda #$10		; Char count ver
002E0F  2  85 74        	sta L0074
002E11  2  20 36 2D     	jsr L2B79		; Plot vertical stripe
002E14  2               
002E14  2               ; Build floor
002E14  2               
002E14  2  A9 00        	lda #$00		; Character pointer
002E16  2  85 79        	sta L0079
002E18  2  A9 00        	lda #$00		; X pos-1
002E1A  2  85 71        	sta L0071
002E1C  2  A9 0F        	lda #$0F		; Y pos-1
002E1E  2  85 72        	sta L0072
002E20  2  A9 1E        	lda #$1E		; Char count hor
002E22  2  85 73        	sta L0073
002E24  2  20 A3 2D     	jsr L2BFF		; Plot horizontal stripe
002E27  2               
002E27  2  60           	rts
002E28  2               
002E28  2               ;--------------------------------------------
002E28  2               
002E28  2  0D           L2C96:      .byte $0D
002E29  2  03           L2C97:      .byte $03
002E2A  2               
002E2A  2               ;--------------------------------------------
002E2A  2               ; Get data from bush/key/rocks table
002E2A  2               ;--------------------------------------------
002E2A  2               
002E2A  2  AD FF FF     L2C98:      lda $ffff
002E2D  2  60                       rts                    ; 60
002E2E  2               
002E2E  2               ;--------------------------------------------
002E2E  2               
002E2E  2  20 19 27     L2C9C:      jsr L2500              ; 20 00 25
002E31  2  4C 44 2E                 jmp L2CB2              ; 4C B2 2C
002E34  2               
002E34  2               ;--------------------------------------------
002E34  2               ; Plot bush + keys + rocks
002E34  2               ;--------------------------------------------
002E34  2               
002E34  2  A9 00        L2CA2:      lda #$00               ; A9 00
002E36  2  8D 04 30                 sta L2E89              ; 8D 89 2E
002E39  2               
002E39  2  A9 4D                    lda #>L716F               ; A9 71
002E3B  2  8D 2C 2E                 sta L2C98+2              ; 8D 9A 2C
002E3E  2               
002E3E  2  A5 80                    lda L0080              ; Get level nr
002E40  2  C9 12                    cmp #$12               ; C9 12
002E42  2  F0 EA                    beq L2C9C              ; F0 EA
002E44  2               
002E44  2  A9 00        L2CB2:      lda #$00               ; A9 00
002E46  2  8D 79 2F                 sta L2DFE              ; Set temp. level nr
002E49  2               
002E49  2  A9 6F                    lda #<L716F               ; A9 6F
002E4B  2  8D 2B 2E                 sta L2C98+1              ; 8D 99 2C
002E4E  2               
002E4E  2               ; Find data address current level
002E4E  2               
002E4E  2  20 93 2F     L2CBC:      jsr L2E18              ; Increment datatable address
002E51  2  20 2A 2E                 jsr L2C98              ; Get data bush/key table
002E54  2  C9 FF                    cmp #$FF               ; Check 
002E56  2  F0 03                    beq L2CC9              ; F0 03
002E58  2               
002E58  2  4C 4E 2E                 jmp L2CBC              ; 4C BC 2C
002E5B  2               
002E5B  2  EE 79 2F     L2CC9:      inc L2DFE              ; Inc temp. level nr
002E5E  2               
002E5E  2  AD 79 2F                 lda L2DFE              ; Get temp. level nr
002E61  2  C5 80                    cmp L0080              ; Get level nr
002E63  2  D0 E9                    bne L2CBC              ; Repeat if different
002E65  2               
002E65  2               ; Point to right address
002E65  2               
002E65  2  20 93 2F                 jsr L2E18              ; Increment datatable address
002E68  2  20 2A 2E                 jsr L2C98              ; Get data bush/key table
002E6B  2  8D 7D 2F                 sta L2E02              ; 8D 02 2E
002E6E  2               
002E6E  2  AD 7D 2F                 lda L2E02              ; AD 02 2E
002E71  2  29 3F                    and #$3F               ; 29 3F
002E73  2  8D 7E 2F                 sta L2E03              ; bit 0-5=
002E76  2               
002E76  2  AD 7D 2F                 lda L2E02              ; AD 02 2E
002E79  2  29 C0                    and #$C0               ; 29 C0
002E7B  2  18                       clc                    ; 18
002E7C  2  2A                       rol A                  ; 2A
002E7D  2  2A                       rol A                  ; 2A
002E7E  2  2A                       rol A                  ; 2A
002E7F  2  8D 7D 2F                 sta L2E02              ; bit 6-7= nr of items
002E82  2               
002E82  2  EE 7D 2F                 inc L2E02              ; EE 02 2E
002E85  2               
002E85  2  A9 F0                    lda #$f0               ; Set Key tile
002E87  2  8D 78 2F                 sta L2DFD              ; 8D FD 2D
002E8A  2               
002E8A  2  A9 00        	lda #0
002E8C  2  8D 97 2E     	sta chr_filter
002E8F  2               
002E8F  2  20 72 2F                 jsr L2DF7              ; Set XPOS=5
002E92  2               
002E92  2  A2 00                    ldx #$00               ; A2 00
002E94  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002E97  2               
002E97  2  00           chr_filter:	.byte 0
002E98  2               
002E98  2               ;--------------------------------------------
002E98  2               ; Display switches in level 8 + 12
002E98  2               ;--------------------------------------------
002E98  2               
002E98  2               L2D00:
002E98  2               
002E98  2  A9 00        	lda #0
002E9A  2  8D 97 2E     	sta chr_filter
002E9D  2               
002E9D  2  A5 80                    lda L0080              ; Get level nr
002E9F  2  C9 08                    cmp #$08               ; C9 08
002EA1  2  F0 09                    beq L2D0F              ; F0 09
002EA3  2  C9 0C                    cmp #$0C               ; C9 0C
002EA5  2  F0 05                    beq L2D0F              ; F0 05
002EA7  2  A2 00                    ldx #$00               ; A2 00
002EA9  2  4C 7F 2F                 jmp L2E04              ; 4C 04 2E
002EAC  2               
002EAC  2  A9 02        L2D0F:      lda #$06-4             ; Set left switch
002EAE  2  8D 18 03                 sta XPOS
002EB1  2  A9 01                    lda #$01
002EB3  2  8D 19 03                 sta YPOS
002EB6  2               
002EB6  2  A9 10        	lda #$10
002EB8  2  8D 97 2E     	sta chr_filter
002EBB  2               
002EBB  2  A9 EC                    lda #$EC               ; Switch off symbol
002EBD  2  20 10 3A                 jsr OSWRCH             ; Print character
002EC0  2               
002EC0  2  A9 09                    lda #$09               ; Jump to position right switch
002EC2  2  A2 00                    ldx #$00               ; A2 00
002EC4  2  E8           L2D31:      inx                    ; E8
002EC5  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002EC8  2  E0 07                    cpx #$07               ; E0 07
002ECA  2  D0 F8                    bne L2D31              ; D0 F8
002ECC  2               
002ECC  2  A9 EC                    lda #$EC               ; Switch off symbol
002ECE  2  20 10 3A                 jsr OSWRCH             ; Print character
002ED1  2               
002ED1  2               
002ED1  2  A2 00                    ldx #$00               ; A2 00
002ED3  2  8E 97 2E     	stx chr_filter
002ED6  2  4C 7F 2F                 jmp L2E04              ; 4C 04 2E
002ED9  2               
002ED9  2               ;--------------------------------------------
002ED9  2               ; Set value for bush symbol
002ED9  2               ;--------------------------------------------
002ED9  2               
002ED9  2  20 6C 2F     L2D43:      jsr L2DF1              ; Set L2E01=$15
002EDC  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002EDF  2               
002EDF  2               ;--------------------------------------------
002EDF  2               ; Set value for rock symbol
002EDF  2               ;--------------------------------------------
002EDF  2               
002EDF  2  20 72 2F     L2D49:      jsr L2DF7              ; Set L2E01=$05
002EE2  2  AD 78 2F                 lda L2DFD              ; Get sprite tile
002EE5  2  38                       sec                    ; 38
002EE6  2  6D 7E 2F                 adc L2E03              ; 6D 03 2E
002EE9  2  8D 78 2F                 sta L2DFD              ; 8D FD 2D
002EEC  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002EEF  2               
002EEF  2  20 72 2F     L2D59:      jsr L2DF7              ; Set L2E01=$05
002EF2  2               
002EF2  2  A2 00                    ldx #$00               ; A2 00
002EF4  2  20 7F 2F                 jsr L2E04              ; Switch ext font
002EF7  2               
002EF7  2  A9 EB                    lda #$eB               ; Set Bush tile $eb
002EF9  2  8D 78 2F                 sta L2DFD              ; 8D FD 2D
002EFC  2               
002EFC  2  A9 10        	lda #$10
002EFE  2  8D 97 2E     	sta chr_filter
002F01  2               
002F01  2               
002F01  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002F04  2               
002F04  2               ;------------------------------------------------------
002F04  2               ; Read data from bush/rock table
002F04  2               ;------------------------------------------------------
002F04  2               
002F04  2  20 93 2F     L2D69:      jsr L2E18              ; Increment datatable address
002F07  2  20 2A 2E                 jsr L2C98              ; Get data bush/key table
002F0A  2  8D 79 2F                 sta L2DFE              ; 8D FE 2D
002F0D  2               
002F0D  2  C9 FF                    cmp #$FF               ; Check end of table
002F0F  2  F0 87                    beq L2D00              ; Check display switches
002F11  2               
002F11  2  C9 FE                    cmp #$FE               ; Plot on right side of screen
002F13  2  F0 C4                    beq L2D43              ; Plot bush
002F15  2               
002F15  2  C9 FD                    cmp #$FD               ; Plot on left side of screen
002F17  2  F0 C6                    beq L2D49              ; F0 CB
002F19  2               
002F19  2               ; Item was key
002F19  2               
002F19  2  CE 7D 2F                 dec L2E02              ; CE 02 2E
002F1C  2               
002F1C  2  AD 79 2F                 lda L2DFE              ; AD FE 2D
002F1F  2  29 F0                    and #$F0               ; 29 F0
002F21  2  18                       clc                    ; 18
002F22  2  6A                       ror A                  ; 6A
002F23  2  6A                       ror A                  ; 6A
002F24  2  6A                       ror A                  ; 6A
002F25  2  6A                       ror A                  ; 6A
002F26  2  8D 7A 2F                 sta L2DFF              ; Calculate dX
002F29  2               
002F29  2  AD 79 2F                 lda L2DFE              ; AD FE 2D
002F2C  2  29 0F                    and #$0F               ; 29 0F
002F2E  2  8D 7B 2F                 sta L2E00              ; Calculate Y
002F31  2               
002F31  2  AD 7A 2F     	lda L2DFF              ; AD FF 2D
002F34  2  18           	clc                    ; 18
002F35  2  6D 7C 2F     	adc L2E01              ; 6D 01 2E
002F38  2  38           	sec
002F39  2  E9 04        	sbc #$04
002F3B  2  8D 18 03     	sta XPOS
002F3E  2               
002F3E  2  AD 7B 2F     	lda L2E00              ; AD 00 2E
002F41  2  18           	clc                    ; 18
002F42  2  69 01        	adc #$01               ; 69 01
002F44  2  8D 19 03     	sta YPOS
002F47  2               
002F47  2  AD 78 2F                 lda L2DFD              ; AD FD 2D
002F4A  2  C9 EE                    cmp #$eE               ; Spider + web tile
002F4C  2  F0 57                    beq L2E2A              ; Plot spider + web
002F4E  2               
002F4E  2  C9 F0                    cmp #$f0               ; Key tile
002F50  2  F0 14                    beq L2DD7              ; F0 14
002F52  2               
002F52  2  C9 EB                    cmp #$eB               ; Bush tile $eb
002F54  2  D0 13                    bne L2DE4              ; D0 1D
002F56  2               
002F56  2  AD 78 2F     L2DC7:      lda L2DFD              ; AD FD 2D
002F59  2  20 10 3A                 jsr OSWRCH             ; Print character
002F5C  2               
002F5C  2  AD 7D 2F                 lda L2E02              ; AD 02 2E
002F5F  2  C9 FF                    cmp #$FF               ; C9 FF
002F61  2  F0 8C                    beq L2D59              ; F0 85
002F63  2               
002F63  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002F66  2               
002F66  2               ;--------------------------------------------
002F66  2               ; Plot key
002F66  2               ;--------------------------------------------
002F66  2               
002F66  2               L2DD7:
002F66  2  4C D0 2F                 jmp L2E55              ; 4C 55 2E
002F69  2               
002F69  2               ;--------------------------------------------
002F69  2               ; Plot bush
002F69  2               ;--------------------------------------------
002F69  2               
002F69  2               L2DE4:
002F69  2  4C 56 2F                 jmp L2DC7              ; 4C C7 2D
002F6C  2               
002F6C  2               ;--------------------------------------------
002F6C  2               ; Set value for bush
002F6C  2               ;--------------------------------------------
002F6C  2               
002F6C  2  A9 15        L2DF1:      lda #$15               ; A9 15
002F6E  2  8D 7C 2F                 sta L2E01              ; 8D 01 2E
002F71  2  60                       rts                    ; 60
002F72  2               
002F72  2               ;--------------------------------------------
002F72  2               ; Set value for rock
002F72  2               ;--------------------------------------------
002F72  2               
002F72  2  A9 05        L2DF7:      lda #$05               ; A9 05
002F74  2  8D 7C 2F                 sta L2E01              ; 8D 01 2E
002F77  2  60                       rts                    ; 60
002F78  2               
002F78  2               ;--------------------------------------------
002F78  2               
002F78  2  EA           L2DFD:      nop                    ; Sprite tile
002F79  2  EA           L2DFE:      nop                    ; EA
002F7A  2  EA           L2DFF:      nop                    ; XPOS
002F7B  2  EA           L2E00:      nop                    ; YPOS
002F7C  2  EA           L2E01:      nop                    ; dX POS
002F7D  2  EA           L2E02:      nop                    ; EA
002F7E  2  EA           L2E03:      nop                    ; EA
002F7F  2               
002F7F  2               ;--------------------------------------------
002F7F  2               ; Switch L0A00 with L0C00
002F7F  2               ;--------------------------------------------
002F7F  2               
002F7F  2  BD C8 38     L2E04:      lda ext_font,X            ; BD 00 0C
002F82  2  A8                       tay                    ; A8
002F83  2  BD 00 0B                 lda L0A00,X            ; BD 00 0A
002F86  2  9D C8 38                 sta ext_font,X            ; 9D 00 0C
002F89  2  98                       tya                    ; 98
002F8A  2  9D 00 0B                 sta L0A00,X            ; 9D 00 0A
002F8D  2  E8                       inx                    ; E8
002F8E  2  E0 FF                    cpx #$FF               ; E0 FF
002F90  2  D0 ED                    bne L2E04              ; D0 ED
002F92  2  60                       rts                    ; 60
002F93  2               
002F93  2               ;--------------------------------------------
002F93  2               ; Increment address at L2C98+1/2C9A
002F93  2               ;--------------------------------------------
002F93  2               
002F93  2  AD 2B 2E     L2E18:      lda L2C98+1              ; AD 99 2C
002F96  2  18                       clc                    ; 18
002F97  2  69 01                    adc #$01               ; 69 01
002F99  2  8D 2B 2E                 sta L2C98+1              ; 8D 99 2C
002F9C  2  AD 2C 2E                 lda L2C98+2              ; AD 9A 2C
002F9F  2  69 00                    adc #$00               ; 69 00
002FA1  2  8D 2C 2E                 sta L2C98+2              ; 8D 9A 2C
002FA4  2  60                       rts                    ; 60
002FA5  2               
002FA5  2               ;--------------------------------------------
002FA5  2               ; Plot spider + web
002FA5  2               ;--------------------------------------------
002FA5  2               
002FA5  2  20 93 2F     L2E2A:      jsr L2E18              ; Increment datatable address
002FA8  2  20 2A 2E                 jsr L2C98              ; Get data bush/key table
002FAB  2  8D 79 2F                 sta L2DFE              ; 8D FE 2D
002FAE  2               
002FAE  2  A2 00                    ldx #$00               ; A2 00
002FB0  2  EC 79 2F     L2E35:      cpx L2DFE              ; EC FE 2D
002FB3  2  F0 13                    beq L2E4D              ; F0 13
002FB5  2               
002FB5  2  A9 F5                    lda #$F5               ; Set spiderweb symbol
002FB7  2  20 10 3A                 jsr OSWRCH             ; Print character
002FBA  2               
002FBA  2  A9 0A                    lda #$0A               ; Move cursor 1 pos down
002FBC  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002FBF  2               
002FBF  2  A9 08                    lda #$08               ; Move cursor 1 pos back
002FC1  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
002FC4  2               
002FC4  2  E8                       inx                    ; E8
002FC5  2  4C B0 2F                 jmp L2E35              ; 4C 35 2E
002FC8  2               
002FC8  2  A9 CE        L2E4D:      lda #$CE               ; Set spider symbol
002FCA  2  20 10 3A                 jsr OSWRCH             ; Print character
002FCD  2  4C 04 2F                 jmp L2D69              ; 4C 69 2D
002FD0  2               
002FD0  2               ;--------------------------------------------
002FD0  2               
002FD0  2  AD 04 30     L2E55:      lda L2E89              ; AD 89 2E
002FD3  2  C9 0A                    cmp #$0A               ; C9 0A
002FD5  2  90 03                    bcc L2E5F              ; 90 03
002FD7  2               
002FD7  2  4C 56 2F                 jmp L2DC7              ; 4C C7 2D
002FDA  2               
002FDA  2  AD 7A 2F     L2E5F:      lda L2DFF              ; AD FF 2D
002FDD  2  18                       clc                    ; 18
002FDE  2  6D 7C 2F                 adc L2E01              ; 6D 01 2E
002FE1  2  AC 04 30                 ldy L2E89              ; AC 89 2E
002FE4  2  99 FA 2F                 sta L2E7F,Y            ; 99 7F 2E
002FE7  2  C8                       iny                    ; C8
002FE8  2  AD 7B 2F                 lda L2E00              ; AD 00 2E
002FEB  2  18                       clc                    ; 18
002FEC  2  69 01                    adc #$01               ; 69 01
002FEE  2  99 FA 2F                 sta L2E7F,Y            ; 99 7F 2E
002FF1  2  EE 04 30                 inc L2E89              ; EE 89 2E
002FF4  2  EE 04 30                 inc L2E89              ; EE 89 2E
002FF7  2  4C 56 2F                 jmp L2DC7              ; 4C C7 2D
002FFA  2               
002FFA  2               ;--------------------------------------------
002FFA  2               ; Rotate colours of keys
002FFA  2               ;--------------------------------------------
002FFA  2               
002FFA  2               L2E7F:
002FFA  2  EA           	.byte $EA		; X-pos key1
002FFB  2  EA           	.byte $EA		; Y-pos key1
002FFC  2               
002FFC  2  EA           	.byte $EA		; X-pos key2
002FFD  2  EA           	.byte $EA		; Y-pos key2
002FFE  2               
002FFE  2  EA           	.byte $EA		; X-pos key3
002FFF  2  EA           	.byte $EA		; Y-pos key3
003000  2               
003000  2  EA           	.byte $EA		; X-pos key4
003001  2  EA           	.byte $EA		; Y-pos key4
003002  2               
003002  2  EA           	.byte $EA		; X-pos key5
003003  2  EA           	.byte $EA		; Y-pos key5
003004  2               
003004  2  0F           L2E89:	.byte $0F		; Number of keys on screen * 2
003005  2  16           L2E8A:	.byte $16		; Temp. X-reg save
003006  2  EA           L2E8B:	.byte $EA		; Colour counter
003007  2               
003007  2               L2E8C:
003007  2  A9 00        	lda #$00		; Reset key pointer
003009  2  AA           	tax
00300A  2               L2E8F:
00300A  2  EE 06 30     	inc L2E8B		; Incr.colour counter
00300D  2               
00300D  2  BD FA 2F     	lda L2E7F,X		; Get X-pos key
003010  2  38           	sec
003011  2  E9 04        	sbc #4
003013  2  8D 18 03     	sta XPOS
003016  2               
003016  2  E8           	inx
003017  2  BD FA 2F     	lda L2E7F,X		; Get Y-pos key
00301A  2  8D 19 03     	sta YPOS
00301D  2               
00301D  2  E8           	inx			; Point to next key data
00301E  2  8E 05 30     	stx L2E8A		; Store X-reg
003021  2               
003021  2  A9 87        	lda #$87		; Read char at current position in X
003023  2  20 E1 3A     	jsr OSBYTE
003026  2  E0 90        	cpx #$90		; Check if key
003028  2  F0 1D        	beq L2ECE		; If key, jump
00302A  2               L2EB1:
00302A  2  AE 05 30     	ldx L2E8A		; Get X-reg
00302D  2  8A           	txa
00302E  2  CD 04 30     	cmp L2E89		; Check if all keys plotted
003031  2  B0 13        	bcs L2ECD		; Yes, end routine
003033  2               
003033  2  AD 04 30     	lda L2E89		; Get key pointer
003036  2  4A           	lsr A
003037  2  29 01        	and #$01		; Check bit0
003039  2  C9 00        	cmp #$00		; If 0, next colour
00303B  2  F0 03        	beq L2EC7
00303D  2               
00303D  2  4C 0A 30     	jmp L2E8F		; Repeat
003040  2               L2EC7:
003040  2  EE 06 30     	inc L2E8B		; Incr.colour counter
003043  2  4C 0A 30     	jmp L2E8F		; Repeat
003046  2               L2ECD:
003046  2  60           	rts			; End of routine
003047  2               
003047  2               ; Plot key
003047  2               
003047  2               L2ECE:
003047  2               L2EDC:
003047  2  AD 6F 11     	lda L109B
00304A  2  48           	pha
00304B  2  AD 06 30     	lda L2E8B
00304E  2  29 03        	and #3
003050  2  F0 02        	beq L2EDD
003052  2  A9 FF        	lda #$ff
003054  2               L2EDD:
003054  2  8D 6F 11     	sta L109B
003057  2               
003057  2  A9 90        	lda #$90		; Key char
003059  2  20 10 3A     	jsr OSWRCH		; Print character
00305C  2               
00305C  2  68           	pla
00305D  2  8D 6F 11     	sta L109B
003060  2               
003060  2  4C 2A 30     	jmp L2EB1		; Return to key plot routine
003063  2               
003063  2               ;--------------------------------------------
003063  2               ; ???
003063  2               ;--------------------------------------------
003063  2               
003063  2               L2EE7:
003063  2  A9 03        	lda #$03               ; A9 03
003065  2  4C 47 30     	jmp L2EDC              ; 4C DC 2E
003068  2               
003068  2               ;--------------------------------------------
003068  2               ; Change code to point to right level name
003068  2               ;--------------------------------------------
003068  2               
003068  2               L2EEC:
003068  2  BD FF FF     	lda LFFFF,X		; Pointer to level name text
00306B  2  60           	rts
00306C  2               
00306C  2               ;--------------------------------------------
00306C  2               ; Print level name
00306C  2               ;--------------------------------------------
00306C  2               
00306C  2               L2EF0:
00306C  2  A9 73        	lda #<L2680		; Set pointer to level name text start
00306E  2  8D 69 30     	sta L2EED
003071  2  A9 28        	lda #>L2680
003073  2  8D 6A 30     	sta L2EEE
003076  2               
003076  2  A9 00        	lda #$00		; Set current level to 0
003078  2  8D 1B 31     	sta L2FF6
00307B  2               
00307B  2  A9 00        	lda #$04-4		; Cursor at 0,17
00307D  2  8D 18 03     	sta XPOS
003080  2  A9 11        	lda #$11
003082  2  8D 19 03     	sta YPOS
003085  2               
003085  2               ; Clear level name on screen
003085  2               
003085  2  A9 20        	lda #$20
003087  2  A2 00        	ldx #$00	
003089  2               L2F12:
003089  2  20 10 3A     	jsr OSWRCH		; Print character
00308C  2  E8           	inx
00308D  2  E0 20        	cpx #$20		; Print 32 spaces
00308F  2  D0 F8        	bne L2F12
003091  2               
003091  2               ; Point to right level name
003091  2               
003091  2  A2 00        	ldx #$00
003093  2               L2F26:
003093  2  20 68 30     	jsr L2EEC		; Get level character
003096  2  C9 20        	cmp #$20
003098  2  90 0B        	bcc L2F38		; Check for first byte (nr of spaces)
00309A  2               L2F2D:
00309A  2  E8           	inx
00309B  2  E0 00        	cpx #$00
00309D  2  D0 F4        	bne L2F26
00309F  2               
00309F  2  EE 6A 30     	inc L2EEE
0030A2  2  4C 93 30     	jmp L2F26		; Repeat
0030A5  2               L2F38:
0030A5  2  EE 1B 31     	inc L2FF6
0030A8  2               
0030A8  2  A5 80        	lda L0080		; Get level nr
0030AA  2  CD 1B 31     	cmp L2FF6
0030AD  2  D0 EB        	bne L2F2D
0030AF  2               
0030AF  2               ; Set cursor to center level name
0030AF  2               
0030AF  2  20 68 30     	jsr L2EEC              ; Get level name x-pos
0030B2  2  8D 18 03     	sta XPOS
0030B5  2  A9 11        	lda #$11
0030B7  2  8D 19 03     	sta YPOS
0030BA  2               
0030BA  2               ; Print level name
0030BA  2               
0030BA  2               L2F55:
0030BA  2  E8           	inx
0030BB  2  20 68 30     	jsr L2EEC
0030BE  2  C9 20        	cmp #$20
0030C0  2  90 06        	bcc L2F62
0030C2  2  20 10 3A     	jsr OSWRCH		; Print character
0030C5  2               
0030C5  2  4C BA 30     	jmp L2F55
0030C8  2               
0030C8  2               ; Invert line with level name
0030C8  2               
0030C8  2               L2F62:
0030C8  2  A2 00        	ldx#0
0030CA  2               L2F63:
0030CA  2  BD 00 91     	lda $9100,x
0030CD  2  49 FF        	eor #$ff
0030CF  2  9D 00 91     	sta $9100,x
0030D2  2  E8           	inx
0030D3  2  D0 F5        	bne L2F63
0030D5  2               
0030D5  2               ; Draw white+black line above level name
0030D5  2               
0030D5  2  A2 00        	ldx #0
0030D7  2               L2F64:
0030D7  2  A9 00        	lda #0
0030D9  2  9D C0 90     	sta $90C0,x		; Black line
0030DC  2  A9 FF        	lda #$FF
0030DE  2  9D E0 90     	sta $90E0,x		; White line
0030E1  2  E8           	inx
0030E2  2  E0 20        	cpx #32
0030E4  2  D0 F1        	bne L2F64
0030E6  2               
0030E6  2  60           	rts
0030E7  2               
0030E7  2               ;--------------------------------------------
0030E7  2               
0030E7  2  A2 00        L2FC2:      ldx #$00               ; A2 00
0030E9  2  BD 58 0B     L2FC4:      lda L0A58,X            ; BD 58 0A
0030EC  2  9D A0 39                 sta ext_font+$D8,X            ; 9D D8 0C
0030EF  2  E8                       inx                    ; E8
0030F0  2  E0 08                    cpx #$08               ; E0 08
0030F2  2  D0 F5                    bne L2FC4              ; D0 F5
0030F4  2               
0030F4  2  AD 7E 2F                 lda L2E03              ; AD 03 2E
0030F7  2  0A                       asl A                  ; 0A
0030F8  2  0A                       asl A                  ; 0A
0030F9  2  0A                       asl A                  ; 0A
0030FA  2  AA                       tax                    ; AA
0030FB  2               
0030FB  2  A0 00                    ldy #$00               ; A0 00
0030FD  2  BD 60 0B     L2FD8:      lda L0A60,X            ; BD 60 0A
003100  2  99 A8 39                 sta ext_font+$E0,Y            ; 99 E0 0C
003103  2  E8                       inx                    ; E8
003104  2  C8                       iny                    ; C8
003105  2  C0 08                    cpy #$08               ; C0 08
003107  2  D0 F4                    bne L2FD8              ; D0 F4
003109  2               
003109  2  AD 04 30                 lda L2E89              ; AD 89 2E
00310C  2  C9 04                    cmp #$04               ; C9 04
00310E  2  F0 05                    beq L2FF0              ; F0 05
003110  2               
003110  2  4A                       lsr A                  ; 4A
003111  2  8D 24 31                 sta L2FFF              ; Nr of keys
003114  2  60                       rts                    ; 60
003115  2               
003115  2  A9 01        L2FF0:      lda #$01               ; A9 01
003117  2  8D 24 31                 sta L2FFF              ; Nr of keys
00311A  2  60                       rts                    ; 60
00311B  2               
00311B  2               ;--------------------------------------------
00311B  2               
00311B  2  EA           L2FF6:      .byte $ea              ; Current level
00311C  2               
00311C  2               ;--------------------------------------------
00311C  2               
00311C  2  BD FF FF     L2FF7:      lda LFFFF,X            ; BD FF FF
00311F  2  60                       rts                    ; 60
003120  2               
003120  2  00                       .byte $00
003121  2  46 58                    .byte "FX"
003123  2  00                       .byte $00
003124  2               
003124  2  00           L2FFF:      .byte $00		; Nr of keys
003125  2               
003125  2  48           L3000:      pha                    ; 48
003126  2  08                       php                    ; 08
003127  2  8A                       txa                    ; 8A
003128  2  48                       pha                    ; 48
003129  2  98                       tya                    ; 98
00312A  2  48                       pha                    ; 48
00312B  2  20 60 31                 jsr L303B              ; Musicroutine
00312E  2  AD 9D 31                 lda L3099              ; AD 99 30
003131  2  C9 FF                    cmp #$FF               ; C9 FF
003133  2  F0 23                    beq L3033              ; F0 23
003135  2  AD 9B 31                 lda L3097              ; Get lb music counter
003138  2  C9 FF                    cmp #$FF               ; C9 FF
00313A  2  F0 1C                    beq L3033              ; F0 1C
00313C  2  A9 B0                    lda #$B0               ; A9 B0
00313E  2  20 9A 31                 jsr L3075              ; Sound output
003141  2  A9 A0                    lda #$A0               ; A9 A0
003143  2  20 9A 31                 jsr L3075              ; Sound output
003146  2  AD 9D 31                 lda L3099              ; AD 99 30
003149  2  20 9A 31                 jsr L3075              ; Sound output
00314C  2  A9 FF                    lda #$FF               ; A9 FF
00314E  2  8D 9D 31                 sta L3099              ; 8D 99 30
003151  2  68           L302C:      pla                    ; 68
003152  2  A8                       tay                    ; A8
003153  2  68                       pla                    ; 68
003154  2  AA                       tax                    ; AA
003155  2  28                       plp                    ; 28
003156  2  68                       pla                    ; 68
003157  2  60                       rts                    ; 60
003158  2               
003158  2  A9 BF        L3033:      lda #$BF               ; A9 BF
00315A  2  20 9A 31                 jsr L3075              ; Sound output
00315D  2  4C 51 31                 jmp L302C              ; 4C 2C 30
003160  2               
003160  2               ;--------------------------------------------
003160  2               ; Music counter routine
003160  2               ; If sound is off, L303B: RTS
003160  2               ; If sound is on , L303B: INC L3097
003160  2               ;--------------------------------------------
003160  2               
003160  2               L303B:
003160  2  EE 9B 31     	inc L3097		; Inc lb music counter
003163  2  AD 9B 31     	lda L3097		; Get lb music counter
003166  2  C9 01        	cmp #$01
003168  2  F0 2B        	beq L3070
00316A  2  C9 06        	cmp #$06
00316C  2  F0 01        	beq L304A
00316E  2  60           	rts
00316F  2               L304A:
00316F  2  A9 00        	lda #$00
003171  2  8D 9B 31     	sta L3097		; Reset lb music counter
003174  2  EE 9C 31     	inc L3098		; Inc hb music counter
003177  2               
003177  2  A9 92        	lda #$92
003179  2  20 9A 31     	jsr L3075		; Sound output
00317C  2               
00317C  2  A9 80        	lda #$80
00317E  2  20 9A 31     	jsr L3075		; Sound output
003181  2               
003181  2  AD 9C 31     	lda L3098		; Get hb music counter
003184  2  4A           	lsr A
003185  2  AA           	tax
003186  2  B5 00        	lda $00,X
003188  2  C9 00        	cmp #$00
00318A  2  F0 03        	beq L306A
00318C  2  4C 9A 31     	jmp L3075		; Sound output
00318F  2               L306A:
00318F  2  A9 FF        	lda #$FF
003191  2  8D 9C 31     	sta L3098		; Reset hb music counter
003194  2  60           	rts
003195  2               L3070:
003195  2  A9 9F        	lda #$9F
003197  2  4C 9A 31     	jmp L3075		; Sound output
00319A  2               
00319A  2               ;--------------------------------------------
00319A  2               ; Play tone in A
00319A  2               ;--------------------------------------------
00319A  2               
00319A  2               L3075:
00319A  2  60           	rts
00319B  2               
00319B  2               ;--------------------------------------------
00319B  2               
00319B  2  EC           L3097:      .byte $EC		; Music counter lb (0-6)
00319C  2  00           L3098:      .byte $00		; Music counter hb (0-7C)
00319D  2  FF           L3099:      .byte $FF		; Shoe sink counter
00319E  2               
00319E  2               ;--------------------------------------------
00319E  2               ; Demo level entry
00319E  2               ;--------------------------------------------
00319E  2               
00319E  2               L309A:
00319E  2               
00319E  2               ; Init
00319E  2               
00319E  2  A9 01        	lda #$01		; Reset level
0031A0  2  85 80        	sta L0080
0031A2  2               
0031A2  2  A9 02        	lda #$02		; Reset lives
0031A4  2  8D DF 43     	sta L67BE
0031A7  2               
0031A7  2               ; Reset score
0031A7  2               
0031A7  2  A9 00        	lda #$00				
0031A9  2  A2 00        	ldx #$00
0031AB  2               L30A7:
0031AB  2  9D DB 43     	sta L67BA,X
0031AE  2  E8           	inx
0031AF  2  E0 03        	cpx #$03
0031B1  2  D0 F8        	bne L30A7
0031B3  2               
0031B3  2               ; Set vars
0031B3  2               
0031B3  2               L30AF:
0031B3  2  A5 80        	lda L0080		; Get levelnr
0031B5  2  20 FD 3E     	jsr L62C3		; Build screen
0031B8  2               
0031B8  2  A9 00        	lda #$00
0031BA  2  8D E7 31     	sta L30E9		; Level show counter
0031BD  2               
0031BD  2               ; Show screen
0031BD  2               
0031BD  2               L30B9:
0031BD  2  20 61 27     	jsr L254D		; Scroll conveyor
0031C0  2               
0031C0  2  20 09 1E     	jsr L1E0D		; Show guards
0031C3  2  20 B4 19     	jsr L1980		; Plot monsters in levels
0031C6  2               
0031C6  2               ; Wait loop
0031C6  2  A2 00        	ldx #$00 
0031C8  2  A0 D0        	ldy #$D0
0031CA  2               L30C6:
0031CA  2  E8           	inx
0031CB  2  D0 FD        	bne L30C6
0031CD  2  C8           	iny
0031CE  2  D0 FA        	bne L30C6
0031D0  2               
0031D0  2  EE E7 31     	inc L30E9		; Level show counter
0031D3  2  AD E7 31     	lda L30E9		; Level show counter
0031D6  2  C9 40        	cmp #$40		; Show level for 64 ticks
0031D8  2  F0 0E        	beq L30EA
0031DA  2               
0031DA  2               ;	jsr $fe71		; Read key
0031DA  2               ;	cpy #$0d		; Return
0031DA  2  A2 02        	ldx #2
0031DC  2  20 00 34     	jsr readkey
0031DF  2  D0 03        	bne L30E6		; Return key pressed
0031E1  2               
0031E1  2  4C BD 31     	jmp L30B9		; Loop demo
0031E4  2               L30E6:
0031E4  2  4C 52 3E     	jmp L6200		; Start game
0031E7  2               
0031E7  2               L30E9:
0031E7  2  EA           	.byte $EA		; Level show counter
0031E8  2               
0031E8  2               ; Next level
0031E8  2               
0031E8  2               L30EA:
0031E8  2  E6 80        	inc L0080              ; Next level nr
0031EA  2  A5 80        	lda L0080              ; Get level nr
0031EC  2  C9 13        	cmp #$13               ; C9 13
0031EE  2  F0 03        	beq L30F5              ; F0 03
0031F0  2  4C B3 31     	jmp L30AF              ; 4C AF 30
0031F3  2               L30F5:
0031F3  2  EA           	nop                    ; EA
0031F4  2  EA           	nop                    ; EA
0031F5  2  EA           	nop                    ; EA
0031F6  2  EA           	nop                    ; EA
0031F7  2  4C 98 32     	jmp L3190              ; 4C 90 31
0031FA  2               
0031FA  2               ;--------------------------------------------
0031FA  2               ; If in freezemode
0031FA  2               ; Check for typing "A SECRET"
0031FA  2               ; to set cheatmodeflag
0031FA  2               ;--------------------------------------------
0031FA  2               
0031FA  2               L30FC:
0031FA  2               ;            lda L00ED              ; Check if 1 key pressed
0031FA  2               ;            cmp #$00               ; C9 00
0031FA  2               ;            bne L3118              ; If not end
0031FA  2               ;
0031FA  2               ;            lda L00EC              ; Check pressed key
0031FA  2               ;            and #$7F               ; 29 7F
0031FA  2               ;            cmp #$00               ; C9 00
0031FA  2               ;            beq L313A              ; If nothing, end
0031FA  2  A9 F0        	lda #$f0
0031FC  2  8D 00 B0     	sta $b000
0031FF  2  20 71 FE     	jsr $fe71
003202  2  C0 FF        	cpy #$ff
003204  2  F0 48        	beq L313A
003206  2  98           	tya
003207  2               
003207  2  AE 4F 32                 ldx L313B              ; Get cheatpointer
00320A  2  DD 50 32                 cmp L313C,X            ; Compare key with code
00320D  2  F0 0C                    beq L311E              ; If ok, jump
00320F  2  CA                       dex                    ; If wrong decr.cheatpointer
003210  2  DD 50 32                 cmp L313C,X            ; Check with code
003213  2  F0 39                    beq L313A              ; If wrong end
003215  2               
003215  2  A9 00        L3118:      lda #$00               ; Reset cheatpointer
003217  2  8D 4F 32                 sta L313B              ; 8D 3B 31
00321A  2  60                       rts                    ; 60
00321B  2               
00321B  2  EE 4F 32     L311E:      inc L313B              ; Point to next code char
00321E  2  AD 4F 32                 lda L313B              ; Get cheatpointer
003221  2  C9 08                    cmp #$08               ; Check if code complete
003223  2  F0 01                    beq L3129              ; If yes, set cheatflag
003225  2  60                       rts                    ; 60
003226  2               
003226  2               L3129:
003226  2  AD D5 47                 lda L6B7F              ; Get cheatmodeflag
003229  2  49 01                    eor #$01               ; Make <>0
00322B  2  8D D5 47                 sta L6B7F              ; Set cheatmodeflag
00322E  2               
00322E  2               
00322E  2               ; Make sound
00322E  2               
00322E  2  A9 40        	lda #$40
003230  2  8D 4D 32     	sta tmp_note
003233  2               snd_loop:
003233  2  AD 4D 32     	lda tmp_note
003236  2  A0 08        	ldy #8
003238  2  20 B1 34     	jsr sound
00323B  2  A9 20        	lda #$20
00323D  2  A0 08        	ldy #8
00323F  2  20 B1 34     	jsr sound
003242  2  CE 4D 32     	dec tmp_note
003245  2  AD 4D 32     	lda tmp_note
003248  2  C9 20        	cmp #$20
00324A  2  D0 E7        	bne snd_loop
00324C  2               
00324C  2  60           	rts
00324D  2               ;            lda #$01               ; A9 03
00324D  2               ;            ldx #$64               ; A2 64
00324D  2               ;            ldy #$03               ; A0 03
00324D  2               ;            jmp L68AC              ; Make sound
00324D  2               
00324D  2  00           tmp_note:	.byte 0
00324E  2               
00324E  2  60           L313A:      rts                    ; 60
00324F  2               
00324F  2  00           L313B:      .byte $00		; Cheatpointer
003250  2               
003250  2               ; Cheatcode    A  SPC  S   E   C   R   E   T 
003250  2               L313C:
003250  2               ;       .byte $41,$62,$51,$22,$52,$33,$22,$23
003250  2  21 00 33 25  	.byte $21,$00,$33,$25,$23,$32,$25,$34
003254  2  23 32 25 34  
003258  2               
003258  2  60                       rts                    ; 60
003259  2               
003259  2               ;---------------------------------------------
003259  2               
003259  2  60                       rts                    ; 60
00325A  2               
00325A  2               ;---------------------------------------------
00325A  2               ;
00325A  2               ;---------------------------------------------
00325A  2               
00325A  2               L3146:
00325A  2               
00325A  2  20 B4 19     	jsr L1980 		; Plot monsters in levels
00325D  2               
00325D  2  AD CC 18     	lda L184B		; Check Miner jump flag
003260  2  C9 01        	cmp #$01
003262  2  D0 08        	bne L3160		; Jump if miner not jumping
003264  2               
003264  2  AD CE 18     	lda L184D		; Check Miner jump position
003267  2  C9 01        	cmp #$01
003269  2  D0 01        	bne L3160		; Jump if miner in the air
00326B  2               
00326B  2               ;	lda #$02
00326B  2               ;	ldx #$64
00326B  2               ;	ldy #$02
00326B  2               ;	jmp L68AC		; Make sound
00326B  2               
00326B  2               ;no_jump_sound:
00326B  2  60           	rts
00326C  2               
00326C  2               L3160:
00326C  2  AD CC 18     	lda L184B		; Check Miner jump flag
00326F  2  C9 01        	cmp #$01
003271  2  F0 1F        	beq L318A		; Jump if miner is jumping
003273  2               
003273  2  AD D2 47     	lda L6B7C              ; AD 7C 6B
003276  2  C9 00        	cmp #$00               ; C9 00
003278  2  D0 18        	bne L318A              ; D0 1C
00327A  2               
00327A  2  A9 FF        	lda #$FF               ; A9 FF
00327C  2  8D D9 47     	sta L6B83              ; 8D 83 6B
00327F  2               
00327F  2  AD BE 18     	lda L183D              ; Y-coordinaat Miner in pixels new
003282  2  38           	sec                    ; 38
003283  2  ED CD 18     	sbc L184C              ; ED 4C 18
003286  2  0A           	asl A                  ; 0A
003287  2  0A           	asl A                  ; 0A
003288  2               ;	eor #$7F               ; 49 7F
003288  2               
003288  2               ;            tax                    ; AA
003288  2               ;	sta $9b00
003288  2  A0 10                    ldy #$10               ; A0 01
00328A  2  20 B1 34                 jsr sound              ; Make sound
00328D  2               
00328D  2  A9 00                    lda #$00               ; A9 00
00328F  2  8D D9 47                 sta L6B83              ; 8D 83 6B
003292  2  60           L318A:      rts                    ; 60
003293  2               
003293  2  38 3A 4A 53              .byte $38,$3a,$4a,$53,$52
003297  2  52           
003298  2               
003298  2               ;============================================
003298  2               ; Program entry
003298  2               ;============================================
003298  2               
003298  2               ; Init
003298  2               
003298  2               L3190:
003298  2               
003298  2  20 83 34     	jsr joyinit
00329B  2               
00329B  2  20 F4 29     	jsr L2821		; Clear screen
00329E  2  20 71 3F     	jsr L62E9		; Stop music
0032A1  2               
0032A1  2               ; Print text on intro screen
0032A1  2               
0032A1  2  A2 10        	ldx #<L2430		; Top lines
0032A3  2  A0 26        	ldy #>L2430
0032A5  2  20 C8 39     	jsr PUTSTRING
0032A8  2               
0032A8  2  A2 CE        	ldx #<L24E0		; Bottom line
0032AA  2  A0 26        	ldy #>L24E0
0032AC  2  20 C8 39     	jsr PUTSTRING
0032AF  2               
0032AF  2  20 73 33     	jsr L325F		; Switch L0Cxx with L07xx
0032B2  2               
0032B2  2               ; Print "Manic Miner (c)"
0032B2  2               
0032B2  2  A9 0E        	lda #14
0032B4  2  8D 18 03     	sta XPOS
0032B7  2  A9 07        	lda #7
0032B9  2  8D 19 03     	sta YPOS
0032BC  2               
0032BC  2  A2 80        	ldx #$80
0032BE  2               L31BF:
0032BE  2  8A           	txa
0032BF  2  20 10 3A     	jsr PRINTCHAR		; Print character
0032C2  2  E8           	inx
0032C3  2  E0 91        	cpx #$91
0032C5  2  D0 F7        	bne L31BF
0032C7  2               
0032C7  2               ; Set backgroundcolour block to green
0032C7  2               
0032C7  2  A9 0E        	lda #<$860e		; Screenaddress top left
0032C9  2  8D DC 32     	sta L31C1+1
0032CC  2  8D EA 32     	sta L31C2+1
0032CF  2  A9 86        	lda #>$860e
0032D1  2  8D DD 32     	sta L31C1+2
0032D4  2  8D EB 32     	sta L31C2+2
0032D7  2               
0032D7  2  A0 37        	ldy #55			; Vertical lines
0032D9  2               L31C0:
0032D9  2  A2 11        	ldx #17			; Horizontal bytes
0032DB  2               L31C1:
0032DB  2  BD 0E 86     	lda $860e,x
0032DE  2  E0 11        	cpx #17
0032E0  2  D0 05        	bne L31C4
0032E2  2  49 F0        	eor #$f0
0032E4  2  4C E9 32     	jmp L31C2
0032E7  2               L31C4:
0032E7  2  49 FF        	eor #$ff
0032E9  2               L31C2:
0032E9  2  9D 0E 86     	sta $860e,x
0032EC  2  CA           	dex
0032ED  2  10 EC        	bpl L31C1
0032EF  2               
0032EF  2  88           	dey
0032F0  2  F0 1A        	beq L31C3
0032F2  2               
0032F2  2  18           	clc
0032F3  2  AD DC 32     	lda L31C1+1
0032F6  2  69 20        	adc #$20
0032F8  2  8D DC 32     	sta L31C1+1
0032FB  2  8D EA 32     	sta L31C2+1
0032FE  2  AD DD 32     	lda L31C1+2
003301  2  69 00        	adc #0
003303  2  8D DD 32     	sta L31C1+2
003306  2  8D EB 32     	sta L31C2+2
003309  2  4C D9 32     	jmp L31C0
00330C  2               
00330C  2               L31C3:	
00330C  2  20 73 33     	jsr L325F		; Switch L0Cxx with L07xx
00330F  2               
00330F  2  4C 58 33     	jmp L3244		; Skip logo for now
003312  2               
003312  2               ; Plot graphic shape
003312  2               
003312  2  A2 FF                    ldx #$FF               ; A2 FF
003314  2  20 6E 33     L3200:      jsr L325A              ; 20 5A 32
003317  2  C9 FF                    cmp #$FF               ; C9 FF
003319  2  F0 3D                    beq L3244              ; F0 3D
00331B  2  C9 FE                    cmp #$FE               ; C9 FE
00331D  2  F0 3C                    beq L3247              ; F0 3C
00331F  2               
00331F  2  8D 8B 33                 sta L3274              ; 8D 74 32
003322  2  20 6E 33                 jsr L325A              ; 20 5A 32
003325  2  A8                       tay                    ; A8
003326  2  4A                       lsr A                  ; 4A
003327  2  4A                       lsr A                  ; 4A
003328  2  4A                       lsr A                  ; 4A
003329  2  4A                       lsr A                  ; 4A
00332A  2  4A                       lsr A                  ; 4A
00332B  2  4A                       lsr A                  ; 4A
00332C  2  8D 8D 33                 sta L3276              ; 8D 76 32
00332F  2  98                       tya                    ; 98
003330  2  0A                       asl A                  ; 0A
003331  2  0A                       asl A                  ; 0A
003332  2  8D 8C 33                 sta L3275              ; 8D 75 32
003335  2  20 6E 33                 jsr L325A              ; 20 5A 32
003338  2  A8                       tay                    ; A8
003339  2  4A                       lsr A                  ; 4A
00333A  2  4A                       lsr A                  ; 4A
00333B  2  4A                       lsr A                  ; 4A
00333C  2  4A                       lsr A                  ; 4A
00333D  2  4A                       lsr A                  ; 4A
00333E  2  4A                       lsr A                  ; 4A
00333F  2  8D 8F 33                 sta L3278              ; 8D 78 32
003342  2  98                       tya                    ; 98
003343  2  0A                       asl A                  ; 0A
003344  2  0A                       asl A                  ; 0A
003345  2  8D 8E 33                 sta L3277              ; 8D 77 32
003348  2               
003348  2  A0 00                    ldy #$00               ; Execute PLOT command
00334A  2  B9 8A 33     L3236:      lda L3273,Y            ; B9 73 32
00334D  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
003350  2  C8                       iny                    ; C8
003351  2  C0 06                    cpy #$06               ; C0 06
003353  2  D0 F5                    bne L3236              ; D0 F5
003355  2               
003355  2  4C 14 33                 jmp L3200              ; 4C 00 32
003358  2               
003358  2               L3244:
003358  2  4C D3 25     	jmp L23C0              ; Jump to game entry
00335B  2               
00335B  2               ;--------------------------------------------
00335B  2               
00335B  2               ; Define graphics colour
00335B  2               
00335B  2  A9 12        L3247:      lda #$12               ; A9 12
00335D  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
003360  2  A9 00                    lda #$00               ; A9 00
003362  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
003365  2  20 6E 33                 jsr L325A              ; 20 5A 32
003368  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
00336B  2  4C 14 33                 jmp L3200              ; 4C 00 32
00336E  2               
00336E  2               ; Get plot parameters
00336E  2               
00336E  2  E8           L325A:      inx                    ; E8
00336F  2  BD 90 07                 lda L0790,X            ; BD 90 07
003372  2  60                       rts                    ; 60
003373  2               
003373  2               ;--------------------------------------------
003373  2               ; Switch L0Cxx with L07xx
003373  2               ; With Atomfont, switch char $80-$9F
003373  2               ;--------------------------------------------
003373  2               
003373  2               L325F:
003373  2  A2 00        	ldx #$00
003375  2               L3261:
003375  2  BD 00 07     	lda L0700,X
003378  2  A8           	tay
003379  2  BD C8 38     	lda ext_font,X
00337C  2  9D 00 07     	sta L0700,X
00337F  2  98           	tya
003380  2  9D C8 38     	sta ext_font,X
003383  2  E8           	inx
003384  2  D0 EF        	bne L3261
003386  2  60           	rts
003387  2               
003387  2               ;--------------------------------------------
003387  2               ; OSBYTE
003387  2               ;--------------------------------------------
003387  2               L3235:
003387  2  A2 00        	ldx #0
003389  2  60           	rts
00338A  2               
00338A  2               ;--------------------------------------------
00338A  2               ; PLOT command
00338A  2               ;--------------------------------------------
00338A  2               
00338A  2  19           L3273:      .byte $19
00338B  2  EA           L3274:      .byte $EA
00338C  2  EA           L3275:      .byte $EA
00338D  2  EA           L3276:      .byte $EA
00338E  2  EA           L3277:      .byte $EA
00338F  2  EA           L3278:      .byte $EA
003390  2               
003390  2               ;--------------------------------------------
003390  2               
003390  2               L3279:
003390  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00
003394  2  00 00 00     
003397  2               
003397  2               ;--------------------------------------------
003397  2               ; Subroutine at $0050
003397  2               ;	.byte $1F,$13,$01,$20,$20,$0A,$08,$08
003397  2               ;--------------------------------------------
003397  2               
003397  2               
003397  2               L0050:
003397  2  A9 0F        	lda #$13-4
003399  2  8D 18 03     	sta XPOS
00339C  2  A9 01        	lda #$01
00339E  2  8D 19 03     	sta YPOS
0033A1  2               L0053:
0033A1  2  A9 20        	lda #$20
0033A3  2  20 10 3A     	jsr OSWRCH
0033A6  2  A9 20        	lda #$20
0033A8  2  20 10 3A     	jsr OSWRCH
0033AB  2  A9 0A        	lda #$0A
0033AD  2  20 10 3A     	jsr OSWRCH
0033B0  2  A9 08        	lda #$08
0033B2  2  20 10 3A     	jsr OSWRCH
0033B5  2  A9 08        	lda #$08
0033B7  2  4C 10 3A     	jmp OSWRCH
0033BA  2               
0033BA  2               ;--------------------------------------------
0033BA  2               ; Subroutine at $0060 level 8 when hit switch
0033BA  2               ;	.byte $99,$1F,$15,$0C,$20,$0A,$08,$20
0033BA  2               ;--------------------------------------------
0033BA  2               
0033BA  2               L0060:
0033BA  2  A9 99        	lda #$99		; Print turned switch
0033BC  2  20 10 3A     	jsr OSWRCH
0033BF  2               
0033BF  2  A9 11        	lda #$15-4		; Make hole in wall
0033C1  2  8D 18 03     	sta XPOS	
0033C4  2  A9 0C        	lda #$0c
0033C6  2  8D 19 03     	sta YPOS
0033C9  2               
0033C9  2  A9 20        	lda #$20
0033CB  2  20 10 3A     	jsr OSWRCH
0033CE  2  A9 0A        	lda #$0A
0033D0  2  20 10 3A     	jsr OSWRCH
0033D3  2  A9 08        	lda #$08
0033D5  2  20 10 3A     	jsr OSWRCH
0033D8  2  A9 20        	lda #$20
0033DA  2  4C 10 3A     	jmp OSWRCH
0033DD  2               
0033DD  2               
0033DD  2               ; for debugging 
0033DD  2               
0033DD  2               marker:
0033DD  2               ;	rts
0033DD  2               
0033DD  2  48           	pha
0033DE  2  98           	tya
0033DF  2  48           	pha
0033E0  2               
0033E0  2  18           	clc
0033E1  2  AD 19 03     	lda YPOS
0033E4  2  69 80        	adc #$80
0033E6  2  85 92        	sta $92
0033E8  2  AD 18 03     	lda XPOS
0033EB  2  85 91        	sta $91
0033ED  2  A0 00        	ldy #$0
0033EF  2  B1 91        	lda ($91),y
0033F1  2  49 FF        	eor #$ff
0033F3  2  91 91        	sta ($91),y
0033F5  2  20 66 FE     	jsr $fe66
0033F8  2  49 FF        	eor #$ff
0033FA  2  91 91        	sta ($91),y
0033FC  2               
0033FC  2  68           	pla
0033FD  2  A8           	tay
0033FE  2  68           	pla
0033FF  2               	rts
003400  2  60           
003400  1               	.include "joystick.inc"
003400  2               ;---------------------------------------------
003400  2               ; Read key in matrix
003400  2               ;
003400  2               ; Controlflag
003400  2               ;	$00 = Keyboard
003400  2               ;	$40 = Joykey
003400  2               ;	$80 = JoyMMC
003400  2               ;
003400  2               ; Select row and read column:
003400  2               ;
003400  2               ; X = key to be checked
003400  2               ;
003400  2               ; columnbit = 0 - key pressed,
003400  2               ;             1 - key not pressed
003400  2               ;---------------------------------------------
003400  2               
003400  2               controlflag = $0381
003400  2               
003400  2               readkey:
003400  2  2C 81 03     	bit controlflag		; Check controls
003403  2  70 3A        	bvs joykey		; Control = Joykey
003405  2  30 47        	bmi joymmc		; Control = JoyMMC
003407  2               
003407  2               ; Control = Keyboard -------------------------
003407  2               
003407  2               keyboard:
003407  2  BD 1E 34     	lda key_row,x
00340A  2  09 F0        	ora #$f0
00340C  2  8D 00 B0     	sta $b000		; Select row
00340F  2               
00340F  2  AD 01 B0     	lda $b001		; Read column
003412  2  3D 29 34     	and key_column,x
003415  2  D0 04        	bne not_pressed
003417  2  BD 34 34     	lda key_return,x
00341A  2  60           	rts
00341B  2               
00341B  2               not_pressed:
00341B  2  A9 00        	lda #0
00341D  2  60           	rts
00341E  2               ;                      Z   X  RET DEL CPY ESC  S   N   JL  JR  JA
00341E  2  01 03 06 04  key_row:	.byte $01,$03,$06,$04,$05,$00,$08,$03,$00,$00,$00
003422  2  05 00 08 03  
003426  2  00 00 00     
003429  2  20 20 02 02  key_column:	.byte $20,$20,$02,$02,$02,$20,$20,$10,$02,$08,$01
00342D  2  02 20 20 10  
003431  2  02 08 01     
003434  2  01 01 01 01  key_return:	.byte $01,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01
003438  2  01 01 01 01  
00343C  2  01 01 01     
00343F  2               
00343F  2               ; Control = Joykey ---------------------------
00343F  2               
00343F  2               joykey:
00343F  2  E0 03        	cpx #3
003441  2  B0 C4        	bcs keyboard
003443  2  E8           	inx
003444  2  E8           	inx
003445  2  E8           	inx
003446  2  E8           	inx
003447  2  E8           	inx
003448  2  E8           	inx
003449  2  E8           	inx
00344A  2  E8           	inx
00344B  2  4C 07 34     	jmp keyboard
00344E  2               
00344E  2               ; Control = JoyMMC ---------------------------
00344E  2               
00344E  2               joymmc:
00344E  2  E0 03        	cpx #3
003450  2  B0 B5        	bcs keyboard
003452  2  20 96 34     	jsr joyget
003455  2  8D 82 34     	sta joy_scan
003458  2               
003458  2  E0 00        	cpx #0
00345A  2  D0 07        	bne scan_r
00345C  2               scan_l:
00345C  2  29 02        	and #$02
00345E  2  F0 1F        	beq scan_no
003460  2  A9 FE        	lda #$fe
003462  2  60           	rts
003463  2               scan_r:
003463  2  E0 01        	cpx #1
003465  2  D0 0A        	bne scan_u
003467  2  AD 82 34     	lda joy_scan
00346A  2  29 01        	and #$01
00346C  2  F0 11        	beq scan_no
00346E  2  A9 02        	lda #$02
003470  2  60           	rts
003471  2               scan_u:
003471  2  E0 02        	cpx #2
003473  2  D0 0A        	bne scan_no
003475  2  AD 82 34     	lda joy_scan
003478  2  29 10        	and #$10
00347A  2  F0 03        	beq scan_no
00347C  2  A9 FF        	lda #$ff
00347E  2  60           	rts
00347F  2               scan_no:
00347F  2  A9 00        	lda #0
003481  2  60           	rts
003482  2               
003482  2  00           joy_scan:	.byte 0
003483  2               
003483  1               	.include "sound.inc"
003483  2               
003483  2               ;----------------------------------------------------------
003483  2               ; Set PORTB direction
003483  2               ;----------------------------------------------------------
003483  2               
003483  2               joyinit:
003483  2  A9 FF        	lda #$ff   ; Write value to latch, bits 0-7 input
003485  2  8D 01 B4     	sta $b401
003488  2               
003488  2  20 A8 34     	jsr interwritedelay
00348B  2               
00348B  2  A9 A1        	lda #$a1   ; Write direction in latch to PORTB
00348D  2  8D 00 B4     	sta $b400
003490  2               
003490  2               wait_until_not_busy:
003490  2  AD 00 B4     	lda $b400
003493  2  30 FB        	bmi wait_until_not_busy
003495  2               
003495  2  60           	rts
003496  2               
003496  2               ;----------------------------------------------------------
003496  2               ; Get PORTB value
003496  2               ;----------------------------------------------------------
003496  2               
003496  2               joyget:
003496  2  A9 A2        	lda #$a2   ; Read value PORTB in latch
003498  2  8D 00 B4     	sta $b400
00349B  2               
00349B  2  20 A8 34     	jsr interwritedelay
00349E  2               
00349E  2  AD 01 B4     	lda $b401
0034A1  2  F0 04        	beq no_joystick
0034A3  2  49 FF        	eor #$ff
0034A5  2  29 1F        	and #$1f
0034A7  2               no_joystick:
0034A7  2  60           	rts
0034A8  2               
0034A8  2               ;----------------------------------------------------------
0034A8  2               ; Short delay
0034A8  2               ;
0034A8  2               ; Enough to intersperse 2 writes to the FATPIC.
0034A8  2               ;----------------------------------------------------------
0034A8  2               
0034A8  2               interwritedelay:
0034A8  2  A9 08        	lda  #8
0034AA  2  38           	sec
0034AB  2               loop:
0034AB  2  E9 01        	sbc  #1
0034AD  2  D0 FC        	bne  loop
0034AF  2  60           	rts
0034B0  2               
0034B0  2  00           tmp_byte:   .byte 0
0034B1  2               
0034B1  1               	.include "font.inc"
0034B1  2               sound:
0034B1  2  8D C7 34     	sta note
0034B4  2  A9 00        	lda #0
0034B6  2               snd_loop1:
0034B6  2  AE C7 34     	ldx note
0034B9  2               snd_loop2:
0034B9  2  CA           	dex
0034BA  2  EA           	nop
0034BB  2  EA           	nop
0034BC  2  D0 FB        	bne snd_loop2
0034BE  2  49 04        	eor #4
0034C0  2  8D 02 B0     	sta $b002
0034C3  2  88           	dey
0034C4  2  D0 F0        	bne snd_loop1
0034C6  2  60           	rts
0034C7  2               
0034C7  2  00           note:	.byte 0
0034C8  2               
0034C8  2               ; Jump sound
0034C8  2               ;	pha
0034C8  2               ;	lda L0065
0034C8  2               ;	ldy #20
0034C8  2               ;	jsr sound
0034C8  2               ;	pla
0034C8  2               
0034C8  2               ; Foot down
0034C8  2               ;	lda L0A25
0034C8  2               ;	eor #$ff
0034C8  2               ;	lsr a
0034C8  2               ;	ldy #7
0034C8  2               ;	jsr L0B27              ; Sound
0034C8  2               
0034C8  2               ; Death sound
0034C8  2               ;	lda #10
0034C8  2               ;	sta L1764
0034C8  2               ;L1728:
0034C8  2               ;	lda L1764
0034C8  2               ;	ldy #60
0034C8  2               ;	jsr L0B27		; Make death high note sound
0034C8  2               ;	lda L1764
0034C8  2               ;	ora #32
0034C8  2               ;	ldy #40
0034C8  2               ;	jsr L0B27		; Make death low note sound
0034C8  2               ;	inc L1764
0034C8  2               ;	lda L1764
0034C8  2               ;	cmp #20
0034C8  2               ;	bne L1728
0034C8  2               
0034C8  2               
0034C8  1               	.include "mm6200.inc"
0034C8  2               ;Font file for ASCII chars 32-128
0034C8  2               
0034C8  2               font:
0034C8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034CC  2  00 00 00 00  
0034D0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034D4  2  00 00 00 00  
0034D8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034DC  2  00 00 00 00  
0034E0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034E4  2  00 00 00 00  
0034E8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034EC  2  00 00 00 00  
0034F0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034F4  2  00 00 00 00  
0034F8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0034FC  2  00 00 00 00  
003500  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003504  2  00 00 00 00  
003508  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00350C  2  00 00 00 00  
003510  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003514  2  00 00 00 00  
003518  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00351C  2  00 00 00 00  
003520  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003524  2  00 00 00 00  
003528  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00352C  2  00 00 00 00  
003530  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003534  2  00 00 00 00  
003538  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00353C  2  00 00 00 00  
003540  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003544  2  00 00 00 00  
003548  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00354C  2  00 00 00 00  
003550  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003554  2  00 00 00 00  
003558  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00355C  2  00 00 00 00  
003560  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003564  2  00 00 00 00  
003568  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00356C  2  00 00 00 00  
003570  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003574  2  00 00 00 00  
003578  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00357C  2  00 00 00 00  
003580  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003584  2  00 00 00 00  
003588  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00358C  2  00 00 00 00  
003590  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
003594  2  00 00 00 00  
003598  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00359C  2  00 00 00 00  
0035A0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035A4  2  00 00 00 00  
0035A8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035AC  2  00 00 00 00  
0035B0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035B4  2  00 00 00 00  
0035B8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035BC  2  00 00 00 00  
0035C0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035C4  2  00 00 00 00  
0035C8  2               
0035C8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0035CC  2  00 00 00 00  
0035D0  2  18 18 18 18              .byte $18,$18,$18,$18,$18,$00,$18,$00
0035D4  2  18 00 18 00  
0035D8  2  6C 6C 6C 00              .byte $6C,$6C,$6C,$00,$00,$00,$00,$00
0035DC  2  00 00 00 00  
0035E0  2  36 36 7F 36              .byte $36,$36,$7F,$36,$7F,$36,$36,$00
0035E4  2  7F 36 36 00  
0035E8  2  0C 3F 68 3E              .byte $0C,$3F,$68,$3E,$0B,$7E,$18,$00
0035EC  2  0B 7E 18 00  
0035F0  2  60 66 0C 18              .byte $60,$66,$0C,$18,$30,$66,$06,$00
0035F4  2  30 66 06 00  
0035F8  2  38 6C 6C 38              .byte $38,$6C,$6C,$38,$6D,$66,$3B,$00
0035FC  2  6D 66 3B 00  
003600  2  0C 18 30 00              .byte $0C,$18,$30,$00,$00,$00,$00,$00
003604  2  00 00 00 00  
003608  2  0C 18 30 30              .byte $0C,$18,$30,$30,$30,$18,$0C,$00
00360C  2  30 18 0C 00  
003610  2  30 18 0C 0C              .byte $30,$18,$0C,$0C,$0C,$18,$30,$00
003614  2  0C 18 30 00  
003618  2  00 18 7E 3C              .byte $00,$18,$7E,$3C,$7E,$18,$00,$00
00361C  2  7E 18 00 00  
003620  2  00 18 18 7E              .byte $00,$18,$18,$7E,$18,$18,$00,$00
003624  2  18 18 00 00  
003628  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$18,$18,$30
00362C  2  00 18 18 30  
003630  2  00 00 00 7E              .byte $00,$00,$00,$7E,$00,$00,$00,$00
003634  2  00 00 00 00  
003638  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$18,$18,$00
00363C  2  00 18 18 00  
003640  2  00 06 0C 18              .byte $00,$06,$0C,$18,$30,$60,$00,$00
003644  2  30 60 00 00  
003648  2  3C 66 6E 7E              .byte $3C,$66,$6E,$7E,$76,$66,$3C,$00
00364C  2  76 66 3C 00  
003650  2  18 38 18 18              .byte $18,$38,$18,$18,$18,$18,$7E,$00
003654  2  18 18 7E 00  
003658  2  3C 66 06 0C              .byte $3C,$66,$06,$0C,$18,$30,$7E,$00
00365C  2  18 30 7E 00  
003660  2  3C 66 06 1C              .byte $3C,$66,$06,$1C,$06,$66,$3C,$00
003664  2  06 66 3C 00  
003668  2  0C 1C 3C 6C              .byte $0C,$1C,$3C,$6C,$7E,$0C,$0C,$00
00366C  2  7E 0C 0C 00  
003670  2  7E 60 7C 06              .byte $7E,$60,$7C,$06,$06,$66,$3C,$00
003674  2  06 66 3C 00  
003678  2  1C 30 60 7C              .byte $1C,$30,$60,$7C,$66,$66,$3C,$00
00367C  2  66 66 3C 00  
003680  2  7E 06 0C 18              .byte $7E,$06,$0C,$18,$30,$30,$30,$00
003684  2  30 30 30 00  
003688  2  3C 66 66 3C              .byte $3C,$66,$66,$3C,$66,$66,$3C,$00
00368C  2  66 66 3C 00  
003690  2  3C 66 66 3E              .byte $3C,$66,$66,$3E,$06,$0C,$38,$00
003694  2  06 0C 38 00  
003698  2  00 00 18 18              .byte $00,$00,$18,$18,$00,$18,$18,$00
00369C  2  00 18 18 00  
0036A0  2  00 00 18 18              .byte $00,$00,$18,$18,$00,$18,$18,$30
0036A4  2  00 18 18 30  
0036A8  2  0C 18 30 60              .byte $0C,$18,$30,$60,$30,$18,$0C,$00
0036AC  2  30 18 0C 00  
0036B0  2  00 00 7E 00              .byte $00,$00,$7E,$00,$7E,$00,$00,$00
0036B4  2  7E 00 00 00  
0036B8  2  30 18 0C 06              .byte $30,$18,$0C,$06,$0C,$18,$30,$00
0036BC  2  0C 18 30 00  
0036C0  2  3C 66 0C 18              .byte $3C,$66,$0C,$18,$18,$00,$18,$00
0036C4  2  18 00 18 00  
0036C8  2  3C 66 6E 6A              .byte $3C,$66,$6E,$6A,$6E,$60,$3C,$00
0036CC  2  6E 60 3C 00  
0036D0  2  3C 66 66 7E              .byte $3C,$66,$66,$7E,$66,$66,$66,$00
0036D4  2  66 66 66 00  
0036D8  2  7C 66 66 7C              .byte $7C,$66,$66,$7C,$66,$66,$7C,$00
0036DC  2  66 66 7C 00  
0036E0  2  3C 66 60 60              .byte $3C,$66,$60,$60,$60,$66,$3C,$00
0036E4  2  60 66 3C 00  
0036E8  2  78 6C 66 66              .byte $78,$6C,$66,$66,$66,$6C,$78,$00
0036EC  2  66 6C 78 00  
0036F0  2  7E 60 60 7C              .byte $7E,$60,$60,$7C,$60,$60,$7E,$00
0036F4  2  60 60 7E 00  
0036F8  2  7E 60 60 7C              .byte $7E,$60,$60,$7C,$60,$60,$60,$00
0036FC  2  60 60 60 00  
003700  2  3C 66 60 6E              .byte $3C,$66,$60,$6E,$66,$66,$3C,$00
003704  2  66 66 3C 00  
003708  2  66 66 66 7E              .byte $66,$66,$66,$7E,$66,$66,$66,$00
00370C  2  66 66 66 00  
003710  2  7E 18 18 18              .byte $7E,$18,$18,$18,$18,$18,$7E,$00
003714  2  18 18 7E 00  
003718  2  3E 0C 0C 0C              .byte $3E,$0C,$0C,$0C,$0C,$6C,$38,$00
00371C  2  0C 6C 38 00  
003720  2  66 6C 78 70              .byte $66,$6C,$78,$70,$78,$6C,$66,$00
003724  2  78 6C 66 00  
003728  2  60 60 60 60              .byte $60,$60,$60,$60,$60,$60,$7E,$00
00372C  2  60 60 7E 00  
003730  2  63 77 7F 6B              .byte $63,$77,$7F,$6B,$6B,$63,$63,$00
003734  2  6B 63 63 00  
003738  2  66 66 76 7E              .byte $66,$66,$76,$7E,$6E,$66,$66,$00
00373C  2  6E 66 66 00  
003740  2  3C 66 66 66              .byte $3C,$66,$66,$66,$66,$66,$3C,$00
003744  2  66 66 3C 00  
003748  2  7C 66 66 7C              .byte $7C,$66,$66,$7C,$60,$60,$60,$00
00374C  2  60 60 60 00  
003750  2  3C 66 66 66              .byte $3C,$66,$66,$66,$6A,$6C,$36,$00
003754  2  6A 6C 36 00  
003758  2  7C 66 66 7C              .byte $7C,$66,$66,$7C,$6C,$66,$66,$00
00375C  2  6C 66 66 00  
003760  2  3C 66 60 3C              .byte $3C,$66,$60,$3C,$06,$66,$3C,$00
003764  2  06 66 3C 00  
003768  2  7E 18 18 18              .byte $7E,$18,$18,$18,$18,$18,$18,$00
00376C  2  18 18 18 00  
003770  2  66 66 66 66              .byte $66,$66,$66,$66,$66,$66,$3C,$00
003774  2  66 66 3C 00  
003778  2  66 66 66 66              .byte $66,$66,$66,$66,$66,$3C,$18,$00
00377C  2  66 3C 18 00  
003780  2  63 63 6B 6B              .byte $63,$63,$6B,$6B,$7F,$77,$63,$00
003784  2  7F 77 63 00  
003788  2  66 66 3C 18              .byte $66,$66,$3C,$18,$3C,$66,$66,$00
00378C  2  3C 66 66 00  
003790  2  66 66 66 3C              .byte $66,$66,$66,$3C,$18,$18,$18,$00
003794  2  18 18 18 00  
003798  2  7E 06 0C 18              .byte $7E,$06,$0C,$18,$30,$60,$7E,$00
00379C  2  30 60 7E 00  
0037A0  2  7C 60 60 60              .byte $7C,$60,$60,$60,$60,$60,$7C,$00
0037A4  2  60 60 7C 00  
0037A8  2  00 60 30 18              .byte $00,$60,$30,$18,$0C,$06,$00,$00
0037AC  2  0C 06 00 00  
0037B0  2  3E 06 06 06              .byte $3E,$06,$06,$06,$06,$06,$3E,$00
0037B4  2  06 06 3E 00  
0037B8  2  18 3C 66 42              .byte $18,$3C,$66,$42,$00,$00,$00,$00
0037BC  2  00 00 00 00  
0037C0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$FF
0037C4  2  00 00 00 FF  
0037C8  2  1C 36 30 7C              .byte $1C,$36,$30,$7C,$30,$30,$7E,$00
0037CC  2  30 30 7E 00  
0037D0  2  00 00 3C 06              .byte $00,$00,$3C,$06,$3E,$66,$3E,$00
0037D4  2  3E 66 3E 00  
0037D8  2  60 60 7C 66              .byte $60,$60,$7C,$66,$66,$66,$7C,$00
0037DC  2  66 66 7C 00  
0037E0  2  00 00 3C 66              .byte $00,$00,$3C,$66,$60,$66,$3C,$00
0037E4  2  60 66 3C 00  
0037E8  2  06 06 3E 66              .byte $06,$06,$3E,$66,$66,$66,$3E,$00
0037EC  2  66 66 3E 00  
0037F0  2  00 00 3C 66              .byte $00,$00,$3C,$66,$7E,$60,$3C,$00
0037F4  2  7E 60 3C 00  
0037F8  2  1C 30 30 7C              .byte $1C,$30,$30,$7C,$30,$30,$30,$00
0037FC  2  30 30 30 00  
003800  2  00 00 3E 66              .byte $00,$00,$3E,$66,$66,$3E,$06,$3C
003804  2  66 3E 06 3C  
003808  2  60 60 7C 66              .byte $60,$60,$7C,$66,$66,$66,$66,$00
00380C  2  66 66 66 00  
003810  2  18 00 38 18              .byte $18,$00,$38,$18,$18,$18,$3C,$00
003814  2  18 18 3C 00  
003818  2  18 00 38 18              .byte $18,$00,$38,$18,$18,$18,$18,$70
00381C  2  18 18 18 70  
003820  2  60 60 66 6C              .byte $60,$60,$66,$6C,$78,$6C,$66,$00
003824  2  78 6C 66 00  
003828  2  38 18 18 18              .byte $38,$18,$18,$18,$18,$18,$3C,$00
00382C  2  18 18 3C 00  
003830  2  00 00 36 7F              .byte $00,$00,$36,$7F,$6B,$6B,$63,$00
003834  2  6B 6B 63 00  
003838  2  00 00 7C 66              .byte $00,$00,$7C,$66,$66,$66,$66,$00
00383C  2  66 66 66 00  
003840  2  00 00 3C 66              .byte $00,$00,$3C,$66,$66,$66,$3C,$00
003844  2  66 66 3C 00  
003848  2  00 00 7C 66              .byte $00,$00,$7C,$66,$66,$7C,$60,$60
00384C  2  66 7C 60 60  
003850  2  00 00 3E 66              .byte $00,$00,$3E,$66,$66,$3E,$06,$07
003854  2  66 3E 06 07  
003858  2  00 00 6C 76              .byte $00,$00,$6C,$76,$60,$60,$60,$00
00385C  2  60 60 60 00  
003860  2  00 00 3E 60              .byte $00,$00,$3E,$60,$3C,$06,$7C,$00
003864  2  3C 06 7C 00  
003868  2  30 30 7C 30              .byte $30,$30,$7C,$30,$30,$30,$1C,$00
00386C  2  30 30 1C 00  
003870  2  00 00 66 66              .byte $00,$00,$66,$66,$66,$66,$3E,$00
003874  2  66 66 3E 00  
003878  2  00 00 66 66              .byte $00,$00,$66,$66,$66,$3C,$18,$00
00387C  2  66 3C 18 00  
003880  2  00 00 63 6B              .byte $00,$00,$63,$6B,$6B,$7F,$36,$00
003884  2  6B 7F 36 00  
003888  2  00 00 66 3C              .byte $00,$00,$66,$3C,$18,$3C,$66,$00
00388C  2  18 3C 66 00  
003890  2  00 00 66 66              .byte $00,$00,$66,$66,$66,$3E,$06,$3C
003894  2  66 3E 06 3C  
003898  2  00 00 7E 0C              .byte $00,$00,$7E,$0C,$18,$30,$7E,$00
00389C  2  18 30 7E 00  
0038A0  2  0C 18 18 70              .byte $0C,$18,$18,$70,$18,$18,$0C,$00
0038A4  2  18 18 0C 00  
0038A8  2  18 18 18 00              .byte $18,$18,$18,$00,$18,$18,$18,$00
0038AC  2  18 18 18 00  
0038B0  2  30 18 18 0E              .byte $30,$18,$18,$0E,$18,$18,$30,$00
0038B4  2  18 18 30 00  
0038B8  2  31 6B 46 00              .byte $31,$6B,$46,$00,$00,$00,$00,$00
0038BC  2  00 00 00 00  
0038C0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0038C4  2  00 00 00 00  
0038C8  2               
0038C8  2               ext_font:
0038C8  2  55 55 55 55        .byte $55,$55,$55,$55,$55,$55,$55,$55
0038CC  2  55 55 55 55  
0038D0  2  55 2B 2B 2B        .byte $55,$2B,$2B,$2B,$2B,$2B,$2B,$55
0038D4  2  2B 2B 2B 55  
0038D8  2  AA D4 D4 D4        .byte $AA,$D4,$D4,$D4,$D4,$D4,$D4,$AA
0038DC  2  D4 D4 D4 AA  
0038E0  2  00 FF 88 22        .byte $00,$FF,$88,$22,$88,$22,$88,$22
0038E4  2  88 22 88 22  
0038E8  2  00 00 FF 88        .byte $00,$00,$FF,$88,$22,$88,$22,$88
0038EC  2  22 88 22 88  
0038F0  2  00 00 00 FF        .byte $00,$00,$00,$FF,$88,$22,$88,$22
0038F4  2  88 22 88 22  
0038F8  2  00 00 00 00        .byte $00,$00,$00,$00,$FF,$88,$22,$88
0038FC  2  FF 88 22 88  
003900  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$FF,$88,$22
003904  2  00 FF 88 22  
003908  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$FF,$88
00390C  2  00 00 FF 88  
003910  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$FF
003914  2  00 00 00 FF  
003918  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
00391C  2  00 00 00 00  
003920  2  C3 66 18 66        .byte $C3,$66,$18,$66,$00,$00,$00,$00
003924  2  00 00 00 00  
003928  2  0F 66 0F 66        .byte $0F,$66,$0F,$66,$00,$00,$00,$00
00392C  2  00 00 00 00  
003930  2  3C 66 81 66        .byte $3C,$66,$81,$66,$00,$00,$00,$00
003934  2  00 00 00 00  
003938  2  F0 66 F0 66        .byte $F0,$66,$F0,$66,$00,$00,$00,$00
00393C  2  00 00 00 00  
003940  2  22 FF 88 FF        .byte $22,$FF,$88,$FF,$22,$FF,$88,$FF
003944  2  22 FF 88 FF  
003948  2  30 48 88 90        .byte $30,$48,$88,$90,$68,$04,$0A,$04
00394C  2  68 04 0A 04  
003950  2  FF 81 81 81        .byte $FF,$81,$81,$81,$81,$81,$81,$FF
003954  2  81 81 81 FF  
003958  2  FF 81 81 81        .byte $FF,$81,$81,$81,$81,$81,$81,$FF
00395C  2  81 81 81 FF  
003960  2  FF 81 81 81        .byte $FF,$81,$81,$81,$81,$81,$81,$FF
003964  2  81 81 81 FF  
003968  2  FF 81 81 81        .byte $FF,$81,$81,$81,$81,$81,$81,$FF
00396C  2  81 81 81 FF  
003970  2  FF 81 81 81        .byte $FF,$81,$81,$81,$81,$81,$81,$81
003974  2  81 81 81 81  
003978  2  FF FF 18 18        .byte $FF,$FF,$18,$18,$18,$18,$18,$18
00397C  2  18 18 18 18  
003980  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
003984  2  00 00 00 00  
003988  2  FE 82 82 44        .byte $FE,$82,$82,$44,$38,$20,$C0,$C0
00398C  2  38 20 C0 C0  
003990  2  FE 82 82 44        .byte $FE,$82,$82,$44,$38,$08,$06,$06
003994  2  38 08 06 06  
003998  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
00399C  2  00 00 00 00  
0039A0  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
0039A4  2  00 00 00 00  
0039A8  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
0039AC  2  00 00 00 00  
0039B0  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
0039B4  2  00 00 00 00  
0039B8  2  08 08 08 08        .byte $08,$08,$08,$08,$08,$08,$08,$08
0039BC  2  08 08 08 08  
0039C0  2  00 00 00 00        .byte $00,$00,$00,$00,$00,$00,$00,$00
0039C4  2  00 00 00 00  
0039C8  2               
0039C8  2               ;======================================================================
0039C8  2               ;FONT ROUTINES:
0039C8  2               ;======================================================================
0039C8  2               ;PUTSTRING
0039C8  2               ; - x,y,string,0
0039C8  2               ; - x,y,string,0
0039C8  2               ; - $ea
0039C8  2               ;
0039C8  2               ;PUTCHAR x,y,a
0039C8  2               ;======================================================================
0039C8  2               XPOS     = $318
0039C8  2               YPOS     = $319
0039C8  2               
0039C8  2               PUTSTRING:
0039C8  2  86 E8            stx $e8
0039CA  2  84 E9            sty $e9
0039CC  2               
0039CC  2  A0 00            ldy #0
0039CE  2               P_S_0:
0039CE  2  B1 E8            lda ($e8),y    ; Check end of printing
0039D0  2  30 1E            bmi P_S_4
0039D2  2               
0039D2  2               P_S_1:
0039D2  2  8D 18 03         sta XPOS       ; Save x,y,attribute
0039D5  2  20 F1 39         jsr PTR_INC
0039D8  2  B1 E8            lda ($e8),y
0039DA  2  8D 19 03         sta YPOS
0039DD  2               
0039DD  2               P_S_2:
0039DD  2  20 F1 39         jsr PTR_INC    ; Print character until 0
0039E0  2  B1 E8            lda ($e8),y
0039E2  2  F0 06            beq P_S_5
0039E4  2  20 10 3A         jsr PRINTCHAR
0039E7  2  4C DD 39         jmp P_S_2
0039EA  2               P_S_5:
0039EA  2  20 F1 39         jsr PTR_INC
0039ED  2  4C CE 39         jmp P_S_0
0039F0  2               
0039F0  2               P_S_4:
0039F0  2  60               rts            ; Return to program
0039F1  2               
0039F1  2               PTR_INC:           ; Increment textpointer
0039F1  2  E6 E8            inc $e8
0039F3  2  D0 02            bne PTR_1
0039F5  2  E6 E9            inc $e9
0039F7  2               PTR_1:
0039F7  2  60               rts
0039F8  2               
0039F8  2               ;----------------------------------------------------------------------
0039F8  2               
0039F8  2               curs_back:
0039F8  2  CE 18 03     	dec XPOS
0039FB  2  4C DA 3A     	jmp P_C_exit
0039FE  2               curs_forw:
0039FE  2  EE 18 03     	inc XPOS
003A01  2  4C DA 3A     	jmp P_C_exit
003A04  2               curs_down:
003A04  2  EE 19 03     	inc YPOS
003A07  2  4C DA 3A     	jmp P_C_exit
003A0A  2               
003A0A  2               ;----------------------------------------------------------------------
003A0A  2               SCR      = $33
003A0A  2               CHR      = $35
003A0A  2               TMP_Y    = $37
003A0A  2               TMP_X    = $38
003A0A  2               TMP_A	 = $39
003A0A  2               
003A0A  2               PUTCHAR:
003A0A  2  8E 18 03         stx XPOS
003A0D  2  8C 19 03         sty YPOS
003A10  2               
003A10  2               PRINTCHAR:
003A10  2  86 38            stx TMP_X
003A12  2  84 37            sty TMP_Y
003A14  2  85 39            sta TMP_A
003A16  2               
003A16  2  C9 A0        	cmp #$a0
003A18  2  90 02        	bcc no_ext_chr
003A1A  2  29 9F        	and #$9f
003A1C  2               no_ext_chr:
003A1C  2  C9 08        	cmp #08
003A1E  2  F0 D8        	beq curs_back
003A20  2               
003A20  2  C9 09        	cmp #09
003A22  2  F0 DA        	beq curs_forw
003A24  2               
003A24  2  C9 0A        	cmp #$0A
003A26  2  F0 DC        	beq curs_down
003A28  2               
003A28  2  C9 01        	cmp #$01
003A2A  2  D0 03        	bne short_jump
003A2C  2  4C DA 3A     	jmp P_C_exit
003A2F  2               short_jump:
003A2F  2  85 35            sta CHR        ; Calculate characterspritedata address
003A31  2               
003A31  2  20 F0 3A     	jsr calc_scraddress
003A34  2  A0 00        	ldy #0
003A36  2  A5 35        	lda CHR
003A38  2               
003A38  2  C9 80        	cmp #$80
003A3A  2  90 3A        	bcc no_guard
003A3C  2               
003A3C  2  C9 8F        	cmp #$8f
003A3E  2  90 08        	bcc no_adjust
003A40  2  AE 97 2E     	ldx chr_filter
003A43  2  F0 03        	beq no_adjust
003A45  2  38           	sec
003A46  2  E9 05        	sbc #$05
003A48  2               no_adjust:
003A48  2  18           	clc
003A49  2  6D 97 2E     	adc chr_filter
003A4C  2  29 9F        	and #$9f
003A4E  2               
003A4E  2  C9 9D        	cmp #$9d
003A50  2  D0 05        	bne chk2
003A52  2  A9 9B        	lda #$9b
003A54  2  4C 6F 3A     	jmp no_patch
003A57  2               chk2:
003A57  2  C9 9E        	cmp #$9e
003A59  2  D0 05        	bne chk3
003A5B  2  A9 9B        	lda #$9b
003A5D  2  4C 6F 3A     	jmp no_patch
003A60  2               chk3:
003A60  2  C9 96        	cmp #$96
003A62  2  D0 05        	bne chk4
003A64  2  A9 80        	lda #$80
003A66  2  4C 6F 3A     	jmp no_patch
003A69  2               chk4:
003A69  2  C9 9F        	cmp #$9f
003A6B  2  D0 02        	bne no_patch
003A6D  2  A9 9B        	lda #$9b
003A6F  2               no_patch:
003A6F  2  2C CF 3E     	bit guardflag
003A72  2  10 02        	bpl no_guard
003A74  2  A9 00        	lda #$00
003A76  2               no_guard:
003A76  2  91 33        	sta (SCR),y
003A78  2               
003A78  2  A9 00            lda #0         ; = A * 8 + charsprite data address
003A7A  2  85 36            sta CHR+1
003A7C  2  06 35            asl CHR
003A7E  2  26 36            rol CHR+1
003A80  2  06 35            asl CHR
003A82  2  26 36            rol CHR+1
003A84  2  06 35            asl CHR
003A86  2  26 36            rol CHR+1
003A88  2  A5 35            lda CHR
003A8A  2  18               clc
003A8B  2  69 C8            adc #<font
003A8D  2  85 35            sta CHR
003A8F  2  A5 36            lda CHR+1
003A91  2  69 34            adc #>font
003A93  2  85 36            sta CHR+1
003A95  2                   
003A95  2  AD 18 03         lda XPOS       ; Calculate screenaddress
003A98  2  85 33            sta SCR
003A9A  2  85 5B        	sta L005B
003A9C  2               
003A9C  2  AD 19 03         lda YPOS
003A9F  2  18               clc
003AA0  2  69 80            adc #$80
003AA2  2  85 34            sta SCR+1
003AA4  2  38           	sec
003AA5  2  E9 24        	sbc #($8000-buffer)/256
003AA7  2  85 5C        	sta L005C
003AA9  2                
003AA9  2  A2 00            ldx #0
003AAB  2  A0 00            ldy #0         ; Put character on screen
003AAD  2               P_C_1:
003AAD  2  B1 35            lda (CHR),y
003AAF  2  2D 6F 11         and L109B	; mask colour
003AB2  2  91 33            sta (SCR),y
003AB4  2  2C D0 3E     	bit shadow_print
003AB7  2  10 02        	bpl no_shadow
003AB9  2  91 5B        	sta (L005B),y
003ABB  2               no_shadow:
003ABB  2  E6 35            inc CHR
003ABD  2  D0 02            bne P_C_2
003ABF  2  E6 36            inc CHR+1
003AC1  2               P_C_2:
003AC1  2  A5 33            lda SCR
003AC3  2  18               clc
003AC4  2  69 20            adc #$20
003AC6  2  85 33            sta SCR
003AC8  2  85 5B        	sta L005B
003ACA  2  A5 34            lda SCR+1
003ACC  2  90 04            bcc no_inc_hb
003ACE  2  E6 34            inc SCR+1
003AD0  2  E6 5C            inc L005C
003AD2  2               no_inc_hb:
003AD2  2  E8               inx
003AD3  2  E0 08            cpx #8
003AD5  2  D0 D6            bne P_C_1
003AD7  2  EE 18 03     	inc XPOS
003ADA  2               P_C_exit:
003ADA  2  A5 39            lda TMP_A
003ADC  2  A6 38            ldx TMP_X
003ADE  2  A4 37            ldy TMP_Y
003AE0  2  60               rts
003AE1  2                
003AE1  2               ;INV_CURSOR:
003AE1  2               ;    stx SCR
003AE1  2               ;    tya
003AE1  2               ;    clc
003AE1  2               ;    adc #$80
003AE1  2               ;    sta SCR+1
003AE1  2               ; 
003AE1  2               ;    ldy #0         ; Put character on screen
003AE1  2               ;IC1:
003AE1  2               ;    lda (SCR),y
003AE1  2               ;    eor #$ff
003AE1  2               ;    sta (SCR),y
003AE1  2               ;    tya
003AE1  2               ;    clc
003AE1  2               ;    adc #$20
003AE1  2               ;    tay
003AE1  2               ;    bne IC1
003AE1  2               ;    rts    
003AE1  2               
003AE1  2               GET_CHR:
003AE1  2  84 37            sty TMP_Y
003AE3  2  48           	pha
003AE4  2               
003AE4  2  20 F0 3A     	jsr calc_scraddress
003AE7  2               
003AE7  2  A0 00        	ldy #0
003AE9  2  B1 33        	lda (SCR),y
003AEB  2  AA           	tax
003AEC  2               
003AEC  2  68           	pla
003AED  2  A4 37            ldy TMP_Y
003AEF  2  60           	rts
003AF0  2               
003AF0  2               calc_scraddress:
003AF0  2  AD 19 03     	lda YPOS
003AF3  2  85 33        	sta SCR		; Fill charmap
003AF5  2  A9 00        	lda #0
003AF7  2  85 34        	sta SCR+1
003AF9  2  06 33        	asl SCR
003AFB  2  26 34        	rol SCR+1
003AFD  2  06 33        	asl SCR
003AFF  2  26 34        	rol SCR+1
003B01  2  06 33        	asl SCR
003B03  2  26 34        	rol SCR+1
003B05  2  06 33        	asl SCR
003B07  2  26 34        	rol SCR+1
003B09  2  06 33        	asl SCR
003B0B  2  26 34        	rol SCR+1
003B0D  2  18           	clc
003B0E  2  A5 33        	lda SCR
003B10  2  6D 18 03     	adc XPOS
003B13  2  85 33        	sta SCR
003B15  2  18           	clc
003B16  2  69 52        	adc #<charmap
003B18  2  85 33        	sta SCR
003B1A  2  A5 34        	lda SCR+1
003B1C  2  69 3B        	adc #>charmap
003B1E  2  85 34        	sta SCR+1
003B20  2  60           	rts
003B21  2               
003B21  2               calc_mapaddress:
003B21  2  A5 76        	lda L0076
003B23  2  29 7F        	and #$7f
003B25  2  85 33        	sta SCR		; Fill charmap
003B27  2  A9 00        	lda #0
003B29  2  85 34        	sta SCR+1
003B2B  2  06 33        	asl SCR
003B2D  2  26 34        	rol SCR+1
003B2F  2  06 33        	asl SCR
003B31  2  26 34        	rol SCR+1
003B33  2  06 33        	asl SCR
003B35  2  26 34        	rol SCR+1
003B37  2  06 33        	asl SCR
003B39  2  26 34        	rol SCR+1
003B3B  2  06 33        	asl SCR
003B3D  2  26 34        	rol SCR+1
003B3F  2  18           	clc
003B40  2  A5 33        	lda SCR
003B42  2  65 75        	adc L0075
003B44  2  85 33        	sta SCR
003B46  2  18           	clc
003B47  2  69 52        	adc #<charmap
003B49  2  85 33        	sta SCR
003B4B  2  A5 34        	lda SCR+1
003B4D  2  69 3B        	adc #>charmap
003B4F  2  85 34        	sta SCR+1
003B51  2  60           	rts
003B52  2               
003B52  2               ;---------------------------------------------------
003B52  2               ; Character map screen
003B52  2               ;---------------------------------------------------
003B52  2               
003B52  2               charmap:
003B52  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003B56  2  00 00 00 00  
003B5A  2  00 00 00 00  
003B72  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003B76  2  00 00 00 00  
003B7A  2  00 00 00 00  
003B92  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003B96  2  00 00 00 00  
003B9A  2  00 00 00 00  
003BB2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003BB6  2  00 00 00 00  
003BBA  2  00 00 00 00  
003BD2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003BD6  2  00 00 00 00  
003BDA  2  00 00 00 00  
003BF2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003BF6  2  00 00 00 00  
003BFA  2  00 00 00 00  
003C12  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003C16  2  00 00 00 00  
003C1A  2  00 00 00 00  
003C32  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003C36  2  00 00 00 00  
003C3A  2  00 00 00 00  
003C52  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003C56  2  00 00 00 00  
003C5A  2  00 00 00 00  
003C72  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003C76  2  00 00 00 00  
003C7A  2  00 00 00 00  
003C92  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003C96  2  00 00 00 00  
003C9A  2  00 00 00 00  
003CB2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003CB6  2  00 00 00 00  
003CBA  2  00 00 00 00  
003CD2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003CD6  2  00 00 00 00  
003CDA  2  00 00 00 00  
003CF2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003CF6  2  00 00 00 00  
003CFA  2  00 00 00 00  
003D12  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003D16  2  00 00 00 00  
003D1A  2  00 00 00 00  
003D32  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003D36  2  00 00 00 00  
003D3A  2  00 00 00 00  
003D52  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003D56  2  00 00 00 00  
003D5A  2  00 00 00 00  
003D72  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003D76  2  00 00 00 00  
003D7A  2  00 00 00 00  
003D92  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003D96  2  00 00 00 00  
003D9A  2  00 00 00 00  
003DB2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003DB6  2  00 00 00 00  
003DBA  2  00 00 00 00  
003DD2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003DD6  2  00 00 00 00  
003DDA  2  00 00 00 00  
003DF2  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003DF6  2  00 00 00 00  
003DFA  2  00 00 00 00  
003E12  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003E16  2  00 00 00 00  
003E1A  2  00 00 00 00  
003E32  2  00 00 00 00  	.byte 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
003E36  2  00 00 00 00  
003E3A  2  00 00 00 00  
003E52  2               
003E52  1               buffer:
003E52  2               ;
003E52  2               ; User equates
003E52  2               ;
003E52  2               OSWORD      = $FFF1
003E52  2               ;
003E52  2               ; Code equates
003E52  2               ;
003E52  2               
003E52  2               L199F       = L199E+1
003E52  2               
003E52  2               ; Screen coordinates
003E52  2               
003E52  2               ;L32A0       = $32A0
003E52  2               ;L32A8       = $32A8
003E52  2               L332E       = $81c6
003E52  2               L33C0       = $8110
003E52  2               
003E52  2               L3942       = $8258
003E52  2               L394A       = $8258
003E52  2               
003E52  2               ;L4000       = $4000
003E52  2               ;L4A00       = $4A00
003E52  2               
003E52  2               L4F42       = $8b50
003E52  2               L4F4A       = $8b50
003E52  2               
003E52  2               ;L5000       = $5000
003E52  2               
003E52  2               ;L6364       = L6362+2
003E52  2               ;L6367       = L6365+2
003E52  2               L661D       = L661C+1
003E52  2               L661E       = L661C+2
003E52  2               L6936       = L6935+1
003E52  2               L693C       = L693B+1
003E52  2               L6A2A       = L6A29+1
003E52  2               
003E52  2               ;LFFFF       = $FFFF
003E52  2               ;
003E52  2               ; Start of code
003E52  2               ;
003E52  2               ;            *= $6200
003E52  2               ;
003E52  2               
003E52  2               ;--------------------------------------------
003E52  2               ; Start game with player
003E52  2               ;--------------------------------------------
003E52  2               
003E52  2  A9 01        L6200:      lda #$01               ; Set level
003E54  2  20 FD 3E                 jsr L62C3              ; Buildscreen
003E57  2               
003E57  2  20 7C 3F                 jsr L62F4              ; Reset music pointer and play sound
003E5A  2               
003E5A  2               ; Game play loop
003E5A  2               
003E5A  2  AD 7D 41     L6208:      lda L651D              ; Lb miner screen address
003E5D  2  85 75                    sta L0075              ; 85 75
003E5F  2  AD 7E 41                 lda L651E              ; Hb miner screen address
003E62  2  85 76                    sta L0076              ; 85 76
003E64  2               
003E64  2  20 71 11                 jsr L109C              ; Move miner
003E67  2               
003E67  2  A5 75                    lda L0075              ; A5 75
003E69  2  8D 7D 41                 sta L651D              ; Lb miner screen address
003E6C  2  A5 76                    lda L0076              ; A5 76
003E6E  2  8D 7E 41                 sta L651E              ; Hb miner screen address
003E71  2               
003E71  2  20 09 1E                 jsr L1E0D              ; Show guards
003E74  2  20 0F 45                 jsr L68BE              ; 20 BE 68
003E77  2               
003E77  2  20 5A 32                 jsr L3146              ; 20 46 31
003E7A  2               
003E7A  2               ; Wait loop
003E7A  2               
003E7A  2  A2 C0                    ldx #$c0               ; A2 00
003E7C  2  A0 FF                    ldy #$FF               ; A0 FF
003E7E  2  E8           L622C:      inx                    ; E8
003E7F  2  D0 FD                    bne L622C              ; D0 FD
003E81  2  C8                       iny                    ; C8
003E82  2  D0 FA                    bne L622C              ; D0 FA
003E84  2               
003E84  2               ; Scan keys
003E84  2               
003E84  2               ;	jsr $fe71		; Read key
003E84  2               ;	cpy #$0f
003E84  2  A2 03        	ldx #3
003E86  2  20 00 34     	jsr readkey
003E89  2  D0 46        	bne L6291              ; Delete key pressed
003E8B  2               
003E8B  2               ;	jsr $fe71		; Read key
003E8B  2               ;	cpy #$3b
003E8B  2  A2 05        	ldx #5
003E8D  2  20 00 34     	jsr readkey
003E90  2  D0 52        	bne L62AA              ; Escape key pressed
003E92  2               
003E92  2               ;	jsr $fe71		; Read key
003E92  2               ;	cpy #$33
003E92  2  A2 06        	ldx #6
003E94  2  20 00 34     	jsr readkey
003E97  2  D0 59        	bne L62B8              ; S key pressed
003E99  2               
003E99  2               ;	jsr $fe71		; Read key
003E99  2               ;	cpy #$31
003E99  2  A2 07        	ldx #7
003E9B  2  20 00 34     	jsr readkey
003E9E  2  D0 47        	bne L62AD              ; N key pressed
003EA0  2               
003EA0  2  AD D5 47     L6266:      lda L6B7F              ; Check cheatmode
003EA3  2  C9 00                    cmp #$00               ; C9 00
003EA5  2  F0 25                    beq L628E              ; F0 21
003EA7  2               
003EA7  2               ; Scan function keys f0-f9
003EA7  2               
003EA7  2  A9 00                    lda #$00               ; A9 00
003EA9  2  8D E1 3F                 sta L635C              ; 8D 5C 63
003EAC  2  A0 FF        L6272:      ldy #$FF               ; A0 FF
003EAE  2               
003EAE  2  A9 F0        	lda #$f0
003EB0  2  8D 00 B0     	sta $b000
003EB3  2  20 71 FE     	jsr $fe71		; Scan key
003EB6  2  98           	tya
003EB7  2  AE E1 3F                 ldx L635C              ; AE 5C 63
003EBA  2  DD D7 3F     	cmp L6352,X		; Check if function key
003EBD  2  D0 03        	bne L6273
003EBF  2  4C 8B 3F     	jmp L6303		; If so, jump
003EC2  2               L6273:
003EC2  2  EE E1 3F                 inc L635C              ; Point to next funtion key
003EC5  2  AD E1 3F                 lda L635C              ; AD 5C 63
003EC8  2  C9 0A                    cmp #$0A               ; C9 0A
003ECA  2  D0 E0                    bne L6272              ; D0 E4
003ECC  2               
003ECC  2  4C 5A 3E     L628E:      jmp L6208              ; Game loop
003ECF  2               
003ECF  2  00           guardflag:	.byte 0
003ED0  2  00           shadow_print:	.byte 0
003ED1  2               
003ED1  2               
003ED1  2               ;--------------------------------------------
003ED1  2               ; Delete key pressed
003ED1  2               ; Freeze game until Copy key is pressed
003ED1  2               ;--------------------------------------------
003ED1  2               
003ED1  2  20 71 3F     L6291:      jsr L62E9              ; Stop music
003ED4  2  20 FA 31     L6294:      jsr L30FC              ; Check for cheatcode
003ED7  2               
003ED7  2               ;	jsr $fe71		; Read key
003ED7  2               ;            cpy #$0E               ; C0 FF
003ED7  2  A2 04        	ldx #4
003ED9  2  20 00 34     	jsr readkey
003EDC  2  F0 F6                    beq L6294              ; Copy key not pressed
003EDE  2               
003EDE  2  20 7C 3F                 jsr L62F4              ; Reset music pointer and play sound
003EE1  2  4C 5A 3E                 jmp L6208              ; 4C 08 62
003EE4  2               
003EE4  2               ;--------------------------------------------
003EE4  2               ; Escape key pressed
003EE4  2               ; Return to intro screen
003EE4  2               ;--------------------------------------------
003EE4  2               
003EE4  2  4C 06 27     L62AA:      jmp L24F8              ; Jump L0090
003EE7  2               
003EE7  2               ;--------------------------------------------
003EE7  2               ; Q key pressed
003EE7  2               ; Turn off tune
003EE7  2               ;--------------------------------------------
003EE7  2               
003EE7  2  A9 00        L62AD:      lda #$00               ; A9 00
003EE9  2  8D 7B 3F                 sta L62F3              ; Reset soundflag
003EEC  2               
003EEC  2  20 71 3F                 jsr L62E9              ; Stop music
003EEF  2  4C A0 3E                 jmp L6266              ; 4C 66 62
003EF2  2               
003EF2  2               ;--------------------------------------------
003EF2  2               ; S key pressed
003EF2  2               ; Turn on tune
003EF2  2               ;--------------------------------------------
003EF2  2               
003EF2  2  A9 01        L62B8:      lda #$01               ; A9 01
003EF4  2  8D 7B 3F                 sta L62F3              ; Set soundflag
003EF7  2               
003EF7  2  20 6B 3F                 jsr L62E3              ; Start music
003EFA  2  4C A0 3E                 jmp L6266              ; 4C 66 62
003EFD  2               
003EFD  2               ;--------------------------------------------
003EFD  2               ; Build screen
003EFD  2               ;--------------------------------------------
003EFD  2               
003EFD  2               L62C3:
003EFD  2  20 B8 3F     	jsr L6333              ; Check levelnr
003F00  2               
003F00  2  A9 05        	lda #$05               ; Reset 
003F02  2  8D 24 31     	sta L2FFF              ; Nr of keys
003F05  2               
003F05  2  A5 80        	lda L0080              ; Get levelnr
003F07  2  20 77 2A     	jsr L28B8              ; Build screen
003F0A  2               
003F0A  2  20 92 1F                 jsr L1FB5              ; 20 B5 1F
003F0D  2  20 AE 24                 jsr L229B              ; Skip printing bottomline + set vars
003F10  2               
003F10  2               ; Copy screen to buffer
003F10  2               
003F10  2  A9 5C        	lda #>buffer
003F12  2  8D 23 3F     	sta buf_loop+5
003F15  2  A9 80        	lda #$80
003F17  2  8D 20 3F     	sta buf_loop+2
003F1A  2               
003F1A  2  A2 11        	ldx #$11
003F1C  2  A0 00        	ldy #0
003F1E  2               buf_loop:
003F1E  2  B9 00 80     	lda $8000,y
003F21  2  99 00 5C     	sta buffer,y
003F24  2  C8           	iny
003F25  2  D0 F7        	bne buf_loop
003F27  2               
003F27  2  EE 20 3F     	inc buf_loop+2
003F2A  2  EE 23 3F     	inc buf_loop+5
003F2D  2  CA           	dex
003F2E  2  D0 EE        	bne buf_loop	
003F30  2               
003F30  2               ; Wipe keys
003F30  2               
003F30  2  AD 24 31     	lda L2FFF		; Reset key pointer
003F33  2  8D 6A 3F     	sta key_max
003F36  2  A2 00        	ldx #0
003F38  2  8E 69 3F     	stx key_cnt
003F3B  2               key1:
003F3B  2  AE 69 3F     	ldx key_cnt
003F3E  2  BD FA 2F     	lda L2E7F,X		; Get X-pos key
003F41  2  38           	sec
003F42  2  E9 04        	sbc #4
003F44  2  85 33        	sta SCR
003F46  2               
003F46  2  E8           	inx
003F47  2  BD FA 2F     	lda L2E7F,X		; Get Y-pos key
003F4A  2  18           	clc
003F4B  2  69 5C        	adc #>buffer
003F4D  2  85 34        	sta SCR+1
003F4F  2               
003F4F  2  A2 07        	ldx #7
003F51  2  A9 00        	lda #0
003F53  2               key2:
003F53  2  BC CA 10     	ldy scrtab,x
003F56  2  91 33        	sta (SCR),y
003F58  2  CA           	dex
003F59  2  10 F8        	bpl key2
003F5B  2               
003F5B  2  EE 69 3F     	inc key_cnt
003F5E  2  EE 69 3F     	inc key_cnt
003F61  2  CE 6A 3F     	dec key_max
003F64  2  D0 D5        	bne key1
003F66  2               
003F66  2               ; Continue game
003F66  2               
003F66  2  4C E3 3F                 jmp L6391              ; 4C 91 63
003F69  2               
003F69  2  00           key_cnt:	.byte 0
003F6A  2  00           key_max:	.byte 0
003F6B  2               
003F6B  2               ;--------------------------------------------
003F6B  2               ; Start or stop music routine
003F6B  2               ; Music pointer is L3098
003F6B  2               ; Start music is poke INC at start musicroutine
003F6B  2               ; Stop music is poke RTS at start musicroutine
003F6B  2               ;--------------------------------------------
003F6B  2               
003F6B  2               ; Start music
003F6B  2               
003F6B  2               L62E3:
003F6B  2  A9 EE        	lda #$EE		; INC instruction
003F6D  2  8D 60 31     	sta L303B		; Musicroutine
003F70  2  60           	rts
003F71  2               
003F71  2               ; Stop music
003F71  2               
003F71  2  A9 60        L62E9:	lda #$60               ; RTS instruction
003F73  2  8D 60 31     	sta L303B              ; Musicroutine
003F76  2               	
003F76  2  A9 9F        	lda #$9F               ; Set tone
003F78  2  4C 9A 31     	jmp L3075              ; Sound output
003F7B  2               
003F7B  2               ; Soundflag
003F7B  2               
003F7B  2  EA           L62F3:      .byte $EA		; Soundflag
003F7C  2               
003F7C  2               ; Reset music pointer and play sound
003F7C  2               
003F7C  2  A9 00        L62F4:      lda #$00               ; Reset music pointer
003F7E  2  8D 9C 31                 sta L3098              ; 8D 98 30
003F81  2               
003F81  2  AD 7B 3F                 lda L62F3              ; Check soundflag
003F84  2  C9 00                    cmp #$00               ; C9 00
003F86  2  F0 E9                    beq L62E9              ; Stop music
003F88  2               
003F88  2  4C 6B 3F                 jmp L62E3              ; Start music
003F8B  2               
003F8B  2               ;--------------------------------------------
003F8B  2               ; Entry Function key pressed cheatmode
003F8B  2               ;
003F8B  2               ; F0 = goto level  1 ; SHIFT-F0 = goto level 11
003F8B  2               ; F1 = goto level  2 ; SHIFT-F1 = goto level 12
003F8B  2               ; F2 = goto level  3 ; SHIFT-F2 = goto level 13
003F8B  2               ; F3 = goto level  4 ; SHIFT-F3 = goto level 14
003F8B  2               ; F4 = goto level  5 ; SHIFT-F4 = goto level 15
003F8B  2               ; F5 = goto level  6 ; SHIFT-F5 = goto level 16
003F8B  2               ; F6 = goto level  7 ; SHIFT-F6 = goto level 17
003F8B  2               ; F7 = goto level  8 ; SHIFT-F7 = goto level 18
003F8B  2               ; F8 = goto level  9 ; SHIFT-F8 = goto level 1
003F8B  2               ; F9 = goto level 10 ; SHIFT-F9 = goto level 1
003F8B  2               ;--------------------------------------------
003F8B  2               
003F8B  2               L6303:
003F8B  2  2C 01 B0     	bit $b001		; Read key
003F8E  2  10 1C                    bpl L6327              ; SHIFT key pressed
003F90  2  50 03        	bvc L6310		; CTRL key pressed
003F92  2  4C 5A 3E     	jmp L6208		; wrong key
003F95  2               
003F95  2  AD E1 3F     L6310:      lda L635C              ; AD 5C 63
003F98  2  CD E2 3F                 cmp L635D              ; CD 5D 63
003F9B  2  F0 0C                    beq L6324              ; F0 0C
003F9D  2  8D E2 3F                 sta L635D              ; 8D 5D 63
003FA0  2  18                       clc                    ; 18
003FA1  2  69 01                    adc #$01               ; 69 01
003FA3  2  20 FD 3E                 jsr L62C3              ; Buildscreen
003FA6  2  4C 5A 3E                 jmp L6208              ; 4C 08 62
003FA9  2               
003FA9  2  4C 5A 3E     L6324:      jmp L6208              ; 4C 08 62
003FAC  2               
003FAC  2               ; Entry SHIFT-Fx key pressed, add 10 to level
003FAC  2               
003FAC  2  AD E1 3F     L6327:      lda L635C              ; AD 5C 63
003FAF  2  18                       clc                    ; 18
003FB0  2  69 0A                    adc #$0A               ; 69 0A
003FB2  2  8D E1 3F                 sta L635C              ; 8D 5C 63
003FB5  2  4C 95 3F                 jmp L6310              ; 4C 10 63
003FB8  2               
003FB8  2               ;--------------------------------------------
003FB8  2               ; Check levelnr
003FB8  2               ;--------------------------------------------
003FB8  2               
003FB8  2  85 80        L6333:      sta L0080              ; Set current level
003FBA  2               
003FBA  2  8D E2 3F                 sta L635D              ; Set temp level
003FBD  2  CE E2 3F                 dec L635D              ; Decrement temp level
003FC0  2               
003FC0  2  AD D5 47                 lda L6B7F              ; Check cheatmode
003FC3  2  C9 00                    cmp #$00               ; C9 00
003FC5  2  F0 0F                    beq L6351              ; F0 0F
003FC7  2               
003FC7  2               .if debug=0
003FC7  2  A5 80                    lda L0080              ; Get level
003FC9  2  C9 13                    cmp #$13               ; Check max level
003FCB  2  90 09                    bcc L6351              ; If not reached, skip
003FCD  2  A9 01                    lda #$01               ; Reset current level
003FCF  2  85 80                    sta L0080              ; 85 80
003FD1  2  A9 00                    lda #$00               ; A9 00
003FD3  2               .endif
003FD3  2  EA                       nop                    ; EA
003FD4  2  EA                       nop                    ; EA
003FD5  2  EA                       nop                    ; EA
003FD6  2  60           L6351:      rts                    ; 60
003FD7  2               
003FD7  2               ;--------------------------------------------
003FD7  2               ; Keys to be scanned
003FD7  2               ;--------------------------------------------
003FD7  2               
003FD7  2               L6352:
003FD7  2               ;            .byte $DF	; F0 key
003FD7  2               ;            .byte $8E	; F1 key
003FD7  2               ;            .byte $8D	; F2 key
003FD7  2               ;            .byte $8C	; F3 key
003FD7  2               ;            .byte $EB	; F4 key
003FD7  2               ;            .byte $8B	; F5 key
003FD7  2               ;            .byte $8A	; F6 key
003FD7  2               ;            .byte $E9	; F7 key
003FD7  2               ;            .byte $89	; F8 key
003FD7  2               ;            .byte $88	; F9 key
003FD7  2               
003FD7  2               ; Keys 1,2,3,4,5,6,7,8,9,0
003FD7  2               
003FD7  2  11 12 13 14  	.byte $11,$12,$13,$14,$15,$16,$17,$18,$19,$10
003FDB  2  15 16 17 18  
003FDF  2  19 10        
003FE1  2               
003FE1  2               ; Read key pointer
003FE1  2               
003FE1  2  EA           L635C:      .byte $EA
003FE2  2               
003FE2  2               ;--------------------------------------------
003FE2  2               
003FE2  2  EA           L635D:      .byte $EA
003FE3  2               
003FE3  2               ;            ldx #$00               ; A2 00
003FE3  2               ;            ldy #$0A               ; A0 0A
003FE3  2               ;L6362:      lda L4000,X            ; BD 00 40
003FE3  2               ;L6365:      sta L0F00,X            ; 9D 00 0F
003FE3  2               ;            inx                    ; E8
003FE3  2               ;            bne L6362              ; D0 F7
003FE3  2               ;            inc L6364              ; EE 64 63
003FE3  2               ;            inc L6367              ; EE 67 63
003FE3  2               ;            dey                    ; 88
003FE3  2               ;            bne L6362              ; D0 EE
003FE3  2               ;
003FE3  2               ;            ldx #$00               ; A2 00
003FE3  2               ;L6376:      lda L4A00,X            ; BD 00 4A
003FE3  2               ;            sta L1900,X            ; 9D 00 19
003FE3  2               ;            inx                    ; E8
003FE3  2               ;            cpx #$80               ; E0 80
003FE3  2               ;            bne L6376              ; D0 F5
003FE3  2               ;
003FE3  2               ;            ldx #$00               ; A2 00
003FE3  2               ;L6383:      lda L5000,X            ; BD 00 50
003FE3  2               ;            sta L0D40,X            ; 9D 40 0D
003FE3  2               ;            inx                    ; E8
003FE3  2               ;            cpx #$40               ; E0 40
003FE3  2               ;            bne L6383              ; D0 F5
003FE3  2               ;
003FE3  2               ;            jmp L24F8              ; Jump L0090
003FE3  2               
003FE3  2  A2 00        L6391:      ldx #$00               ; A2 00
003FE5  2  BD C8 38     L6393:      lda ext_font,X            ; BD 00 0C
003FE8  2  9D 98 39                 sta ext_font+$D0,X            ; 9D D0 0C
003FEB  2  BD 40 39                 lda ext_font+$78,X            ; BD 78 0C
003FEE  2  9D 80 39                 sta ext_font+$B8,X            ; 9D B8 0C
003FF1  2  BD D0 38                 lda ext_font+$08,X            ; BD 08 0C
003FF4  2  9D B0 39                 sta ext_font+$E8,X            ; 9D E8 0C
003FF7  2  E8                       inx                    ; E8
003FF8  2  E0 08                    cpx #$08               ; E0 08
003FFA  2  D0 E9                    bne L6393              ; D0 E9
003FFC  2               
003FFC  2  A9 00                    lda #$00               ; A9 00
003FFE  2  8D 9E 39                 sta ext_font+$D6              ; 8D D6 0C
004001  2  8D 86 39                 sta ext_font+$BE              ; 8D BE 0C
004004  2  8D B6 39                 sta ext_font+$EE              ; 8D EE 0C
004007  2  A9 FF                    lda #$FF               ; A9 FF
004009  2  8D 9F 39                 sta ext_font+$D7              ; 8D D7 0C
00400C  2  8D 87 39                 sta ext_font+$BF              ; 8D BF 0C
00400F  2  8D B7 39                 sta ext_font+$EF              ; 8D EF 0C
004012  2               
004012  2  A5 70                    lda L0070              ; A5 70
004014  2  38           	sec
004015  2  E9 04        	sbc #4
004017  2  8D 03 28                 sta L25FE              ; XPOS Exit
00401A  2  A5 71                    lda L0071              ; A5 71
00401C  2  8D 04 28                 sta L25FF              ; YPOS Exit
00401F  2               
00401F  2  A9 4C                    lda #$4C               ; JMP instruction
004021  2  8D 1F 1A                 sta L19EB              ; 8D EB 19
004024  2               
004024  2  A9 FF                    lda #$FF               ; A9 F0
004026  2  8D D3 19                 sta L199F              ; 8D 9F 19
004029  2  A9 10                    lda #$10               ; A9 10
00402B  2  8D 04 43                 sta L66DC              ; 8D DC 66
00402E  2               
00402E  2  A9 A9                    lda #$A9               ; LDA instruction
004030  2  8D 22 1A                 sta L19EE              ; 8D EE 19
004033  2               
004033  2  A9 00                    lda #$00               ; A9 00
004035  2  8D B3 19                 sta L197F              ; Monster falling flag
004038  2  8D CC 18                 sta L184B              ; Miner jump flag
00403B  2                
00403B  2  A9 27                    lda #$27               ; A9 27
00403D  2  8D C3 18                 sta L1842              ; 8D 42 18
004040  2               
004040  2  A9 06                    lda #$06               ; Direction left
004042  2  8D C1 18                 sta L1840              ; 8D 40 18
004045  2               
004045  2               ; Set X and Y coordinate Miner
004045  2               ; High nibble is X
004045  2               ; Low nibble is Y
004045  2               
004045  2  A6 80                    ldx L0080              ; Get level nr
004047  2  BD DD 47                 lda L6B87,X            ; Get coordinates
00404A  2  AA                       tax                    ; Save coordinates
00404B  2               
00404B  2  29 F0                    and #$F0               ; Filter X-pos
00404D  2  4A                       lsr A                  ; Divide by 2
00404E  2  18                       clc                    ; 18
00404F  2  69 17                    adc #$17               ; Add 23
004051  2  8D BB 18                 sta L183A              ; X-coordinaat Miner in pixels old
004054  2  8D BD 18                 sta L183C              ; X-coordinaat Miner in pixels new
004057  2               
004057  2  8A                       txa                    ; Get coordinates
004058  2  29 0F                    and #$0F               ; Filter Y-pos
00405A  2  0A                       asl A                  ; 0A
00405B  2  0A                       asl A                  ; 0A
00405C  2  0A                       asl A                  ; Multiply by 8
00405D  2  38           	sec
00405E  2  E9 02        	sbc #2
004060  2  8D BC 18                 sta L183B              ; Y-coordinaat Miner in pixels old
004063  2  8D BE 18                 sta L183D              ; Y-coordinaat Miner in pixels new
004066  2  8D D1 47                 sta L6B7B              ; Set Y-pos
004069  2               
004069  2  AE BB 18                 ldx L183A              ; X-coordinaat Miner in pixels old
00406C  2  E0 40                    cpx #$40               ; E0 40
00406E  2  90 2C                    bcc L6444              ; 90 2C
004070  2               
004070  2  A9 03                    lda #$03               ; A9 03
004072  2  8D C0 18     L641A:      sta L183F              ; Miner sprite nr
004075  2  AC BC 18                 ldy L183B              ; Y-coordinaat Miner in pixels old
004078  2  A9 01                    lda #$01               ; A9 01
00407A  2  20 EA 18                 jsr L1869              ; 20 69 18
00407D  2  AD C1 18                 lda L1840              ; AD 40 18
004080  2  8D C4 18                 sta L1843              ; 8D 43 18
004083  2  AD AE 27                 lda L25A4              ; AD A4 25
004086  2  29 80                    and #$80               ; 29 80
004088  2  C9 80                    cmp #$80               ; C9 80
00408A  2  F0 08                    beq L643C              ; F0 08
00408C  2  A9 FF                    lda #$FF               ; A9 FF
00408E  2  8D D5 18                 sta L1854              ; 8D 54 18
004091  2  4C E7 30                 jmp L2FC2              ; 4C C2 2F
004094  2               
004094  2  A9 01        L643C:      lda #$01               ; A9 01
004096  2  8D D5 18                 sta L1854              ; 8D 54 18
004099  2  4C E7 30                 jmp L2FC2              ; 4C C2 2F
00409C  2               
00409C  2  A9 E7        L6444:      lda #$E7               ; A9 E7
00409E  2  8D C3 18                 sta L1842              ; 8D 42 18
0040A1  2  A9 05                    lda #$05               ; A9 05
0040A3  2  8D C1 18                 sta L1840              ; 8D 40 18
0040A6  2  A9 00                    lda #$00               ; A9 00
0040A8  2  4C 72 40                 jmp L641A              ; 4C 1A 64
0040AB  2               
0040AB  2               ;--------------------------------------------
0040AB  2               ; Jump to next level
0040AB  2               ;--------------------------------------------
0040AB  2               
0040AB  2  AD D5 47     L6453:      lda L6B7F              ; Check cheatmode
0040AE  2  C9 01                    cmp #$01               ; C9 01
0040B0  2  F0 08                    beq L6462              ; F0 08
0040B2  2               
0040B2  2  A5 80                    lda L0080              ; Get levelnr
0040B4  2  C9 14                    cmp #$14               ; 
0040B6  2  F0 0A                    beq L646A              ; If last level jump
0040B8  2  E6 80                    inc L0080              ; If not, next level
0040BA  2               
0040BA  2  A5 80        L6462:      lda L0080              ; A5 80
0040BC  2  20 FD 3E                 jsr L62C3              ; Buildscreen
0040BF  2  4C 5A 3E                 jmp L6208              ; Continue game
0040C2  2               
0040C2  2  4C 52 3E     L646A:      jmp L6200              ; Start at level 1
0040C5  2               
0040C5  2               ;--------------------------------------------
0040C5  2               
0040C5  2               L646D:
0040C5  2  20 6A 42     	jsr L6639              ; 20 39 66
0040C8  2               
0040C8  2  AD 24 31                 lda L2FFF              ; Nr of keys
0040CB  2  C9 00                    cmp #$00               ; C9 00
0040CD  2  F0 01                    beq L6478              ; F0 01
0040CF  2  60                       rts                    ; 60
0040D0  2               
0040D0  2               L6478:
0040D0  2  A9 1E        	lda #$22-4               ; A9 22
0040D2  2  8D 18 03     	sta XPOS
0040D5  2  A9 17        	lda #$17               ; A9 17
0040D7  2  8D 19 03     	sta YPOS
0040DA  2  20 1B 15                 jsr L14A7              ; 20 A7 14
0040DD  2               
0040DD  2  A5 80                    lda L0080              ; A5 80
0040DF  2  C9 05                    cmp #$05               ; C9 05
0040E1  2  D0 10                    bne L64A0              ; D0 10
0040E3  2  AD 7C 1C                 lda L1C48              ; AD 48 1C
0040E6  2  09 80                    ora #$80               ; 09 80
0040E8  2  8D 7C 1C                 sta L1C48              ; 8D 48 1C
0040EB  2  A9 60                    lda #$60               ; A9 60
0040ED  2  8D 1F 1A                 sta L19EB              ; 8D EB 19
0040F0  2  20 75 46                 jsr L6A31              ; 20 31 6A
0040F3  2  AD BD 18     L64A0:      lda L183C              ; X-coordinaat Miner in pixels new
0040F6  2  4A                       lsr A                  ; 4A
0040F7  2  4A                       lsr A                  ; 4A
0040F8  2  38           	sec
0040F9  2  E9 04        	sbc #4
0040FB  2  CD 03 28                 cmp L25FE              ; XPOS Exit
0040FE  2  D0 14                    bne L64BE              ; D0 14
004100  2  AD BE 18                 lda L183D              ; Y-coordinaat Miner in pixels new
004103  2  38                       sec                    ; 38
004104  2  E9 00                    sbc #$00               ; E9 00
004106  2  4A                       lsr A                  ; 4A
004107  2  4A                       lsr A                  ; 4A
004108  2  4A                       lsr A                  ; 4A
004109  2  18                       clc                    ; 18
00410A  2  69 02                    adc #$02               ; 69 02
00410C  2  CD 04 28                 cmp L25FF              ; YPOS Exit
00410F  2  D0 03                    bne L64BE              ; D0 03
004111  2  4C 7F 41                 jmp L651F              ; 4C 1F 65
004114  2               
004114  2  A5 80        L64BE:      lda L0080              ; A5 80
004116  2  C9 06                    cmp #$06               ; C9 06
004118  2  D0 11                    bne L64D5              ; D0 11
00411A  2               
00411A  2  AD BB 18                 lda L183A              ; X-coordinaat Miner in pixels old
00411D  2  C9 82                    cmp #$82               ; C9 82
00411F  2  D0 0A                    bne L64D5              ; D0 0A
004121  2               
004121  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
004124  2  C9 0D                    cmp #$0D               ; C9 0D
004126  2  D0 03                    bne L64D5              ; D0 03
004128  2               
004128  2  4C 7F 41                 jmp L651F              ; 4C 1F 65
00412B  2               
00412B  2  EE 77 41     L64D5:      inc L6517              ; EE 17 65
00412E  2  AD 77 41                 lda L6517              ; AD 17 65
004131  2  29 03                    and #$03               ; 29 03
004133  2  C9 00                    cmp #$00               ; C9 00
004135  2  F0 01                    beq L64E2              ; F0 01
004137  2  60                       rts                    ; 60
004138  2               
004138  2               L64E2:
004138  2  AD 6F 11     	lda L109B
00413B  2               ;VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV
00413B  2               
00413B  2  8D 75 41     	sta tmp_cnt
00413E  2  AD 76 41                 lda L6516               ; Set textcolour=?
004141  2  49 FF        	eor #$FF
004143  2  8D 76 41     	sta L6516
004146  2               
004146  2  8D 6F 11     	sta L109B
004149  2               ;            jsr OSWRCH             ; 20 EE FF
004149  2  AD 77 41                 lda L6517              ; AD 17 65
00414C  2  29 04                    and #$04               ; 29 04
00414E  2  C9 04                    cmp #$04               ; C9 04
004150  2  F0 26                    beq L6518              ; F0 28
004152  2               
004152  2               ;            lda #$02               ; A9 02
004152  2               L64F2:
004152  2               ;        jsr OSWRCH             ; 20 EE FF
004152  2               
004152  2  AD 03 28     	lda L25FE              ; XPOS Exit
004155  2  8D 18 03     	sta XPOS
004158  2  AD 04 28     	lda L25FF              ; YPOS Exit
00415B  2  38           	sec                    ; 38
00415C  2  E9 02        	sbc #$02               ; E9 02
00415E  2  8D 19 03     	sta YPOS
004161  2               
004161  2  A2 00                    ldx #$00               ; A2 00
004163  2  BD C4 41     L650B:      lda L6564,X            ; BD 64 65
004166  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
004169  2  E8                       inx                    ; E8
00416A  2  E0 07                    cpx #$07               ; E0 07
00416C  2  D0 F5                    bne L650B              ; D0 F5
00416E  2               
00416E  2  AD 75 41     	lda tmp_cnt
004171  2  8D 6F 11     	sta L109B
004174  2  60                       rts                    ; 60
004175  2               
004175  2  00           tmp_cnt:	.byte 0
004176  2               
004176  2               ;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
004176  2               
004176  2  FF           L6516:	.byte $ff
004177  2  EA           L6517:      .byte $EA
004178  2               
004178  2  A9 03        L6518:      lda #$03               ; A9 03
00417A  2  4C 52 41                 jmp L64F2              ; 4C F2 64
00417D  2               
00417D  2  00           L651D:      .byte $00		; Lb miner screen address
00417E  2  05           L651E:      .byte $05		; Hb miner screen address
00417F  2               
00417F  2               L651F:
00417F  2  A9 4C                    lda #$4C               ; A9 4C
004181  2  8D C7 14                 sta L145D              ; 8D 5D 14
004184  2  20 8D 14                 jsr L1423              ; 20 23 14
004187  2  A9 20                    lda #$20               ; A9 20
004189  2  8D C7 14                 sta L145D              ; 8D 5D 14
00418C  2  20 71 3F                 jsr L62E9              ; Stop music
00418F  2  A9 00                    lda #$00               ; A9 00
004191  2  8D E1 3F                 sta L635C              ; 8D 5C 63
004194  2  AD D4 47     L6534:      lda L6B7E              ; Air level
004197  2  4A                       lsr A                  ; 4A
004198  2  18                       clc                    ; 18
004199  2  69 01                    adc #$01               ; 69 01
00419B  2  49 3F                    eor #$3F               ; 49 3F
00419D  2  8D 9D 31                 sta L3099              ; 8D 99 30
0041A0  2  20 6A 42                 jsr L6639              ; 20 39 66
0041A3  2  EE E1 3F                 inc L635C              ; EE 5C 63
0041A6  2  AD E1 3F                 lda L635C              ; AD 5C 63
0041A9  2  29 03                    and #$03               ; 29 03
0041AB  2  C9 00                    cmp #$00               ; C9 00
0041AD  2  F0 0D                    beq L655C              ; F0 0D
0041AF  2               
0041AF  2  AD D4 47     L654F:      lda L6B7E              ; Air level
0041B2  2  C9 00                    cmp #$00               ; C9 00
0041B4  2  D0 DE                    bne L6534              ; D0 DE
0041B6  2  20 7C 3F                 jsr L62F4              ; Reset music pointer and play sound
0041B9  2  4C AB 40                 jmp L6453              ; Increment level
0041BC  2               
0041BC  2  A9 05        L655C:      lda #$05               ; A9 05
0041BE  2  20 5D 43                 jsr L673C              ; 20 3C 67
0041C1  2  4C AF 41                 jmp L654F              ; 4C 4F 65
0041C4  2               
0041C4  2               ;------------------------------------------------
0041C4  2               ; Exit shape
0041C4  2               
0041C4  2  91 92 0A 08  L6564:      .byte $91,$92,$0A,$08,$08,$93,$94
0041C8  2  08 93 94     
0041CB  2               
0041CB  2               ;------------------------------------------------
0041CB  2               
0041CB  2  41 49 52     L656B:      .byte "AIR"
0041CE  2               
0041CE  2               ;------------------------------------------------
0041CE  2               ; Draw air gauge
0041CE  2               ;------------------------------------------------
0041CE  2               
0041CE  2               L6577:
0041CE  2  A9 67        	lda #$67		; Set gauge Air level to max
0041D0  2  8D D4 47     	sta L6B7E
0041D3  2               
0041D3  2  A9 00        	lda #0			; Reset gauge pointer
0041D5  2  8D B4 42     	sta airgauge_pos
0041D8  2               
0041D8  2  20 86 46     	jsr L6A42		; Print score, lives + levelnr 
0041DB  2  20 34 2E     	jsr L2CA2		; 20 A2 2C
0041DE  2               
0041DE  2               ; Print 'AIR'
0041DE  2               
0041DE  2  A9 16        	lda #22
0041E0  2  8D 18 03     	sta XPOS
0041E3  2  A9 15        	lda #21
0041E5  2  8D 19 03     	sta YPOS
0041E8  2               
0041E8  2  A2 00        	ldx #$00
0041EA  2               L658E:
0041EA  2  BD CB 41     	lda L656B,X
0041ED  2  20 10 3A     	jsr OSWRCH
0041F0  2  E8           	inx
0041F1  2  E0 03        	cpx #$03
0041F3  2  D0 F5        	bne L658E
0041F5  2               
0041F5  2               ; Draw white bar
0041F5  2               
0041F5  2  A9 94        	lda #>$94e7
0041F7  2  8D 0D 42     	sta L6590+2
0041FA  2  8D 12 42     	sta L6591+2
0041FD  2  A9 E7        	lda #<$94e7
0041FF  2  8D 0C 42     	sta L6590+1
004202  2  8D 11 42     	sta L6591+1
004205  2               
004205  2  A0 09        	ldy #9
004207  2               L658F:
004207  2  A9 FF        	lda #$ff
004209  2  A2 11        	ldx #17
00420B  2               L6590:
00420B  2  BD 07 95     	lda $9507,x
00420E  2  49 FF        	eor #$ff
004210  2               L6591:
004210  2  9D 07 95     	sta $9507,x
004213  2  CA           	dex
004214  2  10 F5        	bpl L6590
004216  2               
004216  2  18           	clc
004217  2  AD 0C 42     	lda L6590+1
00421A  2  69 20        	adc #$20
00421C  2  8D 0C 42     	sta L6590+1
00421F  2  AD 0D 42     	lda L6590+2
004222  2  69 00        	adc #0
004224  2  8D 0D 42     	sta L6590+2
004227  2               
004227  2  8D 12 42     	sta L6591+2
00422A  2  AD 0C 42     	lda L6590+1
00422D  2  8D 11 42     	sta L6591+1
004230  2               
004230  2  88           	dey
004231  2  D0 D4        	bne L658F
004233  2               
004233  2  A9 00                    lda #$00               ; A9 00
004235  2  8D B2 42                 sta L6693              ; 8D 93 66
004238  2               
004238  2               ; Fillup air gauge
004238  2               
004238  2  A2 0C        	ldx #12
00423A  2  A9 00        	lda #0
00423C  2               L661B:
00423C  2  9D 08 95     	sta $9508,x
00423F  2  9D 28 95     	sta $9528,x
004242  2  9D 48 95     	sta $9548,x
004245  2  9D 68 95     	sta $9568,x
004248  2  9D 88 95     	sta $9588,x
00424B  2  9D A8 95     	sta $95a8,x
00424E  2  9D C8 95     	sta $95c8,x
004251  2  CA           	dex
004252  2  10 E8        	bpl L661B
004254  2               
004254  2               ;            lda #$F0               ; A9 F0
004254  2               ;            sta L32A0              ; 8D A0 32
004254  2               ;            sta L32A8              ; 8D A8 32
004254  2               
004254  2  A9 95                    lda #>$9507               ; A9 32
004256  2  8D 61 42                 sta L661E              ; hb
004259  2               
004259  2  A9 07                    lda #<$9507               ; A9 A0
00425B  2  8D 60 42                 sta L661D              ; lb
00425E  2               
00425E  2  60                       rts                    ; 60
00425F  2               
00425F  2  9D FF FF     L661C:      sta LFFFF,X            ; 9D FF FF
004262  2  60                       rts                    ; 60
004263  2               
004263  2               ; Point 8 lines below
004263  2               ;
004263  2               ;L6620:
004263  2               ;	lda L661D
004263  2               ;	clc
004263  2               ;	adc #$20
004263  2               ;	sta L661D
004263  2               ;	lda L661E
004263  2               ;	adc #0
004263  2               ;	sta L661E
004263  2               ;	rts
004263  2               
004263  2               L6632:
004263  2  EA           	.byte $EA
004264  2               
004264  2               ;--------------------------------------------
004264  2               ;Entry 6639 for demo mode
004264  2               ;--------------------------------------------
004264  2               
004264  2               L6633:
004264  2  20 BD 42     	jsr L6695
004267  2  4C 71 42     	jmp L6640
00426A  2               
00426A  2               ; Entry for demo mode
00426A  2               
00426A  2               L6639:
00426A  2  AD B3 19     	lda L197F		; Monster falling flag
00426D  2  C9 01        	cmp #$01
00426F  2               
00426F  2  F0 F3        	beq L6633
004271  2               
004271  2               L6640:
004271  2  EE B3 42     	inc L6694
004274  2  AD B3 42     	lda L6694
004277  2  29 0F        	and #$0F
004279  2  C9 00        	cmp #$00
00427B  2  F0 01        	beq L664D
00427D  2               
00427D  2  60           	rts
00427E  2               
00427E  2               ;--------------------------------------------
00427E  2               ; Decrement and draw airgauge in game
00427E  2               ;--------------------------------------------
00427E  2               
00427E  2               L664D:
00427E  2  CE D4 47     	dec L6B7E		; Air level
004281  2               
004281  2  EE B2 42     	inc L6693		; Adjust gauge pointer
004284  2  AD B2 42     	lda L6693
004287  2  29 07        	and #$07
004289  2  C9 00        	cmp #$00
00428B  2  F0 1D        	beq L6683
00428D  2               
00428D  2               ; Draw left end air gauge
00428D  2               
00428D  2               L665C:
00428D  2  A8           	tay
00428E  2  AE B4 42     	ldx airgauge_pos
004291  2  B9 B5 42     	lda airgauge_chr,y
004294  2  9D 08 95     	sta $9508,x
004297  2  9D 28 95     	sta $9528,x
00429A  2  9D 48 95     	sta $9548,x
00429D  2  9D 68 95     	sta $9568,x
0042A0  2  9D 88 95     	sta $9588,x
0042A3  2  9D A8 95     	sta $95a8,x
0042A6  2  9D C8 95     	sta $95c8,x
0042A9  2               
0042A9  2  60           	rts
0042AA  2               L6683:
0042AA  2  EE B4 42     	inc airgauge_pos
0042AD  2  A9 00        	lda #0
0042AF  2  4C 8D 42     	jmp L665C		; Return
0042B2  2               
0042B2  2  EA           L6693:		.byte $EA
0042B3  2  EA           L6694:		.byte $EA
0042B4  2               
0042B4  2  00           airgauge_pos:	.byte 0
0042B5  2  80 C0 E0 F0  airgauge_chr:	.byte $80,$c0,$e0,$f0,$f8,$fc,$fe,$ff
0042B9  2  F8 FC FE FF  
0042BD  2               
0042BD  2               ;--------------------------------------------
0042BD  2               ;
0042BD  2               ;--------------------------------------------
0042BD  2               
0042BD  2  AD 04 43     L6695:      lda L66DC              ; AD DC 66
0042C0  2  C9 70                    cmp #$70               ; C9 70
0042C2  2  B0 38                    bcs L66D4              ; B0 38
0042C4  2               
0042C4  2  C9 10                    cmp #$10               ; C9 10
0042C6  2  F0 3D                    beq L66DD              ; F0 3D
0042C8  2  29 04                    and #$04               ; 29 04
0042CA  2               
0042CA  2  C9 04                    cmp #$04               ; C9 04
0042CC  2  F0 17                    beq L66BD              ; F0 17
0042CE  2  20 50 43                 jsr L672F              ; 20 2F 67
0042D1  2  20 11 43                 jsr L66E9              ; 20 E9 66
0042D4  2               
0042D4  2  AD 04 43                 lda L66DC              ; AD DC 66
0042D7  2  18                       clc                    ; 18
0042D8  2  69 04                    adc #$04               ; 69 04
0042DA  2  8D 04 43                 sta L66DC              ; 8D DC 66
0042DD  2               
0042DD  2  A2 00                    ldx #$00               ; A2 00
0042DF  2  20 20 43                 jsr L66F8              ; 20 F8 66
0042E2  2               
0042E2  2  4C 4D 43                 jmp L6725              ; 4C 25 67
0042E5  2               
0042E5  2  20 50 43     L66BD:      jsr L672F              ; 20 2F 67
0042E8  2  20 20 43                 jsr L66F8              ; 20 F8 66
0042EB  2               
0042EB  2  AD 04 43                 lda L66DC              ; AD DC 66
0042EE  2  18                       clc                    ; 18
0042EF  2  69 04                    adc #$04               ; 69 04
0042F1  2  8D 04 43                 sta L66DC              ; 8D DC 66
0042F4  2               
0042F4  2  A2 00                    ldx #$00               ; A2 00
0042F6  2  20 11 43                 jsr L66E9              ; 20 E9 66
0042F9  2  4C 4D 43                 jmp L6725              ; 4C 25 67
0042FC  2               
0042FC  2  A9 00        L66D4:      lda #$00               ; A9 00
0042FE  2  8D B3 19                 sta L197F              ; Monster falling flag
004301  2               
004301  2  4C 4D 43                 jmp L6725              ; 4C 25 67
004304  2               
004304  2  EA           L66DC:      .byte $EA
004305  2               
004305  2  AD 04 43     L66DD:      lda L66DC              ; AD DC 66
004308  2  18                       clc                    ; 18
004309  2  69 04                    adc #$04               ; 69 04
00430B  2  8D 04 43                 sta L66DC              ; 8D DC 66
00430E  2  4C 20 43                 jmp L66F8              ; 4C F8 66
004311  2               
004311  2  E0 01        L66E9:      cpx #$01               ; E0 01
004313  2  F0 29                    beq L6716              ; F0 29
004315  2  A9 40                    lda #<L0480               ; A9 80
004317  2  85 77                    sta L0077              ; 85 77
004319  2  A9 04                    lda #>L0480               ; A9 04
00431B  2  85 78                    sta L0078              ; 85 78
00431D  2  4C 2F 43                 jmp L6707              ; 4C 07 67
004320  2               
004320  2  E0 01        L66F8:      cpx #$01               ; E0 01
004322  2  F0 1A                    beq L6716              ; F0 1A
004324  2  A9 60                    lda #<L04C0               ; A9 C0
004326  2  85 77                    sta L0077              ; 85 77
004328  2  A9 04                    lda #>L04C0               ; A9 04
00432A  2  85 78                    sta L0078              ; 85 78
00432C  2  4C 2F 43                 jmp L6707              ; 4C 07 67
00432F  2               
00432F  2  A9 39        L6707:      lda #$39               ; A9 39
004331  2  20 5D 43                 jsr L673C              ; 20 3C 67
004334  2  A2 4E                    ldx #$4E               ; A2 4E
004336  2  AC 04 43                 ldy L66DC              ; AC DC 66
004339  2  A9 0A                    lda #$0A               ; A9 0A
00433B  2  4C 00 10                 jmp L0F00              ; Plot sprite
00433E  2               
00433E  2  A9 69        L6716:      lda #$69               ; A9 69
004340  2  20 5D 43                 jsr L673C              ; 20 3C 67
004343  2  A2 4E                    ldx #$4E               ; A2 4E
004345  2  AC 04 43                 ldy L66DC              ; AC DC 66
004348  2  A9 02                    lda #$02               ; A9 02
00434A  2  4C 00 10                 jmp L0F00              ; Plot sprite
00434D  2               
00434D  2               L6725:
00434D  2               ;            lda #$11               ; Set textcolour to colour2
00434D  2               ;            jsr OSWRCH             ; 20 EE FF
00434D  2               ;            lda #$02               ; A9 02
00434D  2  4C 52 41                 jmp L64F2              ; 4C F2 64
004350  2               
004350  2  AD 04 43     L672F:      lda L66DC              ; AD DC 66
004353  2  C9 60                    cmp #$60               ; C9 60
004355  2  B0 03                    bcs L6739              ; B0 03
004357  2  A2 00                    ldx #$00               ; A2 00
004359  2  60                       rts                    ; 60
00435A  2               
00435A  2  A2 01        L6739:      ldx #$01               ; A2 01
00435C  2  60                       rts                    ; 60
00435D  2               
00435D  2               ;--------------------------------------------
00435D  2               
00435D  2  C9 63        L673C:      cmp #$63               ; C9 63
00435F  2  F0 7F                    beq L67BF              ; Key hit, add 100 to score
004361  2               
004361  2               ;--------------------------------------------
004361  2               ; Increment score with A + print score
004361  2               ;--------------------------------------------
004361  2               
004361  2  18           L6740:      clc                    ; 18
004362  2  69 01                    adc #$01               ; 69 01
004364  2  F8                       sed                    ; F8
004365  2  18                       clc                    ; 18
004366  2  6D DB 43                 adc L67BA              ; 6D BA 67
004369  2  8D DB 43                 sta L67BA              ; 8D BA 67
00436C  2  AD DC 43                 lda L67BB              ; AD BB 67
00436F  2  69 00                    adc #$00               ; 69 00
004371  2  8D DC 43                 sta L67BB              ; 8D BB 67
004374  2  AD DD 43                 lda L67BC              ; AD BC 67
004377  2  B0 28                    bcs L678F              ; B0 37
004379  2               
004379  2  D8           L6758:      cld                    ; D8
00437A  2               
00437A  2  A9 06        	lda #6               ; A9 0A
00437C  2  8D 18 03     	sta XPOS
00437F  2  A9 13        	lda #$13               ; A9 13
004381  2  8D 19 03     	sta YPOS
004384  2               
004384  2  A2 02                    ldx #$02               ; Print score in 6 digits
004386  2  BD DB 43     L6774:      lda L67BA,X            ; BD BA 67
004389  2  20 C5 43                 jsr L67A4              ; Print 2 digits
00438C  2  CA                       dex                    ; CA
00438D  2  E0 FF                    cpx #$FF               ; E0 FF
00438F  2  D0 F5                    bne L6774              ; D0 F5
004391  2               
004391  2  A9 09                    lda #$09               ; Skip 9 characters
004393  2  A2 08                    ldx #$08               ; A2 08
004395  2  20 10 3A     L6783:      jsr OSWRCH             ; 20 EE FF
004398  2  CA                       dex                    ; CA
004399  2  D0 FA                    bne L6783              ; D0 FA
00439B  2               
00439B  2  AD DF 43                 lda L67BE              ; Get lives
00439E  2  4C C5 43                 jmp L67A4              ; Print 2 digits
0043A1  2               
0043A1  2  69 00        L678F:      adc #$00               ; 69 00
0043A3  2  8D DD 43                 sta L67BC              ; 8D BC 67
0043A6  2  D8                       cld                    ; D8
0043A7  2               ; Make sound
0043A7  2               
0043A7  2  A9 05        	lda #5
0043A9  2  8D 4D 32     	sta tmp_note
0043AC  2               bonus_loop:
0043AC  2  A9 40        	lda #$40
0043AE  2  A0 20        	ldy #$20
0043B0  2  20 B1 34     	jsr sound
0043B3  2  A9 20        	lda #$20
0043B5  2  A0 40        	ldy #$40
0043B7  2  20 B1 34     	jsr sound
0043BA  2  CE 4D 32     	dec tmp_note
0043BD  2  D0 ED        	bne bonus_loop
0043BF  2               
0043BF  2               ;            lda #$04               ; A9 03
0043BF  2               ;            ldx #$64               ; A2 64
0043BF  2               ;            ldy #$04               ; A0 04
0043BF  2               ;            jsr L68AC              ; Make sound
0043BF  2               
0043BF  2  EE DF 43                 inc L67BE              ; Add 1 to lives
0043C2  2  4C 79 43                 jmp L6758              ; 4C 58 67
0043C5  2               
0043C5  2               ;-------------------------------------------
0043C5  2               ; Print byte as 2 digits
0043C5  2               ;--------------------------------------------
0043C5  2               
0043C5  2  A8           L67A4:      tay                    ; Print left digit
0043C6  2  29 F0                    and #$F0               ; 29 F0
0043C8  2  4A                       lsr A                  ; 4A
0043C9  2  4A                       lsr A                  ; 4A
0043CA  2  4A                       lsr A                  ; 4A
0043CB  2  4A                       lsr A                  ; 4A
0043CC  2  18                       clc                    ; 18
0043CD  2  69 30                    adc #$30               ; 69 30
0043CF  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
0043D2  2               
0043D2  2  98                       tya                    ; Print right digit
0043D3  2  29 0F                    and #$0F               ; 29 0F
0043D5  2  18                       clc                    ; 18
0043D6  2  69 30                    adc #$30               ; 69 30
0043D8  2  4C 10 3A                 jmp OSWRCH             ; 4C EE FF
0043DB  2               
0043DB  2               ;--------------------------------------------
0043DB  2               ; Score
0043DB  2               ;--------------------------------------------
0043DB  2               
0043DB  2  00           L67BA:      .byte $00		; Right 2 digits
0043DC  2  00           L67BB:      .byte $00		; Middle 2 digits
0043DD  2  00           L67BC:      .byte $00		; Left 2 digits
0043DE  2               
0043DE  2               
0043DE  2  00           L67BD:      .byte $00
0043DF  2               
0043DF  2  02           L67BE:      .byte $02		; Live digits
0043E0  2               
0043E0  2               ;--------------------------------------------
0043E0  2               ; Key hit, add 100 to score
0043E0  2               ;--------------------------------------------
0043E0  2               
0043E0  2               L67BF:
0043E0  2  A9 0A        	lda #10			; Make sound
0043E2  2  8D 4D 32     	sta tmp_note
0043E5  2               ping_loop:
0043E5  2  A9 15        	lda #$15
0043E7  2  A0 15        	ldy #$15
0043E9  2  20 B1 34     	jsr sound
0043EC  2  CE 4D 32     	dec tmp_note
0043EF  2  D0 F4        	bne ping_loop
0043F1  2               
0043F1  2               ;            lda #$05               ; A9 02
0043F1  2               ;            ldx #$C8               ; A2 C8
0043F1  2               ;            ldy #$01               ; A0 01
0043F1  2               ;            jsr L68AC              ; Make sound
0043F1  2               
0043F1  2  A9 01                    lda #$01               ; A9 01
0043F3  2  85 9F                    sta L009F              ; 85 9F
0043F5  2               
0043F5  2  A9 49                    lda #$49               ; Add 50
0043F7  2  20 61 43                 jsr L6740              ; Print score + lives
0043FA  2  A9 49                    lda #$49               ; Add 50
0043FC  2  4C 61 43                 jmp L6740              ; Print score + lives
0043FF  2               
0043FF  2               ;--------------------------------------------
0043FF  2               ; End game, check lives
0043FF  2               ;--------------------------------------------
0043FF  2               
0043FF  2  20 71 3F     L67D6:      jsr L62E9              ; Stop music
004402  2               
004402  2               
004402  2               ; Make sound 
004402  2               
004402  2  A9 20        	lda #$20
004404  2  8D 4D 32     	sta tmp_note
004407  2               snd_loop6:
004407  2  AD 4D 32     	lda tmp_note
00440A  2  A0 08        	ldy #8
00440C  2  20 B1 34     	jsr sound
00440F  2  A9 40        	lda #$40
004411  2  A0 08        	ldy #8
004413  2  20 B1 34     	jsr sound
004416  2  EE 4D 32     	inc tmp_note
004419  2  AD 4D 32     	lda tmp_note
00441C  2  C9 40        	cmp #$40
00441E  2  D0 E7        	bne snd_loop6
004420  2               
004420  2               ;            lda #$06               ; A9 01
004420  2               ;            ldx #$C8               ; A2 C8
004420  2               ;            ldy #$01               ; A0 01
004420  2               ;            jsr L68AC              ; Make sound
004420  2               
004420  2  A2 FD                    ldx #$FD               ; A2 FD
004422  2  9A                       txs                    ; 9A
004423  2               
004423  2  AD DF 43                 lda L67BE              ; Check if lives=0
004426  2  C9 00                    cmp #$00               ; C9 00
004428  2  F0 0E                    beq L67FA              ; Lives is 0, jump
00442A  2               .if debug=0
00442A  2  CE DF 43                 dec L67BE              ; Decrement lives
00442D  2               .endif
00442D  2  A5 80                    lda L0080              ; Get level
00442F  2  20 FD 3E                 jsr L62C3              ; Buildscreen
004432  2  20 7C 3F                 jsr L62F4              ; Reset music pointer and play sound
004435  2  4C 5A 3E                 jmp L6208              ; Start game
004438  2               
004438  2               ;--------------------------------------------
004438  2               ; Lives is 0, end game
004438  2               ;--------------------------------------------
004438  2               
004438  2  A9 80        L67FA:      lda #>$8000               ; Set screenaddress top left
00443A  2  85 71                    sta L0071              ; 85 71
00443C  2  A9 00                    lda #<$8000               ; A9 80
00443E  2  85 70                    sta L0070              ; 85 70
004440  2               
004440  2  A2 11                    ldx #$11               ; Clear screen except level+score
004442  2  A0 00                    ldy #$00               ; A0 00
004444  2  98                       tya                    ; 98
004445  2  91 70        L6807:      sta (L0070),Y          ; 91 70
004447  2  C8                       iny                    ; C8
004448  2  D0 FB                    bne L6807              ; D0 FB
00444A  2  E6 71                    inc L0071              ; E6 71
00444C  2  CA                       dex                    ; CA
00444D  2  D0 F6                    bne L6807              ; D0 F6
00444F  2               
00444F  2               ; Wipe air gauge
00444F  2               
00444F  2  A0 00        	ldy #0
004451  2               L6808:
004451  2  99 00 94     	sta $9400,y
004454  2  99 00 95     	sta $9500,y
004457  2  88           	dey
004458  2  D0 F7        	bne L6808
00445A  2               
00445A  2  20 6C 30                 jsr L2EF0              ; Print level name
00445D  2               
00445D  2  A2 00                    ldx #$00               ; Copy shoe graphics into font
00445F  2  BD 20 57     L6816:      lda L7B20,X            ; BD 20 7B
004462  2  9D C8 38                 sta ext_font,X            ; 9D 00 0C
004465  2  E8                       inx                    ; E8
004466  2  E0 40                    cpx #$40               ; E0 40
004468  2  D0 F5                    bne L6816              ; D0 F5
00446A  2               
00446A  2  A9 0F        	lda #15
00446C  2  8D 18 03     	sta XPOS
00446F  2  A9 0F        	lda #15
004471  2  8D 19 03     	sta YPOS
004474  2               
004474  2  A2 00                    ldx #$00               ; Print pillar
004476  2  BD FB 44     L6823:      lda L689F,X            ; BD 9F 68
004479  2  20 10 3A                 jsr OSWRCH             ; Print character
00447C  2  E8                       inx                    ; E8
00447D  2  E0 07                    cpx #$07               ; E0 0C
00447F  2  D0 F5                    bne L6823              ; D0 F5
004481  2               
004481  2  A9 80                    lda #<L0580               ; Spriteaddress L0580
004483  2  85 77                    sta L0077              ; 85 77
004485  2  A9 05                    lda #>L0580               ; A9 05
004487  2  85 78                    sta L0078              ; 85 78
004489  2               
004489  2  A2 4E                    ldx #$4E               ; X=78
00448B  2  A0 68                    ldy #$68               ; Y=104
00448D  2  A9 03                    lda #$03               ; Plotmode 3
00448F  2  20 00 10                 jsr L0F00              ; Plot sprite
004492  2               
004492  2  A9 08                    lda #$08               ; A9 08
004494  2  8D 02 45                 sta L68AB              ; 8D AB 68
004497  2               
004497  2  A9 40        L6844:      lda #<L0D40               ; Spriteaddress L0D40
004499  2  85 77                    sta L0077              ; 85 77
00449B  2  A9 0E                    lda #>L0D40               ; A9 0D
00449D  2  85 78                    sta L0078              ; 85 78
00449F  2               
00449F  2  A2 4E                    ldx #$4E               ; X=78
0044A1  2  AC 02 45                 ldy L68AB              ; Y=L68AB
0044A4  2  A9 03                    lda #$03               ; Plotmode 3
0044A6  2  20 00 10                 jsr L0F00              ; Plot sprite
0044A9  2               
0044A9  2  A2 FF                    ldx #$FF               ; Wait loop
0044AB  2  A0 40                    ldy #$40               ; A0 40
0044AD  2  CA           L685A:      dex                    ; CA
0044AE  2  D0 FD                    bne L685A              ; D0 FD
0044B0  2               
0044B0  2  AD 02 45                 lda L68AB              ; Decrement shoe counter
0044B3  2  4A                       lsr A                  ; 4A
0044B4  2  49 3F                    eor #$3F               ; 49 3F
0044B6  2  8D 9D 31                 sta L3099              ; 8D 99 30
0044B9  2               
0044B9  2               ;	and #7
0044B9  2               ;	bne skip_sound
0044B9  2               
0044B9  2               skip_sound:
0044B9  2  88                       dey                    ; 88
0044BA  2  D0 F1                    bne L685A              ; D0 F1
0044BC  2               
0044BC  2  48           	pha
0044BD  2  98           	tya
0044BE  2  48           	pha
0044BF  2  AD 9D 31     	lda L3099
0044C2  2  A0 10        	ldy #$10
0044C4  2  20 B1 34     	jsr sound
0044C7  2  68           	pla
0044C8  2  A8           	tay
0044C9  2  68           	pla
0044CA  2               
0044CA  2  EE 02 45                 inc L68AB              ; EE AB 68
0044CD  2  EE 02 45                 inc L68AB              ; EE AB 68
0044D0  2  AD 02 45                 lda L68AB              ; AD AB 68
0044D3  2  C9 6A                    cmp #$6A               ; C9 6A
0044D5  2  D0 C0                    bne L6844              ; Repeat
0044D7  2               
0044D7  2               ;            lda #$9F               ; A9 9F
0044D7  2               ;            jsr L3075              ; Sound output
0044D7  2               
0044D7  2  A9 10                    lda #$10               ; A9 10
0044D9  2  20 DF 44                 jsr L6883              ; 20 83 68
0044DC  2               
0044DC  2  4C 06 27                 jmp L24F8              ; Jump L0090
0044DF  2               
0044DF  2               ; SUb
0044DF  2               
0044DF  2  85 70        L6883:      sta L0070              ; 85 70
0044E1  2               
0044E1  2  A2 FF        L6885:      ldx #$FF               ; A2 FF
0044E3  2  A0 FF                    ldy #$FF               ; A0 FF
0044E5  2  CA           L6889:      dex                    ; CA
0044E6  2  D0 FD                    bne L6889              ; D0 FD
0044E8  2  88                       dey                    ; 88
0044E9  2  D0 FA                    bne L6889              ; D0 FA
0044EB  2               
0044EB  2  C6 70                    dec L0070              ; C6 70
0044ED  2  D0 F2                    bne L6885              ; D0 F2
0044EF  2               
0044EF  2  A2 00                    ldx #$00               ; Wipe font
0044F1  2  8A                       txa                    ; 8A
0044F2  2  9D C8 38     L6896:      sta ext_font,X            ; 9D 00 0C
0044F5  2  E8                       inx                    ; E8
0044F6  2  E0 40                    cpx #$40               ; E0 40
0044F8  2  D0 F8                    bne L6896              ; D0 F8
0044FA  2               
0044FA  2  60                       rts                    ; 60
0044FB  2               
0044FB  2               ;--------------------------------------------
0044FB  2               ; Print pillar data
0044FB  2               ;--------------------------------------------
0044FB  2               
0044FB  2               L689F:
0044FB  2               ;            .byte $11,$03	; Define textcolour 3
0044FB  2               ;            .byte $1F,$13,$0F	; Cursor at 19,15
0044FB  2  80 81                    .byte $80,$81	; Print top pillar
0044FD  2  0A 08 08                 .byte $0A,$08,$08	; Down,left,left
004500  2  82 83                    .byte $82,$83	; Print bottom pillar
004502  2               
004502  2               ;--------------------------------------------
004502  2               
004502  2  EA           L68AB:      .byte $EA
004503  2               
004503  2               ;--------------------------------------------
004503  2               ; Make sound
004503  2               ;--------------------------------------------
004503  2               
004503  2               L68AC:
004503  2               ;            sta L6B82              ; 8D 82 6B
004503  2               ;            stx L6B84              ; 8E 84 6B
004503  2               ;            sty L6B86              ; 8C 86 6B
004503  2               ;
004503  2               ;            lda #$07               ; Sound param at L6B80
004503  2               ;            ldx #$80               ; A2 80
004503  2               ;            ldy #$6B               ; A0 6B
004503  2               ;            jmp OSWORD             ; 4C F1 FF
004503  2               
004503  2  98           	tya
004504  2  0A           	asl a
004505  2  0A           	asl a
004506  2  0A           	asl a
004507  2  0A           	asl a
004508  2  A8           	tay
004509  2  8A           	txa
00450A  2  49 FF        	eor #$ff
00450C  2  4C B1 34     	jmp sound
00450F  2               
00450F  2               ;--------------------------------------------
00450F  2               
00450F  2               L68BE:
00450F  2               ;???
00450F  2               ;            lda L0077              ; A5 77
00450F  2               ;            sec                    ; 38
00450F  2               ;            sbc #$27               ; E9 27
00450F  2               ;            sta L0077              ; 85 77
00450F  2               ;
00450F  2               ;            lda L0078              ; A5 78
00450F  2               ;            sbc #$00               ; E9 00
00450F  2               ;            sta L0078              ; 85 78
00450F  2               ;???
00450F  2               
00450F  2  AE BD 18                 ldx L183C              ; X-coordinaat Miner in pixels new
004512  2  AC BE 18                 ldy L183D              ; Y-coordinaat Miner in pixels new
004515  2  A9 06                    lda #$06               ; A9 06
004517  2  20 00 10                 jsr L0F00              ; Plot sprite
00451A  2               
00451A  2  20 0F 47                 jsr L6AC9              ; 20 C9 6A
00451D  2  20 8F 46                 jsr L6A4B              ; 20 4B 6A
004520  2  20 AB 45                 jsr L6967              ; 20 67 69
004523  2               
004523  2  A9 03        L68DF:      lda #$03               ; A9 03
004525  2  8D 7A 45                 sta L6936              ; 8D 36 69
004528  2               
004528  2  A9 04                    lda #$04               ; A9 04
00452A  2  8D 80 45                 sta L693C              ; 8D 3C 69
00452D  2               
00452D  2  AD C0 18                 lda L183F              ; Miner sprite nr
004530  2  C9 03                    cmp #$03               ; C9 03
004532  2  D0 0A                    bne L68FA              ; D0 0A
004534  2               
004534  2  A9 04                    lda #$04               ; A9 04
004536  2  8D 7A 45                 sta L6936              ; 8D 36 69
004539  2               
004539  2  A9 03                    lda #$03               ; A9 03
00453B  2  8D 80 45                 sta L693C              ; 8D 3C 69
00453E  2               
00453E  2  AD BB 18     L68FA:      lda L183A              ; X-coordinaat Miner in pixels old
004541  2  29 03                    and #$03               ; 29 03
004543  2  4D C0 18                 eor L183F              ; Miner sprite nr
004546  2               
004546  2  C9 03                    cmp #$03               ; C9 03
004548  2  D0 14                    bne L691A              ; D0 14
00454A  2               
00454A  2  AD C0 18                 lda L183F              ; Miner sprite nr
00454D  2  C9 03                    cmp #$03               ; C9 03
00454F  2  D0 08                    bne L6915              ; D0 08
004551  2               
004551  2  A9 05                    lda #$05               ; A9 05
004553  2  8D 7A 45                 sta L6936              ; 8D 36 69
004556  2               
004556  2  4C 5E 45                 jmp L691A              ; 4C 1A 69
004559  2               
004559  2  A9 05        L6915:      lda #$05               ; A9 05
00455B  2  8D 80 45                 sta L693C              ; 8D 3C 69
00455E  2               
00455E  2  A2 00        L691A:      ldx #$00               ; A2 00
004560  2  BD 80 0E     L691C:      lda L0D80,X            ; BD 80 0D
004563  2  C9 FF                    cmp #$FF               ; C9 FF
004565  2  F0 1C                    beq L693F              ; F0 1C
004567  2  20 72 45                 jsr L692E              ; 20 2E 69
00456A  2  8A                       txa                    ; 8A
00456B  2  18                       clc                    ; 18
00456C  2  69 04                    adc #$04               ; 69 04
00456E  2  AA                       tax                    ; AA
00456F  2  4C 60 45                 jmp L691C              ; 4C 1C 69
004572  2               
004572  2  18           L692E:      clc                    ; 18
004573  2  69 13                    adc #$13               ; 69 13
004575  2  38                       sec                    ; 38
004576  2  ED BB 18                 sbc L183A              ; X-coordinaat Miner in pixels old
004579  2  C9 03        L6935:      cmp #$03               ; C9 03
00457B  2  90 07                    bcc L6940              ; 90 07
00457D  2  49 FE                    eor #$FE               ; 49 FE
00457F  2  C9 03        L693B:      cmp #$03               ; C9 03
004581  2  90 01                    bcc L6940              ; 90 01
004583  2               
004583  2  60           L693F:      rts                    ; 60
004584  2               
004584  2  E8           L6940:      inx                    ; E8
004585  2  BD 80 0E                 lda L0D80,X            ; BD 80 0D
004588  2  38                       sec                    ; 38
004589  2  E9 01                    sbc #$01               ; E9 01
00458B  2  0A                       asl A                  ; 0A
00458C  2  0A                       asl A                  ; 0A
00458D  2  0A                       asl A                  ; 0A
00458E  2  CD BC 18                 cmp L183B              ; Y-coordinaat Miner in pixels old
004591  2  90 02                    bcc L6951              ; 90 02
004593  2  CA                       dex                    ; CA
004594  2  60                       rts                    ; 60
004595  2               
004595  2  BD 80 0E     L6951:      lda L0D80,X            ; BD 80 0D
004598  2  CA                       dex                    ; CA
004599  2  18                       clc                    ; 18
00459A  2  69 03                    adc #$03               ; 69 03
00459C  2  0A                       asl A                  ; 0A
00459D  2  0A                       asl A                  ; 0A
00459E  2  0A                       asl A                  ; 0A
00459F  2  38                       sec                    ; 38
0045A0  2  E9 01                    sbc #$01               ; E9 01
0045A2  2  CD BC 18                 cmp L183B              ; Y-coordinaat Miner in pixels old
0045A5  2  B0 01                    bcs L6964              ; B0 01
0045A7  2  60                       rts                    ; 60
0045A8  2               
0045A8  2  4C FF 43     L6964:      jmp L67D6              ; Death
0045AB  2               
0045AB  2  A9 00        L6967:      lda #$00               ; A9 00
0045AD  2  85 5A                    sta L005A              ; 85 5A
0045AF  2  AD BB 18                 lda L183A              ; X-coordinaat Miner in pixels old
0045B2  2  29 03                    and #$03               ; 29 03
0045B4  2  4D C0 18                 eor L183F              ; Miner sprite nr
0045B7  2  C9 00                    cmp #$00               ; C9 00
0045B9  2  F0 04                    beq L697B              ; F0 04
0045BB  2  A9 01                    lda #$01               ; A9 01
0045BD  2  85 5A                    sta L005A              ; 85 5A
0045BF  2  A5 80        L697B:      lda L0080              ; A5 80
0045C1  2  C9 05                    cmp #$05               ; C9 05
0045C3  2  D0 15                    bne L6996              ; D0 15
0045C5  2  AD 7C 1C                 lda L1C48              ; AD 48 1C
0045C8  2  29 7F                    and #$7F               ; 29 7F
0045CA  2  38                       sec                    ; 38
0045CB  2  E9 08                    sbc #$08               ; E9 08
0045CD  2  8D AA 1D                 sta L1DAE              ; 8D AE 1D
0045D0  2  A9 FF                    lda #$FF               ; A9 FF
0045D2  2  8D AD 1D                 sta L1DB1              ; 8D B1 1D
0045D5  2  A9 0F                    lda #$0F               ; A9 0F
0045D7  2  8D A9 1D                 sta L1DAD              ; 8D AD 1D
0045DA  2  A5 80        L6996:      lda L0080              ; A5 80
0045DC  2  C9 08                    cmp #$08               ; C9 08
0045DE  2  F0 07                    beq L69A3              ; F0 07
0045E0  2  C9 0C                    cmp #$0C               ; C9 0C
0045E2  2  F0 03                    beq L69A3              ; F0 03
0045E4  2  4C 02 46                 jmp L69BE              ; 4C BE 69
0045E7  2               
0045E7  2               
0045E7  2               ; Check if Kong is standing
0045E7  2               
0045E7  2  A9 FF        L69A3:      lda #$FF               ; A9 FF
0045E9  2  8D A9 1D                 sta L1DAD              ; 8D AD 1D
0045EC  2  AD 10 81                 lda L33C0              
0045EF  2  C9 00                    cmp #$00               ; C9 00
0045F1  2  F0 0F                    beq L69BE              ; F0 0F
0045F3  2  A9 0F                    lda #$0F               ; A9 0F
0045F5  2  8D A9 1D                 sta L1DAD              ; 8D AD 1D
0045F8  2  A9 FF                    lda #$FF               ; A9 FF
0045FA  2  8D AD 1D                 sta L1DB1              ; 8D B1 1D
0045FD  2  A9 00                    lda #$00               ; A9 00
0045FF  2  8D AA 1D                 sta L1DAE              ; 8D AE 1D
004602  2               
004602  2  A9 F1        L69BE:      lda #$F1               ; A9 F1
004604  2  8D 6E 46                 sta L6A2A              ; 8D 2A 6A
004607  2  A5 80                    lda L0080              ; A5 80
004609  2  C9 0E                    cmp #$0E               ; C9 0E
00460B  2  D0 05                    bne L69CE              ; D0 05
00460D  2  A9 F1                    lda #$F1               ; A9 F1
00460F  2  8D 6E 46                 sta L6A2A              ; 8D 2A 6A
004612  2  A2 00        L69CE:      ldx #$00               ; A2 00
004614  2  BD A9 1D     L69D0:      lda L1DAD,X            ; BD AD 1D
004617  2  C9 FF                    cmp #$FF               ; C9 FF
004619  2  F0 43                    beq L6A1A              ; F0 43
00461B  2  20 2A 46                 jsr L69E6              ; 20 E6 69
00461E  2  8A                       txa                    ; 8A
00461F  2  18                       clc                    ; 18
004620  2  69 04                    adc #$04               ; 69 04
004622  2  AA                       tax                    ; AA
004623  2  E0 10                    cpx #$10               ; E0 10
004625  2  B0 37                    bcs L6A1A              ; B0 37
004627  2  4C 14 46                 jmp L69D0              ; 4C D0 69
00462A  2               
00462A  2  BD A9 1D     L69E6:      lda L1DAD,X            ; BD AD 1D
00462D  2  29 3F                    and #$3F               ; 29 3F
00462F  2  18                       clc                    ; 18
004630  2  69 05                    adc #$05               ; 69 05
004632  2  0A                       asl A                  ; 0A
004633  2  0A                       asl A                  ; 0A
004634  2  8D 63 42                 sta L6632              ; 8D 32 66
004637  2               
004637  2  AD BB 18                 lda L183A              ; X-coordinaat Miner in pixels old
00463A  2  18                       clc                    ; 18
00463B  2  69 04                    adc #$04               ; 69 04
00463D  2  38                       sec                    ; 38
00463E  2               
00463E  2  ED 63 42                 sbc L6632              ; ED 32 66
004641  2  C9 00                    cmp #$00               ; C9 00
004643  2  F0 1A                    beq L6A1B              ; F0 1A
004645  2               
004645  2  C9 07                    cmp #$07               ; C9 07
004647  2  90 16                    bcc L6A1B              ; 90 16
004649  2  38                       sec                    ; 38
00464A  2  E5 5A                    sbc L005A              ; E5 5A
00464C  2               
00464C  2  C9 07                    cmp #$07               ; C9 07
00464E  2  90 0F                    bcc L6A1B              ; 90 0F
004650  2  18                       clc                    ; 18
004651  2  65 5A                    adc L005A              ; 65 5A
004653  2               
004653  2  C9 FD                    cmp #$FD               ; C9 FD
004655  2  B0 08                    bcs L6A1B              ; B0 08
004657  2  18                       clc                    ; 18
004658  2  65 5A                    adc L005A              ; 65 5A
00465A  2               
00465A  2  C9 FD                    cmp #$FD               ; C9 FD
00465C  2  B0 01                    bcs L6A1B              ; B0 01
00465E  2               
00465E  2  60           L6A1A:      rts                    ; 60
00465F  2               
00465F  2  BD AA 1D     L6A1B:      lda L1DAE,X            ; BD AE 1D
004662  2  18                       clc                    ; 18
004663  2  69 08                    adc #$08               ; 69 08
004665  2  38                       sec                    ; 38
004666  2  ED BC 18                 sbc L183B              ; Y-coordinaat Miner in pixels old
004669  2               
004669  2  C9 13                    cmp #$13               ; C9 13
00466B  2  90 05                    bcc L6A2E              ; 90 05
00466D  2  C9 F0        L6A29:      cmp #$F0               ; C9 F0
00466F  2  B0 01                    bcs L6A2E              ; B0 01
004671  2  60                       rts                    ; 60
004672  2               
004672  2  4C FF 43     L6A2E:      jmp L67D6              ; Death
004675  2               
004675  2  AD D3 19     L6A31:      lda L199F              ; AD 9F 19
004678  2  49 FF                    eor #$FF               ; 49 0F
00467A  2  8D D3 19                 sta L199F              ; 8D 9F 19
00467D  2  20 B4 19                 jsr L1980              ; 20 80 19
004680  2  A9 FF                    lda #$FF               ; A9 FF
004682  2  8D 6F 11                 sta L109B              ; Colour mask
004685  2  60                       rts                    ; 60
004686  2               
004686  2               ;--------------------------------------------
004686  2               ; Print levelnr
004686  2               ;--------------------------------------------
004686  2               
004686  2  20 D2 27     L6A42:      jsr L25C8              ; Print level nr
004689  2  A9 FF                    lda #$FF               ; A9 FF
00468B  2  8D A9 1D                 sta L1DAD              ; 8D AD 1D
00468E  2  60                       rts                    ; 60
00468F  2               
00468F  2               ;--------------------------------------------
00468F  2               ; Check if left switch if turned on
00468F  2               ;--------------------------------------------
00468F  2               
00468F  2  AD C6 81     L6A4B:      lda L332E 
004692  2  29 0F        	and #$0f
004694  2  C9 00                    cmp #$00               ; C9 00
004696  2  D0 01                    bne L6A53              ; Yes, it's switched on
004698  2  60                       rts                    ; No, it's not switched on
004699  2               
004699  2  A5 80        L6A53:      lda L0080              ; A5 80
00469B  2  C9 08                    cmp #$08               ; Check if level 8
00469D  2  F0 0A                    beq L6A63              ; Yes, jump
00469F  2               
00469F  2  C9 0C                    cmp #$0C               ; Check if level 12
0046A1  2  D0 05                    bne L6A62              ; No, jump
0046A3  2               
0046A3  2  A9 47                    lda #$47               ; Set new left boundery guard 
0046A5  2  8D 83 0E                 sta L0D83              ; 8D 83 0D
0046A8  2               
0046A8  2  60           L6A62:      rts                    ; 60
0046A9  2               
0046A9  2  A9 47        L6A63:      lda #$47               ; Set new left boundery guard
0046AB  2  8D 87 0E                 sta L0D87              ; 8D 87 0D
0046AE  2  60           L6A68:      rts                    ; 60
0046AF  2               
0046AF  2               ;--------------------------------------------
0046AF  2               ;
0046AF  2               ;--------------------------------------------
0046AF  2               
0046AF  2  AD D4 47     L6A69:      lda L6B7E              ; Air level
0046B2  2  C9 00                    cmp #$00               ; If no air
0046B4  2  F0 56                    beq L6AC6              ; Death
0046B6  2               
0046B6  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
0046B9  2  CD D1 47                 cmp L6B7B              ; CD 7B 6B
0046BC  2  B0 03                    bcs L6A7B              ; B0 03
0046BE  2  8D D1 47                 sta L6B7B              ; 8D 7B 6B
0046C1  2               
0046C1  2  AD BC 18     L6A7B:      lda L183B              ; Y-coordinaat Miner in pixels old
0046C4  2  29 07                    and #$07               ; 29 07
0046C6  2  C9 00                    cmp #$00               ; C9 00
0046C8  2  F0 05                    beq L6A89              ; F0 05
0046CA  2               
0046CA  2  A9 00                    lda #$00               ; A9 00
0046CC  2  8D D2 47                 sta L6B7C              ; 8D 7C 6B
0046CF  2               
0046CF  2  AD BC 18     L6A89:      lda L183B              ; Y-coordinaat Miner in pixels old
0046D2  2  29 07                    and #$07               ; 29 07
0046D4  2  CD D3 47                 cmp L6B7D              ; CD 7D 6B
0046D7  2  D0 27                    bne L6ABA              ; D0 27
0046D9  2               
0046D9  2  C9 00                    cmp #$00               ; C9 00
0046DB  2  D0 23                    bne L6ABA              ; D0 23
0046DD  2               
0046DD  2  AD D2 47                 lda L6B7C              ; AD 7C 6B
0046E0  2  C9 00                    cmp #$00               ; C9 00
0046E2  2  D0 1C                    bne L6ABA              ; D0 1C
0046E4  2               
0046E4  2  A9 FF                    lda #$FF               ; A9 FF
0046E6  2  8D D2 47                 sta L6B7C              ; 8D 7C 6B
0046E9  2               
0046E9  2  20 61 27                 jsr L254D              ; Scroll conveyor
0046EC  2               
0046EC  2  AD BC 18                 lda L183B              ; Y-coordinaat Miner in pixels old
0046EF  2  38                       sec                    ; 38
0046F0  2  ED D1 47                 sbc L6B7B              ; ED 7B 6B
0046F3  2  C9 28                    cmp #$28               ; C9 28
0046F5  2  90 03                    bcc L6AB4              ; 90 03
0046F7  2  4C FF 43                 jmp L67D6              ; Death
0046FA  2               
0046FA  2  AD BC 18     L6AB4:      lda L183B              ; Y-coordinaat Miner in pixels old
0046FD  2  8D D1 47                 sta L6B7B              ; 8D 7B 6B
004700  2  AD BC 18     L6ABA:      lda L183B              ; Y-coordinaat Miner in pixels old
004703  2  29 07                    and #$07               ; 29 07
004705  2  8D D3 47                 sta L6B7D              ; 8D 7D 6B
004708  2  60                       rts                    ; 60
004709  2               
004709  2  20 B4 47     L6AC3:      jsr L6B5E              ; 20 5E 6B
00470C  2               
00470C  2  4C FF 43     L6AC6:      jmp L67D6              ; Death
00470F  2               
00470F  2               ;--------------------------------------------
00470F  2               ;
00470F  2               ;--------------------------------------------
00470F  2               
00470F  2  20 AF 46     L6AC9:      jsr L6A69              ; 20 69 6A
004712  2               
004712  2  A5 80                    lda L0080              ; A5 80
004714  2  C9 14                    cmp #$14               ; C9 14
004716  2  D0 96                    bne L6A68              ; D0 96
004718  2               
004718  2  EE D0 47                 inc L6B7A              ; EE 7A 6B
00471B  2  20 B4 47                 jsr L6B5E              ; 20 5E 6B
00471E  2  AD D0 47                 lda L6B7A              ; AD 7A 6B
004721  2  29 10                    and #$10               ; 29 10
004723  2  C9 00                    cmp #$00               ; C9 00
004725  2  F0 7D                    beq L6B4E              ; F0 6D
004727  2               
004727  2  AD 50 8B                 lda L4F42              ; AD 42 4F
00472A  2  29 80                    and #$80               ; 29 80
00472C  2  C9 00                    cmp #$00               ; C9 00
00472E  2  D0 D9                    bne L6AC3              ; D0 D9
004730  2               
004730  2  AD 58 82                 lda L3942              ; AD 42 39
004733  2  29 80                    and #$80               ; 29 80
004735  2  C9 00                    cmp #$00               ; C9 00
004737  2  D0 D0                    bne L6AC3              ; D0 D0
004739  2               
004739  2  AD 58 82                 lda L394A              ; AD 4A 39
00473C  2  29 01                    and #$01               ; 29 01
00473E  2  C9 00                    cmp #$00               ; C9 00
004740  2  D0 C7                    bne L6AC3              ; D0 C7
004742  2               
004742  2  AD 50 8B                 lda L4F4A              ; AD 4A 4F
004745  2  29 01                    and #$01               ; 29 01
004747  2  C9 00                    cmp #$00               ; C9 00
004749  2  D0 BE                    bne L6AC3              ; D0 BE
00474B  2               
00474B  2  AD D0 47                 lda L6B7A              ; AD 7A 6B
00474E  2  29 01                    and #$01               ; 29 01
004750  2  C9 00                    cmp #$00               ; C9 00
004752  2  F0 49                    beq L6B47              ; F0 39
004754  2               
004754  2  A9 00                    lda #$00               ; A9 00
004756  2  85 3F                    sta L003F              ; 85 3F
004758  2               
004758  2               L6B12:
004758  2  AD CB 47     	lda L6B72+3
00475B  2  38           	sec
00475C  2  E9 04        	sbc #4
00475E  2  8D 18 03     	sta XPOS
004761  2  AD CC 47     	lda L6B72+4
004764  2  8D 19 03     	sta YPOS
004767  2  4C 7F 47     	jmp L6B29
00476A  2               
00476A  2               ;            ldx #$00               ; A2 00
00476A  2               ;L6B14:      lda L6B72,X            ; BD 72 6B
00476A  2               ;            jsr OSWRCH             ; 20 EE FF
00476A  2               ;            inx                    ; E8
00476A  2               ;            cpx #$05               ; E0 05
00476A  2               ;            beq L6B29              ; F0 0A
00476A  2               
00476A  2               L6B1F:
00476A  2  AD CE 47     	lda L6B72+6
00476D  2  38           	sec
00476E  2  E9 04        	sbc #4
004770  2  8D 18 03     	sta XPOS
004773  2  AD CF 47     	lda L6B72+7
004776  2  8D 19 03     	sta YPOS
004779  2               
004779  2               ;            cpx #$08               ; E0 08
004779  2               ;            bne L6B14              ; D0 F1
004779  2               
004779  2  20 85 47                 jsr L6B2F              ; 20 2F 6B
00477C  2  4C B4 47                 jmp L6B5E              ; 4C 5E 6B
00477F  2               
00477F  2  20 85 47     L6B29:      jsr L6B2F              ; 20 2F 6B
004782  2  4C 6A 47                 jmp L6B1F              ; 4C 1F 6B
004785  2               
004785  2  A9 E0        L6B2F:      lda #$E0               ; A9 E0
004787  2  18                       clc                    ; 18
004788  2  65 3F                    adc L003F              ; 65 3F
00478A  2  20 10 3A                 jsr OSWRCH             ; Print character
00478D  2  A8                       tay                    ; A8
00478E  2  C8                       iny                    ; C8
00478F  2               
00478F  2  A9 0A                    lda #$0A               ; A9 0A
004791  2  20 10 3A                 jsr OSWRCH             ; Move cursor down 1 pos
004794  2               
004794  2  A9 08                    lda #$08               ; A9 08
004796  2  20 10 3A                 jsr OSWRCH             ; Move cursor back 1 pos
004799  2               
004799  2  98                       tya                    ; 98
00479A  2  4C 10 3A                 jmp OSWRCH             ; Print character
00479D  2               
00479D  2  A9 02        L6B47:      lda #$02               ; A9 02
00479F  2  85 3F                    sta L003F              ; 85 3F
0047A1  2  4C 58 47                 jmp L6B12              ; 4C 12 6B
0047A4  2               
0047A4  2  A9 04        L6B4E:      lda #$04               ; A9 04
0047A6  2  85 3F                    sta L003F              ; 85 3F
0047A8  2  AD D0 47                 lda L6B7A              ; AD 7A 6B
0047AB  2  29 0F                    and #$0F               ; 29 0F
0047AD  2  C9 00                    cmp #$00               ; C9 00
0047AF  2  D0 03                    bne L6B5E              ; D0 03
0047B1  2  4C 58 47                 jmp L6B12              ; 4C 12 6B
0047B4  2               
0047B4  2               ;--------------------------------------------
0047B4  2               ; Switch ext_font with L1DC1 for $40 bytes
0047B4  2               ;--------------------------------------------
0047B4  2               
0047B4  2  A2 40        L6B5E:      ldx #$40               ; A2 40
0047B6  2  BD C8 38     L6B60:      lda ext_font,X            ; BD 00 0C
0047B9  2  A8                       tay                    ; A8
0047BA  2  BD BD 1D                 lda L1DC1,X            ; BD C1 1D
0047BD  2  9D C8 38                 sta ext_font,X            ; 9D 00 0C
0047C0  2  98                       tya                    ; 98
0047C1  2  9D BD 1D                 sta L1DC1,X            ; 9D C1 1D
0047C4  2  CA                       dex                    ; CA
0047C5  2  D0 EF                    bne L6B60              ; D0 EF
0047C7  2               
0047C7  2  60                       rts                    ; 60
0047C8  2               
0047C8  2               ;--------------------------------------------
0047C8  2               
0047C8  2  11 02 1F 14  L6B72:      .byte $11,$02,$1F,$14,$0B,$1F,$1C,$02
0047CC  2  0B 1F 1C 02  
0047D0  2               
0047D0  2  EA           L6B7A:      .byte $EA
0047D1  2  EA           L6B7B:      .byte $EA
0047D2  2  EA           L6B7C:      .byte $EA
0047D3  2  EA           L6B7D:      .byte $EA
0047D4  2  EA           L6B7E:      .byte $EA		; Air level
0047D5  2               
0047D5  2               L6B7F:
0047D5  2               .if debug=0
0047D5  2  00                       .byte $00		; Cheatmode <>0
0047D6  2               .else
0047D6  2               	.byte $01
0047D6  2               .endif
0047D6  2               
0047D6  2  01 00        L6B80:      .byte $01,$00	; Sound parameter block
0047D8  2  00           L6B82:      .byte $00
0047D9  2  00           L6B83:      .byte $00
0047DA  2  00 00        L6B84:      .byte $00,$00
0047DC  2  00           L6B86:      .byte $00
0047DD  2               
0047DD  2  00           L6B87:      .byte $00
0047DE  2               
0047DE  2               ;--------------------------------------------
0047DE  2               ; Level 1-20 data X,Y-position MM from L6B88
0047DE  2               ;  High nibble = X
0047DE  2               ;  Low nibble  = Y
0047DE  2               ;--------------------------------------------
0047DE  2               
0047DE  2  0E 0E 0E DE  L6B88:      .byte $0E,$0E,$0E,$DE,$04,$74,$0E
0047E2  2  04 74 0E     
0047E5  2  0E 0E 05 12              .byte $0E,$0E,$05,$12,$0E,$EE,$8E,$0E
0047E9  2  0E EE 8E 0E  
0047ED  2  4E 04 DE 0E              .byte $4E,$04,$DE,$0E,$0E
0047F1  2  0E           
0047F2  2               
0047F2  2               ;--------------------------------------------
0047F2  2               
0047F2  2  DE 0E 0E 00  L6B9C:      .byte $DE,$0E,$0E,$00
0047F6  2               
0047F6  2               ;--------------------------------------------
0047F6  2               ; Temp sprite buffer for moving miner
0047F6  2               ;--------------------------------------------
0047F6  2               
0047F6  2               ;L6BA0:      .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00,$00
0047F6  2               ;            .byte $00,$00,$00,$00,$00,$00,$00
0047F6  2               ;L6BDF:      .byte $00
0047F6  2               ;
0047F6  2               ;L6BE0:      .byte $0F,$0F,$0D,$02,$0C,$02,$00
0047F6  2               ;L6BE7:      .byte $FF
0047F6  2               ;L6BE8:      .byte $0F,$0F,$0B,$0E,$05,$00,$00
0047F6  2               ;L6BEF:      .byte $FF
0047F6  2               ;L6BF0:      .byte $0F,$0F,$0D,$02,$0C,$02,$00
0047F6  2               ;L6BF7:      .byte $FF
0047F6  2               ;L6BF8:      .byte $0F,$0F,$0B,$0E,$05,$00,$00,$FF
0047F6  2               
0047F6  2               ;------------------------------------------------
0047F6  2               ; Screen layout data
0047F6  2               ; Parameter block has 6 bytes
0047F6  2               ;------------------------------------------------
0047F6  2               
0047F6  2               ptr:
0047F6  2  00 00 00 00  	.repeat (>ptr+1)*256-ptr
0047FA  2  00 00 00 00  
0047FE  2  00 00        
004800  2               		.byte 0
004800  2               	.endrep
004800  2               
004800  2               ; Screen 1
004800  2               
004800  2  FF FF        L6C00:	.byte $FF,$FF		; Level ID
004802  2  10 02        L6C02:	.byte $10,$02		; Nibble = colour 0-2
004804  2               
004804  2  00           	.byte $00		; Char solid floor $E0/$E1
004805  2  01           	.byte $01
004806  2  00           	.byte $00
004807  2  00           	.byte $00
004808  2  01           	.byte $01
004809  2  21 10        	.byte $21,$10		; X,Y exit
00480B  2               
00480B  2               	; Horizontal stripes solid floor X,Y,L
00480B  2               
00480B  2  04 0D 0F     	.byte $04,$0D,$0F
00480E  2  1B 0C 03     	.byte $1B,$0C,$03
004811  2  1C 0A 02     	.byte $1C,$0A,$02
004814  2  00 09 04     	.byte $00,$09,$04
004817  2  00 07 03     	.byte $00,$07,$03
00481A  2  00 05 0E     	.byte $00,$05,$0E
00481D  2  11 05 01     	.byte $11,$05,$01
004820  2  16 05 08     	.byte $16,$05,$08
004823  2               
004823  2               	; Horizontal stripes sinking floor X,Y,L
004823  2               
004823  2  FF           	.byte $FF
004824  2  16 0C 05     	.byte $16,$0C,$05
004827  2  0D 05 04     	.byte $0D,$05,$04
00482A  2  12 05 04     	.byte $12,$05,$04
00482D  2               
00482D  2               	; Horizontal stripes wall X,Y,L
00482D  2               
00482D  2  FF           	.byte $FF
00482E  2  13 0C 03     	.byte $13,$0C,$03
004831  2  10 08 03     	.byte $10,$08,$03
004834  2               
004834  2               	; Horizontal stripes conveyor X,Y,L
004834  2               
004834  2  FF           	.byte $FF
004835  2  07 09 14     	.byte $07,$09,$14
004838  2               
004838  2               ; Screen 2
004838  2  FF FF        	.byte $FF,$FF
00483A  2  54 07        L6C3A:	.byte $54,$07
00483C  2               
00483C  2  00           	.byte $00
00483D  2  01 01 80 02  	.byte $01,$01,$80,$02,$21,$10
004841  2  21 10        
004843  2               
004843  2  0D 0C 04     	.byte $0D,$0C,$04	; Solid floor
004846  2  08 09 07     	.byte $08,$09,$07
004849  2  00 07 01     	.byte $00,$07,$01
00484C  2  00 05 13     	.byte $00,$05,$13
00484F  2  14 06 04     	.byte $14,$06,$04
004852  2  17 03 01     	.byte $17,$03,$01
004855  2               
004855  2  FF           	.byte $FF		; Hor Sinking floor X,Y,L
004856  2  07 0D 04     	.byte $07,$0D,$04
004859  2  12 0A 04     	.byte $12,$0A,$04
00485C  2  14 03 03     	.byte $14,$03,$03
00485F  2  01 07 05     	.byte $01,$07,$05
004862  2  19 06 02     	.byte $19,$06,$02
004865  2               
004865  2  FE           	.byte $FE		; Ver Sinking floor X,Y,W,H
004866  2  19 08 02 0D  	.byte $19,$08,$02,$0D
00486A  2               
00486A  2  FF           	.byte $FF		; Hor wall X,Y,L
00486B  2  12 00 0C     	.byte $12,$00,$0C
00486E  2               
00486E  2  FE           	.byte $FE		; Ver wall X,Y,W,H
00486F  2  18 06 01 0D  	.byte $18,$06,$01,$0D
004873  2               
004873  2  FE           	.byte $FE		; Ver wall X,Y,W,H
004874  2  1B 05 01 0D  	.byte $1B,$05,$01,$0D
004878  2               
004878  2  FF           	.byte $FF		; Hor conveyor X,Y,L
004879  2  02 0B 04     	.byte $02,$0B,$04
00487C  2               
00487C  2               ; Screen 3
00487C  2  FF FF                    .byte $FF,$FF
00487E  2  64 07 11 02  L6C7E:      .byte $64,$07,$11,$02,$10,$42
004882  2  10 42        
004884  2  00 21 0E 04              .byte $00,$21,$0E,$04,$0C,$06
004888  2  0C 06        
00488A  2  14 0D 0A 0D              .byte $14,$0D,$0A,$0D,$0B,$05
00488E  2  0B 05        
004890  2  18 0A 06 1A              .byte $18,$0A,$06,$1A,$07,$04
004894  2  07 04        
004896  2  00 07 06 00              .byte $00,$07,$06,$00,$05,$04
00489A  2  05 04        
00489C  2  FF 04 05 1A              .byte $FF,$04,$05,$1A,$FF,$1E
0048A0  2  FF 1E        
0048A2  2  00 01 FF 05              .byte $00,$01,$FF,$05,$09,$06
0048A6  2  09 06        
0048A8  2               ; Screen 4
0048A8  2  FF FF                    .byte $FF,$FF
0048AA  2  20 05 00 01  L6CAA:      .byte $20,$05,$00,$01,$00,$01
0048AE  2  00 01        
0048B0  2  00 21 04 05              .byte $00,$21,$04,$05,$0C,$02
0048B4  2  0C 02        
0048B6  2  06 08 02 00              .byte $06,$08,$02,$00,$05,$01
0048BA  2  05 01        
0048BC  2  06 05 01 0B              .byte $06,$05,$01,$0B,$0B,$03
0048C0  2  0B 03        
0048C2  2  0B 06 02 10              .byte $0B,$06,$02,$10,$05,$01
0048C6  2  05 01        
0048C8  2  11 0D 02 11              .byte $11,$0D,$02,$11,$09,$03
0048CC  2  09 03        
0048CE  2  12 03 06 14              .byte $12,$03,$06,$14,$06,$03
0048D2  2  06 03        
0048D4  2  15 0B 03 19              .byte $15,$0B,$03,$19,$08,$03
0048D8  2  08 03        
0048DA  2  1B 0C 03 1D              .byte $1B,$0C,$03,$1D,$0A,$01
0048DE  2  0A 01        
0048E0  2  1A 04 04 FF              .byte $1A,$04,$04,$FF,$00,$07
0048E4  2  00 07        
0048E6  2  03 FF 0E 00              .byte $03,$FF,$0E,$00,$10,$FF
0048EA  2  10 FF        
0048EC  2  00 0A 03                 .byte $00,$0A,$03
0048EF  2               ; Screen 5
0048EF  2  FF FF                    .byte $FF,$FF
0048F1  2  24 07 00 01  L6CF1:      .byte $24,$07,$00,$01,$02,$80
0048F5  2  02 80        
0048F7  2  00 13 10 00              .byte $00,$13,$10,$00,$0D,$02
0048FB  2  0D 02        
0048FD  2  02 0B 0B 03              .byte $02,$0B,$0B,$03,$09,$0A
004901  2  09 0A        
004903  2  00 05 0D 11              .byte $00,$05,$0D,$11,$0B,$07
004907  2  0B 07        
004909  2  1D 0B 01 15              .byte $1D,$0B,$01,$15,$05,$06
00490D  2  05 06        
00490F  2  1C 06 02 FF              .byte $1C,$06,$02,$FF,$00,$0B
004913  2  00 0B        
004915  2  02 11 05 04              .byte $02,$11,$05,$04,$FF,$07
004919  2  FF 07        
00491B  2  0F 10 0D 0E              .byte $0F,$10,$0D,$0E,$0A,$0D
00491F  2  0A 0D        
004921  2  0D 04 FE 07              .byte $0D,$04,$FE,$07,$0C,$01
004925  2  0C 01        
004927  2  10 FF 11 08              .byte $10,$FF,$11,$08,$0A
00492B  2  0A           
00492C  2               ; Screen 6
00492C  2  FF FF                    .byte $FF,$FF
00492E  2  20 06 20 01  L6D2E:      .byte $20,$06,$20,$01,$00,$81
004932  2  00 81        
004934  2  00 21 03 00              .byte $00,$21,$03,$00,$09,$02
004938  2  09 02        
00493A  2  02 06 02 07              .byte $02,$06,$02,$07,$05,$03
00493E  2  05 03        
004940  2  0E 05 02 06              .byte $0E,$05,$02,$06,$0A,$13
004944  2  0A 13        
004946  2  14 05 05 1B              .byte $14,$05,$05,$1B,$0C,$03
00494A  2  0C 03        
00494C  2  15 0D 02 1B              .byte $15,$0D,$02,$1B,$06,$03
004950  2  06 03        
004952  2  16 08 05 FF              .byte $16,$08,$05,$FF,$1D,$00
004956  2  1D 00        
004958  2  01 FF FE 0F              .byte $01,$FF,$FE,$0F,$06,$01
00495C  2  06 01        
00495E  2  08 FE 0F 0A              .byte $08,$FE,$0F,$0A,$01,$0D
004962  2  01 0D        
004964  2  FF 02 0D 04              .byte $FF,$02,$0D,$04
004968  2               ; Screen 7
004968  2  FF FF                    .byte $FF,$FF
00496A  2  10 02 03 02  L6D6A:      .byte $10,$02,$03,$02,$00
00496E  2  00           
00496F  2  02 00 13 10              .byte $02,$00,$13,$10,$08,$0D,$03,$00
004973  2  08 0D 03 00  
004977  2  0A 0B 0D 09              .byte $0A,$0B,$0D,$09,$03,$00,$08,$01
00497B  2  03 00 08 01  
00497F  2  00 06 03 0D              .byte $00,$06,$03,$0D,$05,$03,$0E,$03
004983  2  05 03 0E 03  
004987  2  02 FF FE 11              .byte $02,$FF,$FE,$11,$03,$0D,$0D,$FF
00498B  2  03 0D 0D FF  
00498F  2  FE 10 03 01              .byte $FE,$10,$03,$01,$0D,$0D,$0C,$04
004993  2  0D 0D 0C 04  
004997  2  FE 0D 0D 01              .byte $FE,$0D,$0D,$01,$10,$0D,$0F,$11
00499B  2  10 0D 0F 11  
00499F  2  0D 00 11 FF              .byte $0D,$00,$11,$FF,$06,$05,$05
0049A3  2  06 05 05     
0049A6  2               ; Screen 8
0049A6  2  FF FF                    .byte $FF,$FF
0049A8  2  10 02 00 02  L6DA8:      .byte $10,$02,$00,$02,$03,$82,$00
0049AC  2  03 82 00     
0049AF  2  13 10 03 0C              .byte $13,$10,$03,$0C,$02,$03,$0C,$02
0049B3  2  02 03 0C 02  
0049B7  2  00 0A 01 01              .byte $00,$0A,$01,$01,$07,$03,$00,$05
0049BB  2  07 03 00 05  
0049BF  2  03 08 05 06              .byte $03,$08,$05,$06,$0E,$02,$02,$08
0049C3  2  0E 02 02 08  
0049C7  2  0B 02 0B 0A              .byte $0B,$02,$0B,$0A,$03,$07,$08,$03
0049CB  2  03 07 08 03  
0049CF  2  11 05 02 14              .byte $11,$05,$02,$14,$06,$04,$11,$09
0049D3  2  06 04 11 09  
0049D7  2  05 11 0D 02              .byte $05,$11,$0D,$02,$15,$0C,$05,$1A
0049DB  2  15 0C 05 1A  
0049DF  2  0A 04 1A 07              .byte $0A,$04,$1A,$07,$01,$1D,$06,$01
0049E3  2  01 1D 06 01  
0049E7  2  1C 02 02 FF              .byte $1C,$02,$02,$FF,$10,$0E,$01,$FF
0049EB  2  10 0E 01 FF  
0049EF  2  FE 10 00 01              .byte $FE,$10,$00,$01,$0F,$FE,$13,$00
0049F3  2  0F FE 13 00  
0049F7  2  01 02 FE 0D              .byte $01,$02,$FE,$0D,$0D,$01,$0F,$FF
0049FB  2  0D 01 0F FF  
0049FF  2  0A 0D 03                 .byte $0A,$0D,$03
004A02  2               ; Screen 9
004A02  2  FF FF                    .byte $FF,$FF
004A04  2  10 02 00     L6E04:      .byte $10,$02,$00
004A07  2  02 00 83 00              .byte $02,$00,$83,$00,$05,$03,$02,$0C
004A0B  2  05 03 02 0C  
004A0F  2  1A 02 08 08              .byte $1A,$02,$08,$08,$00,$05,$1C,$00
004A13  2  00 05 1C 00  
004A17  2  0A 02 1C 0D              .byte $0A,$02,$1C,$0D,$02,$1C,$07,$02
004A1B  2  02 1C 07 02  
004A1F  2  15 09 07 FF              .byte $15,$09,$07,$FF,$02,$00,$01,$FF
004A23  2  02 00 01 FF  
004A27  2  FE 02 00 01              .byte $FE,$02,$00,$01,$01,$FF,$0C,$08
004A2B  2  01 FF 0C 08  
004A2F  2  07 FD 04 FE              .byte $07,$FD,$04,$FE,$04,$04,$02,$0E
004A33  2  04 04 02 0E  
004A37  2  FE 0A 04 02              .byte $FE,$0A,$04,$02,$0E,$FE,$13,$04
004A3B  2  0E FE 13 04  
004A3F  2  02 0E FE 18              .byte $02,$0E,$FE,$18,$04,$02,$0E,$FD
004A43  2  04 02 0E FD  
004A47  2  03                       .byte $03
004A48  2               ; Screen 10
004A48  2  FF FF                    .byte $FF,$FF
004A4A  2  20 01 32 01  L6E4A:      .byte $20,$01,$32,$01,$34
004A4E  2  34           
004A4F  2  43 00 11 10              .byte $43,$00,$11,$10,$00,$0D,$03,$00
004A53  2  00 0D 03 00  
004A57  2  0A 04 00 08              .byte $0A,$04,$00,$08,$05,$00,$06,$04
004A5B  2  05 00 06 04  
004A5F  2  00 02 06 0C              .byte $00,$02,$06,$0C,$00,$03,$07,$05
004A63  2  00 03 07 05  
004A67  2  01 08 09 07              .byte $01,$08,$09,$07,$10,$0A,$07,$10
004A6B  2  10 0A 07 10  
004A6F  2  07 07 10 04              .byte $07,$07,$10,$04,$04,$14,$00,$0A
004A73  2  04 14 00 0A  
004A77  2  1A 02 04 16              .byte $1A,$02,$04,$16,$05,$08,$1C,$09
004A7B  2  05 08 1C 09  
004A7F  2  02 1B 0D 03              .byte $02,$1B,$0D,$03,$FF,$04,$0A,$02
004A83  2  FF 04 0A 02  
004A87  2  08 05 07 17              .byte $08,$05,$07,$17,$07,$03,$17,$0B
004A8B  2  07 03 17 0B  
004A8F  2  03 FF FE 0F              .byte $03,$FF,$FE,$0F,$00,$01,$0C,$FF
004A93  2  00 01 0C FF  
004A97  2  00 0F 1E 07              .byte $00,$0F,$1E,$07,$0C,$0A
004A9B  2  0C 0A        
004A9D  2               ; Screen 11
004A9D  2  FF FF                    .byte $FF,$FF
004A9F  2  64 07 00 00  L6E9F:      .byte $64,$07,$00,$00,$76,$80,$00,$05
004AA3  2  76 80 00 05  
004AA7  2  04 00 03 04              .byte $04,$00,$03,$04,$04,$05,$06,$00
004AAB  2  04 05 06 00  
004AAF  2  08 02 00 0D              .byte $08,$02,$00,$0D,$02,$1B,$0C,$03
004AB3  2  02 1B 0C 03  
004AB7  2  16 0D 03 1B              .byte $16,$0D,$03,$1B,$0A,$01,$1C,$08
004ABB  2  0A 01 1C 08  
004ABF  2  02 1C 06 02              .byte $02,$1C,$06,$02,$0A,$09,$09,$0E
004AC3  2  0A 09 09 0E  
004AC7  2  05 0A 08 0B              .byte $05,$0A,$08,$0B,$01,$FF,$05,$0B
004ACB  2  01 FF 05 0B  
004ACF  2  03 FF 00 00              .byte $03,$FF,$00,$00,$05,$FF,$04,$08
004AD3  2  05 FF 04 08  
004AD7  2  02                       .byte $02
004AD8  2               ; Screen 12
004AD8  2  FF FF                    .byte $FF,$FF
004ADA  2  50 06 00 02  L6EDA:      .byte $50,$06,$00,$02,$03
004ADE  2  03           
004ADF  2  84 00 13 10              .byte $84,$00,$13,$10,$0A,$0D,$03,$00
004AE3  2  0A 0D 03 00  
004AE7  2  0C 06 05 0A              .byte $0C,$06,$05,$0A,$01,$05,$07,$02
004AEB  2  01 05 07 02  
004AEF  2  02 08 01 00              .byte $02,$08,$01,$00,$05,$03,$09,$09
004AF3  2  05 03 09 09  
004AF7  2  04 11 0A 03              .byte $04,$11,$0A,$03,$18,$0B,$02,$18
004AFB  2  18 0B 02 18  
004AFF  2  08 06 1D 06              .byte $08,$06,$1D,$06,$01,$17,$05,$02
004B03  2  01 17 05 02  
004B07  2  FF 11 05 06              .byte $FF,$11,$05,$06,$08,$05,$05,$0E
004B0B  2  08 05 05 0E  
004B0F  2  02 02 FF 10              .byte $02,$02,$FF,$10,$00,$01,$14,$00
004B13  2  00 01 14 00  
004B17  2  01 FE 10 05              .byte $01,$FE,$10,$05,$01,$0F,$FE,$0D
004B1B  2  01 0F FE 0D  
004B1F  2  05 01 0A FE              .byte $05,$01,$0A,$FE,$0D,$0D,$01,$0F
004B23  2  0D 0D 01 0F  
004B27  2  0D 0F 04 FF              .byte $0D,$0F,$04,$FF,$11,$0D,$0B
004B2B  2  11 0D 0B     
004B2E  2               ; Screen 13
004B2E  2  FF FF                    .byte $FF,$FF
004B30  2  20 07 50 02  L6F30:      .byte $20,$07,$50,$02,$05,$40,$00
004B34  2  05 40 00     
004B37  2  05 10 00 0F              .byte $05,$10,$00,$0F,$1E,$06,$03,$18
004B3B  2  1E 06 03 18  
004B3F  2  06 06 18 06              .byte $06,$06,$18,$06,$0C,$18,$06,$09
004B43  2  0C 18 06 09  
004B47  2  18 FF FE 02              .byte $18,$FF,$FE,$02,$01,$01,$0F,$FF
004B4B  2  01 01 0F FF  
004B4F  2  00 00 1E FF              .byte $00,$00,$1E,$FF,$02,$0F,$1A,$FD
004B53  2  02 0F 1A FD  
004B57  2  04 08 06 02              .byte $04,$08,$06,$02,$09,$0C,$02,$15
004B5B  2  09 0C 02 15  
004B5F  2  06 02 14 0C              .byte $06,$02,$14,$0C,$02,$0E,$06,$02
004B63  2  02 0E 06 02  
004B67  2  0E 0C 02 10              .byte $0E,$0C,$02,$10,$09,$02,$1B,$06
004B6B  2  09 02 1B 06  
004B6F  2  02 1A 0C 02              .byte $02,$1A,$0C,$02,$0B,$09,$02,$18
004B73  2  0B 09 02 18  
004B77  2  09 02 18 03              .byte $09,$02,$18,$03,$02,$FD,$04
004B7B  2  02 FD 04     
004B7E  2               ; Screen 14
004B7E  2  FF FF                    .byte $FF,$FF
004B80  2  24 05 60 02  L6F80:      .byte $24,$05,$60,$02,$27,$85,$00
004B84  2  27 85 00     
004B87  2  13 03 00 0B              .byte $13,$03,$00,$0B,$00,$02,$06,$00
004B8B  2  00 02 06 00  
004B8F  2  04 09 00 06              .byte $04,$09,$00,$06,$0D,$00,$06,$07
004B93  2  0D 00 06 07  
004B97  2  00 08 0B 00              .byte $00,$08,$0B,$00,$0C,$09,$00,$0A
004B9B  2  0C 09 00 0A  
004B9F  2  06 00 0E 05              .byte $06,$00,$0E,$05,$00,$12,$06,$00
004BA3  2  00 12 06 00  
004BA7  2  16 07 00 14              .byte $16,$07,$00,$14,$09,$00,$1A,$06
004BAB  2  09 00 1A 06  
004BAF  2  00 1C 09 00              .byte $00,$1C,$09,$00,$18,$0B,$00,$FD
004BB3  2  18 0B 00 FD  
004BB7  2  02 00 0F 1E              .byte $02,$00,$0F,$1E,$FF,$0E,$0B,$06
004BBB  2  FF 0E 0B 06  
004BBF  2               ; Screen 15
004BBF  2  FF FF                    .byte $FF,$FF
004BC1  2  20 06 00 00  L6FC1:      .byte $20,$06,$00,$00,$78,$41
004BC5  2  78 41        
004BC7  2  00 05 06 00              .byte $00,$05,$06,$00,$0A,$02,$02,$08
004BCB  2  0A 02 02 08  
004BCF  2  02 00 05 05              .byte $02,$00,$05,$05,$04,$0C,$03,$0B
004BD3  2  04 0C 03 0B  
004BD7  2  0D 02 0B 0A              .byte $0D,$02,$0B,$0A,$02,$0B,$07,$02
004BDB  2  02 0B 07 02  
004BDF  2  11 0B 02 11              .byte $11,$0B,$02,$11,$08,$02,$17,$06
004BE3  2  08 02 17 06  
004BE7  2  02 18 09 02              .byte $02,$18,$09,$02,$16,$0C,$02,$17
004BEB  2  16 0C 02 17  
004BEF  2  03 05 FF 06              .byte $03,$05,$FF,$06,$07,$01,$FF,$05
004BF3  2  07 01 FF 05  
004BF7  2  00 19 FF 07              .byte $00,$19,$FF,$07,$03,$10,$FE,$1C
004BFB  2  03 10 FE 1C  
004BFF  2  01 02 0F 07              .byte $01,$02,$0F,$07,$03,$10
004C03  2  03 10        
004C05  2               ; Screen 16
004C05  2  FF FF                    .byte $FF,$FF
004C07  2  10 06 00 02  L7007:      .byte $10,$06,$00,$02,$09,$86,$00,$10
004C0B  2  09 86 00 10  
004C0F  2  08 00 0C 09              .byte $08,$00,$0C,$09,$0B,$0B,$02,$00
004C13  2  0B 0B 02 00  
004C17  2  05 01 05 05              .byte $05,$01,$05,$05,$01,$03,$07,$01
004C1B  2  01 03 07 01  
004C1F  2  14 0D 01 1A              .byte $14,$0D,$01,$1A,$0D,$01,$1A,$0B
004C23  2  0D 01 1A 0B  
004C27  2  01 19 07 05              .byte $01,$19,$07,$05,$16,$05,$03,$FF
004C2B  2  16 05 03 FF  
004C2F  2  00 09 02 FF              .byte $00,$09,$02,$FF,$09,$0B,$02,$FE
004C33  2  09 0B 02 FE  
004C37  2  0A 05 01 09              .byte $0A,$05,$01,$09,$0D,$05,$01,$0D
004C3B  2  0D 05 01 0D  
004C3F  2  06 02 0D 07              .byte $06,$02,$0D,$07,$03,$0D,$08,$04
004C43  2  03 0D 08 04  
004C47  2  FF 02 09 19              .byte $FF,$02,$09,$19
004C4B  2               ; Screen 17
004C4B  2  FF FF                    .byte $FF,$FF
004C4D  2  20 06        L704D:      .byte $20,$06
004C4F  2  03 01 50 87              .byte $03,$01,$50,$87,$00,$21,$04,$1A
004C53  2  00 21 04 1A  
004C57  2  0E 04 1C 05              .byte $0E,$04,$1C,$05,$02,$00,$05,$02
004C5B  2  02 00 05 02  
004C5F  2  00 0F 1E FF              .byte $00,$0F,$1E,$FF,$02,$05,$1A,$FE
004C63  2  02 05 1A FE  
004C67  2  00 06 1E 0D              .byte $00,$06,$1E,$0D,$FF,$1C,$00,$02
004C6B  2  FF 1C 00 02  
004C6F  2  FF 0D 08 05              .byte $FF,$0D,$08,$05,$FD,$04,$FE,$02
004C73  2  FD 04 FE 02  
004C77  2  08 02 0D FE              .byte $08,$02,$0D,$FE,$09,$05,$02,$0D
004C7B  2  09 05 02 0D  
004C7F  2  FE 12 05 02              .byte $FE,$12,$05,$02,$0A,$FE,$1A,$05
004C83  2  0A FE 1A 05  
004C87  2  02 0D FD 04              .byte $02,$0D,$FD,$04
004C8B  2               ; Screen 18
004C8B  2  FF FF                    .byte $FF,$FF
004C8D  2  10 06        L708D:      .byte $10,$06
004C8F  2  00 00 40 88              .byte $00,$00,$40,$88,$00,$21,$03,$00
004C93  2  00 21 03 00  
004C97  2  0F 1E 00 0D              .byte $0F,$1E,$00,$0D,$02,$02,$0C,$1A
004C9B  2  02 02 0C 1A  
004C9F  2  02 09 07 00              .byte $02,$09,$07,$00,$07,$02,$02,$05
004CA3  2  07 02 02 05  
004CA7  2  1C 0A 08 12              .byte $1C,$0A,$08,$12,$1C,$0A,$02,$FD
004CAB  2  1C 0A 02 FD  
004CAF  2  02 1B 00 01              .byte $02,$1B,$00,$01,$FD,$04,$FE,$04
004CB3  2  FD 04 FE 04  
004CB7  2  05 02 0D FE              .byte $05,$02,$0D,$FE,$09,$05,$02,$0D
004CBB  2  09 05 02 0D  
004CBF  2  FE 13 05 02              .byte $FE,$13,$05,$02,$0D,$FE,$18,$05
004CC3  2  0D FE 18 05  
004CC7  2  02 0D FD 04              .byte $02,$0D,$FD,$04
004CCB  2               ; Screen 19
004CCB  2  FF FF                    .byte $FF,$FF
004CCD  2  24 07        L70CD:      .byte $24,$07
004CCF  2  00 01 00 89              .byte $00,$01,$00,$89,$00,$13,$07,$00
004CD3  2  00 13 07 00  
004CD7  2  05 02 02 08              .byte $05,$02,$02,$08,$03,$08,$0D,$0E
004CDB  2  03 08 0D 0E  
004CDF  2  05 06 03 07              .byte $05,$06,$03,$07,$0A,$04,$17,$0B
004CE3  2  0A 04 17 0B  
004CE7  2  02 16 07 02              .byte $02,$16,$07,$02,$1A,$05,$04,$1B
004CEB  2  1A 05 04 1B  
004CEF  2  09 03 FF FD              .byte $09,$03,$FF,$FD,$02,$FE,$0A,$03
004CF3  2  02 FE 0A 03  
004CF7  2  0A 0B FF 02              .byte $0A,$0B,$FF,$02,$0C,$03,$FF,$FE
004CFB  2  0C 03 FF FE  
004CFF  2  0A 04 0A 06              .byte $0A,$04,$0A,$06,$FE,$0A,$08,$0A
004D03  2  FE 0A 08 0A  
004D07  2  0A FD 03                 .byte $0A,$FD,$03
004D0A  2               ; Screen 20
004D0A  2  FF FF                    .byte $FF,$FF
004D0C  2  20 06 00     L710C:      .byte $20,$06,$00
004D0F  2  01 00 8A 01              .byte $01,$00,$8A,$01,$21,$04,$07,$05
004D13  2  21 04 07 05  
004D17  2  07 0D 03 07              .byte $07,$0D,$03,$07,$00,$08,$02,$08
004D1B  2  00 08 02 08  
004D1F  2  07 07 1B 07              .byte $07,$07,$1B,$07,$03,$10,$07,$04
004D23  2  03 10 07 04  
004D27  2  13 0D 01 10              .byte $13,$0D,$01,$10,$0C,$01,$16,$0D
004D2B  2  0C 01 16 0D  
004D2F  2  01 18 09 01              .byte $01,$18,$09,$01,$FF,$00,$09,$01
004D33  2  FF 00 09 01  
004D37  2  14 03 03 14              .byte $14,$03,$03,$14,$0A,$01,$17,$0D
004D3B  2  0A 01 17 0D  
004D3F  2  02 FF 0C 00              .byte $02,$FF,$0C,$00,$12,$17,$03,$05
004D43  2  12 17 03 05  
004D47  2  03 07 05 00              .byte $03,$07,$05,$00,$0B,$02,$00,$0C
004D4B  2  0B 02 00 0C  
004D4F  2  0B 0D 0E 03              .byte $0B,$0D,$0E,$03,$0E,$0D,$02,$0F
004D53  2  0E 0D 02 0F  
004D57  2  0C 01 FE 0F              .byte $0C,$01,$FE,$0F,$07,$01,$0A,$0A
004D5B  2  07 01 0A 0A  
004D5F  2  0B 01 FF 02              .byte $0B,$01,$FF,$02,$0B,$08,$FE,$1C
004D63  2  0B 08 FE 1C  
004D67  2  03 02 07 02              .byte $03,$02,$07,$02,$0B,$08
004D6B  2  0B 08        
004D6D  2               
004D6D  2  FF FF                    .byte $FF,$FF
004D6F  2               
004D6F  2               ;------------------------------------------------
004D6F  2               ; Bush/key/rock datatable
004D6F  2               ; Byte 0: bit 0-5 =
004D6F  2               ;         bit 6-7 = nr of items
004D6F  2               ; Byte 1: bit 0-4 = y
004D6F  2               ;         bit 5-7 = dx
004D6F  2               ;------------------------------------------------
004D6F  2               
004D6F  2  FF           L716F:      .byte $FF
004D70  2  FF                       .byte $FF
004D71  2               ; Level 1
004D71  2  C1 80 F1                 .byte $C1,$80,$F1		; keys left
004D74  2  FE 74 C0 D6              .byte $FE,$74,$C0,$D6	; keys right
004D78  2  BC                       .byte $BC			; bush left
004D79  2  FE 48 64 A4              .byte $FE,$48,$64,$A4	; bush right
004D7D  2  FD A0 F0                 .byte $FD,$A0,$F0		; rocks left
004D80  2  FF                       .byte $FF
004D81  2               
004D81  2               ; Level 2
004D81  2  C1 29 61                 .byte $C1,$29,$61		; keys left
004D84  2  FE 71 97 2C              .byte $FE,$71,$97,$2C	; keys right
004D88  2  FD                       .byte $FD			; rocks left
004D89  2  FE D1                    .byte $FE,$D1		; rocks right
004D8B  2  FF                       .byte $FF
004D8C  2               
004D8C  2               ; Level 3
004D8C  2  C2 50 E0                 .byte $C2,$50,$E0		; keys left
004D8F  2  FE 60 D6 46              .byte $FE,$60,$D6,$46	; keys right
004D93  2  FD 08 03 90              .byte $FD,$08,$03,$90,$00	; spiders left	
004D97  2  00           
004D98  2  FE 10 01 A0              .byte $FE,$10,$01,$A0,$00	; spiders right
004D9C  2  00           
004D9D  2  FF                       .byte $FF
004D9E  2               
004D9E  2               ; Level 4
004D9E  2  C2 00 B1 F6              .byte $C2,$00,$B1,$F6	; keys left
004DA2  2  FE 81 D6                 .byte $FE,$81,$D6		; keys right
004DA5  2  FD 60 00                 .byte $FD,$60,$00		; spider left
004DA8  2  FE 6C 00                 .byte $FE,$6C,$00		; spider right
004DAB  2  FF                       .byte $FF
004DAC  2               
004DAC  2               ; Level 5
004DAC  2  C0 6C 8C 96              .byte $C0,$6C,$8C,$96	; keys left
004DB0  2  FE D1 C7                 .byte $FE,$D1,$C7		; keys right
004DB3  2  4E                       .byte $4E			; bush left
004DB4  2  FE 7E 8E 47              .byte $FE,$7E,$8E,$47,$74	; bush right
004DB8  2  74           
004DB9  2  FD                       .byte $FD			; rocks left
004DBA  2  FE 30                    .byte $FE,$30		; rocks right
004DBC  2  FF                       .byte $FF
004DBD  2               
004DBD  2               ; Level 6
004DBD  2  C4 0A CB E6              .byte $C4,$0A,$CB,$E6	; keys left
004DC1  2  FE 06 D7                 .byte $FE,$06,$D7		; keys right
004DC4  2  2C                       .byte $2C			; bush left
004DC5  2  FD                       .byte $FD			; cross left
004DC6  2  FE 0B 44                 .byte $FE,$0B,$44		; cross right
004DC9  2  FF                       .byte $FF
004DCA  2               
004DCA  2               ; Level 7
004DCA  2  C5                       .byte $C5			; keys left
004DCB  2  FE 2A 36 A7              .byte $FE,$2A,$36,$A7,$D3,$DB ; keys right
004DCF  2  D3 DB        
004DD1  2  FD                       .byte $FD			; star left
004DD2  2  FE 6C 68 BA              .byte $FE,$6C,$68,$BA,$B5	; star right
004DD6  2  B5           
004DD7  2  FF                       .byte $FF
004DD8  2               
004DD8  2               ; Level 8
004DD8  2  80 18 D6 B2              .byte $80,$18,$D6,$B2	; keys left
004DDC  2  FE CD                    .byte $FE,$CD		; keys right
004DDE  2  FE 6E                    .byte $FE,$6E		; bush right
004DE0  2  FF                       .byte $FF
004DE1  2               
004DE1  2               ; Level 9
004DE1  2  00 F1                    .byte $00,$F1		; keys left
004DE3  2  F1                       .byte $F1
004DE4  2  FE                       .byte $FE
004DE5  2  FF                       .byte $FF
004DE6  2               
004DE6  2               ; Level 10
004DE6  2  C6 D1 B6                 .byte $C6,$D1,$B6		; keys left
004DE9  2  FE 18 42 D1              .byte $FE,$18,$42,$D1	; keys right
004DED  2  FD 23 09 90              .byte $FD,$23,$09,$90	; leaf left
004DF1  2  FE 10 30 41              .byte $FE,$10,$30,$41,$6B,$DA ; leaf right
004DF5  2  6B DA        
004DF7  2  FF                       .byte $FF
004DF8  2               
004DF8  2               ; Level 11
004DF8  2  C2 04                    .byte $C2,$04		; coins left
004DFA  2  FE 26 70 D1              .byte $FE,$26,$70,$D1,$DD	; coins right
004DFE  2  DD           
004DFF  2  FD BA 02                 .byte $FD,$BA,$02		; spider left
004E02  2  FE 20 01 2A              .byte $FE,$20,$01,$2A,$01,$76,$03 ; spider right
004E06  2  01 76 03     
004E09  2  FF                       .byte $FF
004E0A  2               
004E0A  2               ; Level 12
004E0A  2  C0 16 E3 F7              .byte $C0,$16,$E3,$F7	; keys left
004E0E  2  FE 95 CD                 .byte $FE,$95,$CD		; keys right
004E11  2  FE 6C BC                 .byte $FE,$6C,$BC		; bush right
004E14  2  FF                       .byte $FF
004E15  2               
004E15  2               ; Level 13
004E15  2  C0 AC 96                 .byte $C0,$AC,$96		; clock left
004E18  2  FE 93 99 29              .byte $FE,$93,$99,$29	; clock right
004E1C  2  FE                       .byte $FE
004E1D  2  FF                       .byte $FF
004E1E  2               
004E1E  2               ; Level 14
004E1E  2  80 28 F7                 .byte $80,$28,$F7		; comb left
004E21  2  FE 62 A7                 .byte $FE,$62,$A7		; comb right
004E24  2  FE                       .byte $FE
004E25  2  FF                       .byte $FF
004E26  2               
004E26  2               ; Level 15
004E26  2  42 B6                    .byte $42,$B6		; money left
004E28  2  FE 82 9E                 .byte $FE,$82,$9E		; money right
004E2B  2  FD 74 01                 .byte $FD,$74,$01		; spider left
004E2E  2  FE B4 06                 .byte $FE,$B4,$06		; spider right
004E31  2  FF                       .byte $FF
004E32  2               
004E32  2               ; Level 16
004E32  2  87 00 C7                 .byte $87,$00,$C7		; blocks left
004E35  2  FE 0A D2                 .byte $FE,$0A,$D2		; blocks right
004E38  2  FD                       .byte $FD			; pins left
004E39  2  FE 6E 7E 8E              .byte $FE,$6E,$7E,$8E	; pins right
004E3D  2  FF                       .byte $FF
004E3E  2               
004E3E  2               ; Level 17
004E3E  2  C8 09 E7                 .byte $C8,$09,$E7		; keys left
004E41  2  FE 2A 75 9B              .byte $FE,$2A,$75,$9B	; keys right
004E45  2  54 84 C4 F4              .byte $54,$84,$C4,$F4	; bush left
004E49  2  FE 54 74                 .byte $FE,$54,$74		; bush right
004E4C  2  FD 26 8B                 .byte $FD,$26,$8B		; cross left
004E4F  2  FE 5A 97                 .byte $FE,$5A,$97		; cross right
004E52  2  FF                       .byte $FF
004E53  2               
004E53  2               ; Level 18
004E53  2  00 E1                    .byte $00,$E1		; key left
004E55  2  E1                       .byte $E1		
004E56  2  FE                       .byte $FE
004E57  2  FF                       .byte $FF
004E58  2               
004E58  2               ; Level 19
004E58  2  C1 02 C8                 .byte $C1,$02,$C8		; keys left
004E5B  2  FE D1 DC 18              .byte $FE,$D1,$DC,$18	; keys right
004E5F  2  FE                       .byte $FE
004E60  2  FF                       .byte $FF
004E61  2               
004E61  2               ; Level 20
004E61  2  C2 88                    .byte $C2,$88		; keys left
004E63  2  FE 0D 28 41              .byte $FE,$0D,$28,$41,$DB	; keys right
004E67  2  DB           
004E68  2  66                       .byte $66			; bush left
004E69  2  FE 06 2E 4E              .byte $FE,$06,$2E,$4E	; bush right
004E6D  2  FD 40 02                 .byte $FD,$40,$02		; spider left
004E70  2  FE B8 03                 .byte $FE,$B8,$03		; spider right
004E73  2  FF                       .byte $FF
004E74  2               
004E74  2               ;------------------------------------------------
004E74  2               
004E74  2  F0 07 C9                 .byte $F0,$07,$C9
004E77  2  FF                       .byte $FF
004E78  2  F0 09 00 00              .byte $F0,$09,$00,$00,$00,$00,$00
004E7C  2  00 00 00     
004E7F  2  00                       .byte $00
004E80  2               
004E80  2               ;------------------------------------------------
004E80  2               ; HORIZONTAL GUARDS
004E80  2               ;------------------------------------------------
004E80  2               ;------------------------------------------------
004E80  2               ; Level 1, 4x Top hor.guard walking robot
004E80  2               ;------------------------------------------------
004E80  2               
004E80  2  1F 39 19 0F  L7280:      .byte $1F,$39,$19,$0F,$9F,$5F,$FF,$5E
004E84  2  9F 5F FF 5E  
004E88  2  20 E0 E0 20              .byte $20,$E0,$E0,$20,$00,$80,$C0,$00
004E8C  2  00 80 C0 00  
004E90  2               
004E90  2  07 0E 06 23              .byte $07,$0E,$06,$23,$17,$17,$3F,$17
004E94  2  17 17 3F 17  
004E98  2  C4 7C 7C C4              .byte $C4,$7C,$7C,$C4,$C0,$E0,$F0,$F0
004E9C  2  C0 E0 F0 F0  
004EA0  2               
004EA0  2  01 03 01 00              .byte $01,$03,$01,$00,$01,$09,$05,$0F
004EA4  2  01 09 05 0F  
004EA8  2  F2 9E 9E F2              .byte $F2,$9E,$9E,$F2,$F0,$F8,$FC,$E0
004EAC  2  F0 F8 FC E0  
004EB0  2               
004EB0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$03,$00
004EB4  2  00 00 03 00  
004EB8  2  7D E7 67 3D              .byte $7D,$E7,$67,$3D,$7C,$7F,$FC,$70
004EBC  2  7C 7F FC 70  
004EC0  2               
004EC0  2               ;------------------------------------------------
004EC0  2               ; Level 1, 4x Feet hor.guard walking robot
004EC0  2               ;------------------------------------------------
004EC0  2               
004EC0  2  9F 1F 0E 1F              .byte $9F,$1F,$0E,$1F,$BB,$71,$20,$10
004EC4  2  BB 71 20 10  
004EC8  2  C0 80 00 00              .byte $C0,$80,$00,$00,$80,$E0,$C0,$80
004ECC  2  80 E0 C0 80  
004ED0  2               
004ED0  2  17 27 03 03              .byte $17,$27,$03,$03,$06,$06,$1C,$06
004ED4  2  06 06 1C 06  
004ED8  2  F0 E0 80 80              .byte $F0,$E0,$80,$80,$C0,$C0,$38,$60
004EDC  2  C0 C0 38 60  
004EE0  2               
004EE0  2  05 09 00 00              .byte $05,$09,$00,$00,$00,$00,$00,$01
004EE4  2  00 00 00 01  
004EE8  2  FC F8 E0 E0              .byte $FC,$F8,$E0,$E0,$E0,$E0,$E0,$F0
004EEC  2  E0 E0 E0 F0  
004EF0  2               
004EF0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$01,$00
004EF4  2  00 00 01 00  
004EF8  2  7C 7F 78 38              .byte $7C,$7F,$78,$38,$6C,$6C,$C7,$6C
004EFC  2  6C 6C C7 6C  
004F00  2               
004F00  2               ;------------------------------------------------
004F00  2               ; Level 2, 4x Top hor.guard penguin
004F00  2               ;------------------------------------------------
004F00  2               
004F00  2  0C 1E 1B 1E              .byte $0C,$1E,$1B,$1E,$39,$32,$3A,$3D
004F04  2  39 32 3A 3D  
004F08  2  00 00 00 C0              .byte $00,$00,$00,$C0,$00,$00,$00,$00
004F0C  2  00 00 00 00  
004F10  2               
004F10  2  03 07 06 07              .byte $03,$07,$06,$07,$0E,$0C,$0F,$0D
004F14  2  0E 0C 0F 0D  
004F18  2  00 80 C0 B0              .byte $00,$80,$C0,$B0,$40,$80,$80,$C0
004F1C  2  40 80 80 C0  
004F20  2               
004F20  2  00 01 01 01              .byte $00,$01,$01,$01,$03,$03,$03,$03
004F24  2  03 03 03 03  
004F28  2  C0 E0 B0 EC              .byte $C0,$E0,$B0,$EC,$90,$20,$A0,$D0
004F2C  2  90 20 A0 D0  
004F30  2               
004F30  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
004F34  2  00 00 00 00  
004F38  2  30 78 6C 7B              .byte $30,$78,$6C,$7B,$E4,$C8,$E8,$F4
004F3C  2  E4 C8 E8 F4  
004F40  2               
004F40  2               ;------------------------------------------------
004F40  2               ; Level 2, 4x Feet hor.guard penguin
004F40  2               ;------------------------------------------------
004F40  2               
004F40  2  6D 69 69 61              .byte $6D,$69,$69,$61,$71,$BE,$08,$1E
004F44  2  71 BE 08 1E  
004F48  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
004F4C  2  00 00 00 00  
004F50  2               
004F50  2  1B 1B 16 18              .byte $1B,$1B,$16,$18,$1C,$2F,$05,$0F
004F54  2  1C 2F 05 0F  
004F58  2  40 40 40 40              .byte $40,$40,$40,$40,$40,$80,$40,$80
004F5C  2  40 80 40 80  
004F60  2               
004F60  2  06 06 06 06              .byte $06,$06,$06,$06,$07,$0B,$02,$07
004F64  2  07 0B 02 07  
004F68  2  D0 90 90 10              .byte $D0,$90,$90,$10,$10,$E8,$50,$E0
004F6C  2  10 E8 50 E0  
004F70  2               
004F70  2  01 01 01 01              .byte $01,$01,$01,$01,$01,$00,$00,$00
004F74  2  01 00 00 00  
004F78  2  B4 94 94 84              .byte $B4,$94,$94,$84,$84,$F8,$52,$FC
004F7C  2  84 F8 52 FC  
004F80  2               
004F80  2               ;------------------------------------------------
004F80  2               ; Level 3, 4x Top hor.guard bird
004F80  2               ;------------------------------------------------
004F80  2               
004F80  2  03 06 07 03  L7380:      .byte $03,$06,$07,$03,$01,$00,$BE,$E3
004F84  2  01 00 BE E3  
004F88  2  00 80 C0 00              .byte $00,$80,$C0,$00,$80,$C0,$C0,$80
004F8C  2  80 C0 C0 80  
004F90  2               
004F90  2  00 01 01 00              .byte $00,$01,$01,$00,$00,$00,$2F,$38
004F94  2  00 00 2F 38  
004F98  2  C0 A0 F0 C0              .byte $C0,$A0,$F0,$C0,$60,$30,$B0,$E0
004F9C  2  60 30 B0 E0  
004FA0  2               
004FA0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$0B,$0E
004FA4  2  00 00 0B 0E  
004FA8  2  30 68 7E 30              .byte $30,$68,$7E,$30,$18,$0C,$EC,$38
004FAC  2  18 0C EC 38  
004FB0  2               
004FB0  2  00 00 00 00              .byte $00,$00,$00,$00,$01,$00,$03,$03
004FB4  2  01 00 03 03  
004FB8  2  0C 1A 1F AC              .byte $0C,$1A,$1F,$AC,$56,$A3,$43,$86
004FBC  2  56 A3 43 86  
004FC0  2               
004FC0  2               ;------------------------------------------------
004FC0  2               ; Level 3, 4x Feet hor.guard bird
004FC0  2               ;------------------------------------------------
004FC0  2               
004FC0  2  40 AA 7F 3F              .byte $40,$AA,$7F,$3F,$04,$04,$04,$0A
004FC4  2  04 04 04 0A  
004FC8  2  80 80 80 00              .byte $80,$80,$80,$00,$00,$00,$00,$00
004FCC  2  00 00 00 00  
004FD0  2               
004FD0  2  18 30 15 0A              .byte $18,$30,$15,$0A,$15,$02,$05,$00
004FD4  2  15 02 05 00  
004FD8  2  C0 C0 C0 80              .byte $C0,$C0,$C0,$80,$00,$00,$00,$00
004FDC  2  00 00 00 00  
004FE0  2               
004FE0  2  04 0A 07 03              .byte $04,$0A,$07,$03,$00,$01,$00,$00
004FE4  2  00 01 00 00  
004FE8  2  10 B0 F0 E0              .byte $10,$B0,$F0,$E0,$80,$40,$00,$00
004FEC  2  80 40 00 00  
004FF0  2               
004FF0  2  01 03 01 00              .byte $01,$03,$01,$00,$00,$00,$00,$00
004FF4  2  00 00 00 00  
004FF8  2  0C FC FC F8              .byte $0C,$FC,$FC,$F8,$20,$20,$50,$00
004FFC  2  20 20 50 00  
005000  2               
005000  2               ;------------------------------------------------
005000  2               ; Level 4, 4x Top hor.guard seal
005000  2               ;------------------------------------------------
005000  2               
005000  2  07 0B 13 13              .byte $07,$0B,$13,$13,$13,$0B,$07,$01
005004  2  13 0B 07 01  
005008  2  00 80 C0 C0              .byte $00,$80,$C0,$C0,$C0,$80,$00,$00
00500C  2  C0 80 00 00  
005010  2               
005010  2  01 02 05 05              .byte $01,$02,$05,$05,$05,$02,$01,$00
005014  2  05 02 01 00  
005018  2  C0 E0 D0 D0              .byte $C0,$E0,$D0,$D0,$D0,$E0,$C0,$40
00501C  2  D0 E0 C0 40  
005020  2               
005020  2  00 00 01 01              .byte $00,$00,$01,$01,$01,$00,$00,$00
005024  2  01 00 00 00  
005028  2  70 E8 E4 E4              .byte $70,$E8,$E4,$E4,$E4,$E8,$70,$10
00502C  2  E4 E8 70 10  
005030  2               
005030  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
005034  2  00 00 00 00  
005038  2  1C 36 63 63              .byte $1C,$36,$63,$63,$63,$36,$1C,$04
00503C  2  63 36 1C 04  
005040  2               
005040  2               ;------------------------------------------------
005040  2               ; Level 4, 4x Bottom hor.guard seal
005040  2               ;------------------------------------------------
005040  2               
005040  2  07 05 07 07              .byte $07,$05,$07,$07,$4F,$5F,$FE,$3C
005044  2  4F 5F FE 3C  
005048  2  00 00 00 80              .byte $00,$00,$00,$80,$80,$C0,$C0,$40
00504C  2  80 C0 C0 40  
005050  2               
005050  2  01 01 01 01              .byte $01,$01,$01,$01,$23,$2F,$7F,$1F
005054  2  23 2F 7F 1F  
005058  2  C0 40 C0 E0              .byte $C0,$40,$C0,$E0,$E0,$F0,$B0,$10
00505C  2  E0 F0 B0 10  
005060  2               
005060  2  00 00 00 00              .byte $00,$00,$00,$00,$21,$27,$7F,$0F
005064  2  21 27 7F 0F  
005068  2  70 50 70 F8              .byte $70,$50,$70,$F8,$F8,$FC,$EC,$C4
00506C  2  F8 FC EC C4  
005070  2               
005070  2  00 00 00 00              .byte $00,$00,$00,$00,$08,$08,$1F,$03
005074  2  08 08 1F 03  
005078  2  1C 14 1C 1E              .byte $1C,$14,$1C,$1E,$3E,$FF,$FB,$F1
00507C  2  3E FF FB F1  
005080  2               
005080  2               ;------------------------------------------------
005080  2               ; Level 5, 4x Top hor.guard toilet
005080  2               ;------------------------------------------------
005080  2               
005080  2  C0 C0 C0 C0  L7480:      .byte $C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0
005084  2  C0 C0 C0 C0  
005088  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00508C  2  00 00 00 00  
005090  2               
005090  2  30 30 30 30              .byte $30,$30,$30,$30,$30,$30,$33,$34
005094  2  30 30 33 34  
005098  2  00 00 00 00              .byte $00,$00,$00,$00,$20,$C0,$00,$00
00509C  2  20 C0 00 00  
0050A0  2               
0050A0  2  18 18 18 18              .byte $18,$18,$18,$18,$18,$18,$18,$19
0050A4  2  18 18 18 19  
0050A8  2  00 00 20 40              .byte $00,$00,$20,$40,$40,$80,$80,$00
0050AC  2  40 80 80 00  
0050B0  2               
0050B0  2  03 03 03 03              .byte $03,$03,$03,$03,$03,$03,$03,$03
0050B4  2  03 03 03 03  
0050B8  2  00 00 00 00              .byte $00,$00,$00,$00,$02,$0C,$30,$40
0050BC  2  02 0C 30 40  
0050C0  2               
0050C0  2               ;------------------------------------------------
0050C0  2               ; Level 5, 4x Bottom hor.guard toilet
0050C0  2               ;------------------------------------------------
0050C0  2               
0050C0  2  DF FF 1F 0F              .byte $DF,$FF,$1F,$0F,$77,$FF,$DF,$DF
0050C4  2  77 FF DF DF  
0050C8  2  C0 C0 C0 80              .byte $C0,$C0,$C0,$80,$80,$00,$00,$00
0050CC  2  80 00 00 00  
0050D0  2               
0050D0  2  37 3F 07 03              .byte $37,$3F,$07,$03,$1D,$3F,$37,$37
0050D4  2  1D 3F 37 37  
0050D8  2  F0 F0 F0 E0              .byte $F0,$F0,$F0,$E0,$E0,$C0,$C0,$C0
0050DC  2  E0 C0 C0 C0  
0050E0  2               
0050E0  2  1B 1F 03 01              .byte $1B,$1F,$03,$01,$0E,$1F,$1B,$1B
0050E4  2  0E 1F 1B 1B  
0050E8  2  FC FC FC F8              .byte $FC,$FC,$FC,$F8,$F8,$F0,$F0,$F0
0050EC  2  F8 F0 F0 F0  
0050F0  2               
0050F0  2  03 03 00 00              .byte $03,$03,$00,$00,$01,$03,$03,$03
0050F4  2  01 03 03 03  
0050F8  2  7F FF 7F 3E              .byte $7F,$FF,$7F,$3E,$DE,$FC,$7C,$7C
0050FC  2  DE FC 7C 7C  
005100  2               
005100  2               ;------------------------------------------------
005100  2               ; Level 6, 4x Top hor.guard pacman
005100  2               ;------------------------------------------------
005100  2               
005100  2  1F 7F 73 F3              .byte $1F,$7F,$73,$F3,$FE,$F8,$FE,$FF
005104  2  FE F8 FE FF  
005108  2  00 C0 E0 80              .byte $00,$C0,$E0,$80,$00,$00,$00,$80
00510C  2  00 00 00 80  
005110  2               
005110  2  07 1F 1E 3E              .byte $07,$1F,$1E,$3E,$3F,$3E,$3F,$3F
005114  2  3F 3E 3F 3F  
005118  2  C0 F0 70 78              .byte $C0,$F0,$70,$78,$F8,$00,$F8,$F8
00511C  2  F8 00 F8 F8  
005120  2               
005120  2  01 07 07 0F              .byte $01,$07,$07,$0F,$0F,$0F,$0F,$0F
005124  2  0F 0F 0F 0F  
005128  2  F0 FC 3E 38              .byte $F0,$FC,$3E,$38,$E0,$80,$E0,$F8
00512C  2  E0 80 E0 F8  
005130  2               
005130  2  00 01 01 03              .byte $00,$01,$01,$03,$03,$03,$03,$03
005134  2  03 03 03 03  
005138  2  7C CF CE FC              .byte $7C,$CF,$CE,$FC,$F0,$E0,$F0,$FC
00513C  2  F0 E0 F0 FC  
005140  2               
005140  2               ;------------------------------------------------
005140  2               ; Level 6, 4x Feet hor.guard pacman
005140  2               ;------------------------------------------------
005140  2               
005140  2  7F 7F 1F 0A              .byte $7F,$7F,$1F,$0A,$0A,$0A,$0A,$1F
005144  2  0A 0A 0A 1F  
005148  2  E0 C0 00 00              .byte $E0,$C0,$00,$00,$00,$00,$00,$00
00514C  2  00 00 00 00  
005150  2               
005150  2  1F 1F 07 02              .byte $1F,$1F,$07,$02,$02,$07,$00,$00
005154  2  02 07 00 00  
005158  2  F0 F0 C0 80              .byte $F0,$F0,$C0,$80,$80,$C0,$00,$00
00515C  2  80 C0 00 00  
005160  2               
005160  2  07 07 01 01              .byte $07,$07,$01,$01,$00,$00,$00,$00
005164  2  00 00 00 00  
005168  2  FE FC F0 F0              .byte $FE,$FC,$F0,$F0,$00,$00,$00,$00
00516C  2  00 00 00 00  
005170  2               
005170  2  01 01 00 00              .byte $01,$01,$00,$00,$00,$00,$00,$00
005174  2  00 00 00 00  
005178  2  FE FF 7C 28              .byte $FE,$FF,$7C,$28,$28,$7C,$00,$00
00517C  2  28 7C 00 00  
005180  2               
005180  2               ;------------------------------------------------
005180  2               ; Level 7, 4x Top hor.guard kangerou
005180  2               ;------------------------------------------------
005180  2               
005180  2  18 1C 0A 0F  L7580:      .byte $18,$1C,$0A,$0F,$0C,$1C,$1E,$1D
005184  2  0C 1C 1E 1D  
005188  2  00 00 80 80              .byte $00,$00,$80,$80,$00,$00,$00,$00
00518C  2  00 00 00 00  
005190  2               
005190  2  00 00 06 07              .byte $00,$00,$06,$07,$02,$03,$03,$07
005194  2  02 03 03 07  
005198  2  00 00 00 00              .byte $00,$00,$00,$00,$A0,$E0,$80,$00
00519C  2  A0 E0 80 00  
0051A0  2               
0051A0  2  00 00 00 00              .byte $00,$00,$00,$00,$01,$01,$00,$00
0051A4  2  01 01 00 00  
0051A8  2  00 00 00 00              .byte $00,$00,$00,$00,$80,$C0,$A8,$F8
0051AC  2  80 C0 A8 F8  
0051B0  2               
0051B0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0051B4  2  00 00 00 00  
0051B8  2  00 00 60 70              .byte $00,$00,$60,$70,$2A,$3E,$38,$70
0051BC  2  2A 3E 38 70  
0051C0  2               
0051C0  2               ;------------------------------------------------
0051C0  2               ; Level 7, 4x Feet hor.guard kangerou
0051C0  2               ;------------------------------------------------
0051C0  2               
0051C0  2  3C 3C 3E 3E              .byte $3C,$3C,$3E,$3E,$6E,$44,$42,$81
0051C4  2  6E 44 42 81  
0051C8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0051CC  2  00 00 00 00  
0051D0  2               
0051D0  2  07 07 0F 0F              .byte $07,$07,$0F,$0F,$0F,$1B,$33,$41
0051D4  2  0F 1B 33 41  
0051D8  2  80 40 00 80              .byte $80,$40,$00,$80,$80,$80,$00,$C0
0051DC  2  80 80 00 C0  
0051E0  2               
0051E0  2  00 01 01 01              .byte $00,$01,$01,$01,$03,$03,$07,$3E
0051E4  2  03 03 07 3E  
0051E8  2  E0 C0 E0 D0              .byte $E0,$C0,$E0,$D0,$C0,$E0,$E0,$F8
0051EC  2  C0 E0 E0 F8  
0051F0  2               
0051F0  2  00 00 00 00              .byte $00,$00,$00,$00,$01,$01,$03,$04
0051F4  2  01 01 03 04  
0051F8  2  78 74 F0 F8              .byte $78,$74,$F0,$F8,$F8,$B0,$0C,$00
0051FC  2  F8 B0 0C 00  
005200  2               
005200  2               ;------------------------------------------------
005200  2               ; Level 8, 4x Top hor.guard hot ball
005200  2               ;------------------------------------------------
005200  2               
005200  2  08 05 08 25              .byte $08,$05,$08,$25,$48,$21,$4C,$33
005204  2  48 21 4C 33  
005208  2  00 00 80 00              .byte $00,$00,$80,$00,$80,$00,$00,$00
00520C  2  80 00 00 00  
005210  2               
005210  2  02 21 12 21              .byte $02,$21,$12,$21,$12,$20,$03,$0C
005214  2  12 20 03 0C  
005218  2  00 20 40 20              .byte $00,$20,$40,$20,$40,$20,$00,$C0
00521C  2  40 20 00 C0  
005220  2               
005220  2  00 02 04 02              .byte $00,$02,$04,$02,$04,$02,$00,$03
005224  2  04 02 00 03  
005228  2  40 20 48 24              .byte $40,$20,$48,$24,$48,$04,$C8,$30
00522C  2  48 04 C8 30  
005230  2               
005230  2  00 01 02 01              .byte $00,$01,$02,$01,$02,$01,$02,$00
005234  2  02 01 02 00  
005238  2  44 22 44 22              .byte $44,$22,$44,$22,$44,$02,$30,$CC
00523C  2  44 02 30 CC  
005240  2               
005240  2               ;------------------------------------------------
005240  2               ; Level 8, 4x Bottom hor.guard hot ball
005240  2               ;------------------------------------------------
005240  2               
005240  2  44 44 88 84              .byte $44,$44,$88,$84,$48,$48,$33,$0C
005244  2  48 48 33 0C  
005248  2  80 80 40 40              .byte $80,$80,$40,$40,$80,$80,$00,$00
00524C  2  80 80 00 00  
005250  2               
005250  2  10 10 22 25              .byte $10,$10,$22,$25,$18,$10,$0C,$03
005254  2  18 10 0C 03  
005258  2  20 60 90 10              .byte $20,$60,$90,$10,$20,$20,$C0,$00
00525C  2  20 20 C0 00  
005260  2               
005260  2  04 04 0B 08              .byte $04,$04,$0B,$08,$04,$04,$03,$00
005264  2  04 04 03 00  
005268  2  08 08 44 B4              .byte $08,$08,$44,$B4,$08,$08,$30,$C0
00526C  2  08 08 30 C0  
005270  2               
005270  2  01 01 02 02              .byte $01,$01,$02,$02,$01,$01,$00,$00
005274  2  01 01 00 00  
005278  2  42 22 11 21              .byte $42,$22,$11,$21,$12,$0A,$CC,$30
00527C  2  12 0A CC 30  
005280  2               
005280  2               ;------------------------------------------------
005280  2               ; Level 9, 4x Top hor.guard pin car
005280  2               ;------------------------------------------------
005280  2               
005280  2  0C 0C 0C 0C  L7680:      .byte $0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C
005284  2  0C 0C 0C 0C  
005288  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00528C  2  00 00 00 00  
005290  2               
005290  2  03 03 03 03              .byte $03,$03,$03,$03,$03,$03,$03,$03
005294  2  03 03 03 03  
005298  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00529C  2  00 00 00 00  
0052A0  2               
0052A0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0052A4  2  00 00 00 00  
0052A8  2  C0 C0 C0 C0              .byte $C0,$C0,$C0,$C0,$C0,$C0,$C0,$C0
0052AC  2  C0 C0 C0 C0  
0052B0  2               
0052B0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0052B4  2  00 00 00 00  
0052B8  2  30 30 30 30              .byte $30,$30,$30,$30,$30,$30,$30,$30
0052BC  2  30 30 30 30  
0052C0  2               
0052C0  2               ;------------------------------------------------
0052C0  2               ; Level 9, 4x Bottom hor.guard pin car
0052C0  2               ;------------------------------------------------
0052C0  2               
0052C0  2  0C 0C FF 0C              .byte $0C,$0C,$FF,$0C,$61,$D2,$B3,$61
0052C4  2  61 D2 B3 61  
0052C8  2  00 00 C0 00              .byte $00,$00,$C0,$00,$80,$C0,$40,$80
0052CC  2  80 C0 40 80  
0052D0  2               
0052D0  2  03 03 3F 03              .byte $03,$03,$3F,$03,$18,$24,$3C,$18
0052D4  2  18 24 3C 18  
0052D8  2  00 00 F0 00              .byte $00,$00,$F0,$00,$60,$D0,$D0,$60
0052DC  2  60 D0 D0 60  
0052E0  2               
0052E0  2  00 00 0F 00              .byte $00,$00,$0F,$00,$06,$0B,$0D,$06
0052E4  2  06 0B 0D 06  
0052E8  2  C0 C0 FC C0              .byte $C0,$C0,$FC,$C0,$18,$34,$2C,$18
0052EC  2  18 34 2C 18  
0052F0  2               
0052F0  2  00 00 03 00              .byte $00,$00,$03,$00,$01,$02,$03,$01
0052F4  2  01 02 03 01  
0052F8  2  30 30 FF 30              .byte $30,$30,$FF,$30,$86,$4D,$CD,$86
0052FC  2  86 4D CD 86  
005300  2               
005300  2               ;------------------------------------------------
005300  2               ; Level 10, 4x Top hor.guard rabbit
005300  2               ;------------------------------------------------
005300  2               
005300  2  70 50 7C 34              .byte $70,$50,$7C,$34,$3E,$3E,$18,$3C
005304  2  3E 3E 18 3C  
005308  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00530C  2  00 00 00 00  
005310  2               
005310  2  1C 14 1F 0D              .byte $1C,$14,$1F,$0D,$0F,$0F,$06,$0F
005314  2  0F 0F 06 0F  
005318  2  00 00 00 00              .byte $00,$00,$00,$00,$80,$80,$00,$00
00531C  2  80 80 00 00  
005320  2               
005320  2  07 05 07 03              .byte $07,$05,$07,$03,$03,$03,$01,$03
005324  2  03 03 01 03  
005328  2  00 00 C0 40              .byte $00,$00,$C0,$40,$E0,$E0,$80,$C0
00532C  2  E0 E0 80 C0  
005330  2               
005330  2  01 01 01 00              .byte $01,$01,$01,$00,$00,$00,$00,$00
005334  2  00 00 00 00  
005338  2  C0 40 F0 D0              .byte $C0,$40,$F0,$D0,$F8,$F8,$60,$F0
00533C  2  F8 F8 60 F0  
005340  2               
005340  2               ;------------------------------------------------
005340  2               ; Level 10, 4x Top hor.guard rabbit
005340  2               ;------------------------------------------------
005340  2               
005340  2  7E 7E F7 FB              .byte $7E,$7E,$F7,$FB,$3C,$76,$6E,$77
005344  2  3C 76 6E 77  
005348  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00534C  2  00 00 00 00  
005350  2               
005350  2  1B 1B 1B 1D              .byte $1B,$1B,$1B,$1D,$0F,$06,$06,$07
005354  2  0F 06 06 07  
005358  2  80 80 80 80              .byte $80,$80,$80,$80,$00,$00,$00,$00
00535C  2  00 00 00 00  
005360  2               
005360  2  07 07 0F 0F              .byte $07,$07,$0F,$0F,$03,$07,$06,$07
005364  2  03 07 06 07  
005368  2  E0 E0 70 B0              .byte $E0,$E0,$70,$B0,$C0,$60,$E0,$70
00536C  2  C0 60 E0 70  
005370  2               
005370  2  01 03 07 06              .byte $01,$03,$07,$06,$00,$01,$03,$03
005374  2  00 01 03 03  
005378  2  F8 FC FE F6              .byte $F8,$FC,$FE,$F6,$F8,$DA,$0E,$84
00537C  2  F8 DA 0E 84  
005380  2               
005380  2               ;------------------------------------------------
005380  2               ; Level 11, 4x Top hor.guard bow car
005380  2               ;------------------------------------------------
005380  2               
005380  2  0C 16 2D 4C  L7780:      .byte $0C,$16,$2D,$4C,$8C,$8C,$4C,$2D
005384  2  8C 8C 4C 2D  
005388  2  00 00 00 80              .byte $00,$00,$00,$80,$40,$40,$80,$00
00538C  2  40 40 80 00  
005390  2               
005390  2  03 03 05 07              .byte $03,$03,$05,$07,$0B,$0B,$07,$05
005394  2  0B 0B 07 05  
005398  2  00 00 80 80              .byte $00,$00,$80,$80,$40,$40,$80,$80
00539C  2  40 40 80 80  
0053A0  2               
0053A0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0053A4  2  00 00 00 00  
0053A8  2  C0 C0 C0 C0              .byte $C0,$C0,$C0,$C0,$80,$80,$C0,$C0
0053AC  2  80 80 C0 C0  
0053B0  2               
0053B0  2  00 00 00 00              .byte $00,$00,$00,$00,$01,$01,$00,$00
0053B4  2  01 01 00 00  
0053B8  2  30 68 B4 B4              .byte $30,$68,$B4,$B4,$32,$32,$B4,$B4
0053BC  2  32 32 B4 B4  
0053C0  2               ;------------------------------------------------
0053C0  2               ; Level 11, 4x Bottom hor.guard bow car
0053C0  2               ;------------------------------------------------
0053C0  2               
0053C0  2  16 0C 37 4C              .byte $16,$0C,$37,$4C,$7F,$7F,$20,$17
0053C4  2  7F 7F 20 17  
0053C8  2  00 00 00 00              .byte $00,$00,$00,$00,$E0,$E0,$40,$00
0053CC  2  E0 E0 40 00  
0053D0  2               
0053D0  2  03 03 0E 03              .byte $03,$03,$0E,$03,$3F,$3F,$10,$07
0053D4  2  3F 3F 10 07  
0053D8  2  00 00 C0 20              .byte $00,$00,$C0,$20,$E0,$F0,$20,$40
0053DC  2  E0 F0 20 40  
0053E0  2               
0053E0  2  00 00 01 04              .byte $00,$00,$01,$04,$0F,$0F,$00,$03
0053E4  2  0F 0F 00 03  
0053E8  2  C0 C0 D0 C8              .byte $C0,$C0,$D0,$C8,$FC,$F8,$08,$B0
0053EC  2  FC F8 08 B0  
0053F0  2               
0053F0  2  00 00 00 01              .byte $00,$00,$00,$01,$03,$01,$01,$00
0053F4  2  03 01 01 00  
0053F8  2  68 30 B8 32              .byte $68,$30,$B8,$32,$FF,$FF,$00,$DC
0053FC  2  FF FF 00 DC  
005400  2               
005400  2               ;------------------------------------------------
005400  2               ; Level 12, 4x Top hor.guard stomper
005400  2               ;------------------------------------------------
005400  2               
005400  2  61 B2 B3 61              .byte $61,$B2,$B3,$61,$0C,$FF,$52,$12
005404  2  0C FF 52 12  
005408  2  80 40 C0 80              .byte $80,$40,$C0,$80,$00,$C0,$80,$00
00540C  2  00 C0 80 00  
005410  2               
005410  2  18 24 3C 18              .byte $18,$24,$3C,$18,$03,$3F,$14,$04
005414  2  03 3F 14 04  
005418  2  60 D0 D0 60              .byte $60,$D0,$D0,$60,$00,$F0,$A0,$80
00541C  2  00 F0 A0 80  
005420  2               
005420  2  06 0D 0D 06              .byte $06,$0D,$0D,$06,$00,$0F,$05,$01
005424  2  00 0F 05 01  
005428  2  18 3C 24 18              .byte $18,$3C,$24,$18,$C0,$FC,$28,$20
00542C  2  C0 FC 28 20  
005430  2               
005430  2  01 03 02 01              .byte $01,$03,$02,$01,$00,$03,$01,$00
005434  2  00 03 01 00  
005438  2  86 CB 4B 86              .byte $86,$CB,$4B,$86,$30,$FF,$4A,$48
00543C  2  30 FF 4A 48  
005440  2               
005440  2               ;------------------------------------------------
005440  2               ; Level 12, 4x Top hor.guard stomper
005440  2               ;------------------------------------------------
005440  2               
005440  2  12 1E 0C 0C              .byte $12,$1E,$0C,$0C,$0C,$0C,$1E,$3F
005444  2  0C 0C 1E 3F  
005448  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00544C  2  00 00 00 00  
005450  2               
005450  2  04 07 03 03              .byte $04,$07,$03,$03,$07,$0F,$00,$00
005454  2  07 0F 00 00  
005458  2  80 80 00 00              .byte $80,$80,$00,$00,$80,$C0,$00,$00
00545C  2  80 C0 00 00  
005460  2               
005460  2  01 01 01 03              .byte $01,$01,$01,$03,$00,$00,$00,$00
005464  2  00 00 00 00  
005468  2  20 E0 E0 F0              .byte $20,$E0,$E0,$F0,$00,$00,$00,$00
00546C  2  00 00 00 00  
005470  2               
005470  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
005474  2  00 00 00 00  
005478  2  48 78 30 30              .byte $48,$78,$30,$30,$78,$FC,$00,$00
00547C  2  78 FC 00 00  
005480  2               
005480  2               ;------------------------------------------------
005480  2               ; Level 15, 4x Top hor.guard postcard
005480  2               ;------------------------------------------------
005480  2               
005480  2  00 00 00 00  L7880:      .byte $00,$00,$00,$00,$00,$00,$00,$00
005484  2  00 00 00 00  
005488  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00548C  2  00 00 00 00  
005490  2               
005490  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$3F,$20
005494  2  00 00 3F 20  
005498  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$F0,$70
00549C  2  00 00 F0 70  
0054A0  2               
0054A0  2  00 00 00 00              .byte $00,$00,$00,$00,$0F,$08,$0F,$08
0054A4  2  0F 08 0F 08  
0054A8  2  00 00 00 00              .byte $00,$00,$00,$00,$FC,$1C,$FC,$24
0054AC  2  FC 1C FC 24  
0054B0  2               
0054B0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$03,$02
0054B4  2  00 00 03 02  
0054B8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$FF,$07
0054BC  2  00 00 FF 07  
0054C0  2               
0054C0  2               ;------------------------------------------------
0054C0  2               ; Level 15, 4x Bottom hor.guard postcard
0054C0  2               ;------------------------------------------------
0054C0  2               
0054C0  2  00 00 FF 81              .byte $00,$00,$FF,$81,$FF,$82,$FE,$FF
0054C4  2  FF 82 FE FF  
0054C8  2  00 00 C0 C0              .byte $00,$00,$C0,$C0,$C0,$40,$40,$C0
0054CC  2  C0 40 40 C0  
0054D0  2               
0054D0  2  3F 20 3F 3F              .byte $3F,$20,$3F,$3F,$00,$00,$00,$00
0054D4  2  00 00 00 00  
0054D8  2  F0 90 90 F0              .byte $F0,$90,$90,$F0,$00,$00,$00,$00
0054DC  2  00 00 00 00  
0054E0  2               
0054E0  2  0F 0F 00 00              .byte $0F,$0F,$00,$00,$00,$00,$00,$00
0054E4  2  00 00 00 00  
0054E8  2  E4 FC 00 00              .byte $E4,$FC,$00,$00,$00,$00,$00,$00
0054EC  2  00 00 00 00  
0054F0  2               
0054F0  2  03 02 03 03              .byte $03,$02,$03,$03,$00,$00,$00,$00
0054F4  2  00 00 00 00  
0054F8  2  FF 09 F9 FF              .byte $FF,$09,$F9,$FF,$00,$00,$00,$00
0054FC  2  00 00 00 00  
005500  2               
005500  2               ;------------------------------------------------
005500  2               ; Level 16, 4x Top hor.guard flagger
005500  2               ;------------------------------------------------
005500  2               
005500  2  00 08 14 2A              .byte $00,$08,$14,$2A,$55,$4A,$84,$80
005504  2  55 4A 84 80  
005508  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$C0
00550C  2  00 00 00 C0  
005510  2               
005510  2  2A 15 2A 15              .byte $2A,$15,$2A,$15,$20,$20,$20,$20
005514  2  20 20 20 20  
005518  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$18
00551C  2  00 00 00 18  
005520  2               
005520  2  00 10 28 54              .byte $00,$10,$28,$54,$AA,$51,$21,$01
005524  2  AA 51 21 01  
005528  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$0C
00552C  2  00 00 00 0C  
005530  2               
005530  2  15 2A 15 2A              .byte $15,$2A,$15,$2A,$00,$00,$00,$00
005534  2  00 00 00 00  
005538  2  40 80 40 80              .byte $40,$80,$40,$80,$40,$40,$40,$43
00553C  2  40 40 40 43  
005540  2               
005540  2               ;------------------------------------------------
005540  2               ; Level 16, 4x Bottom hor.guard flagger
005540  2               ;------------------------------------------------
005540  2               
005540  2  80 41 7F 3F              .byte $80,$41,$7F,$3F,$1F,$0F,$0A,$12
005544  2  1F 0F 0A 12  
005548  2  C0 00 80 C0              .byte $C0,$00,$80,$C0,$80,$00,$80,$40
00554C  2  80 00 80 40  
005550  2               
005550  2  20 10 1F 0F              .byte $20,$10,$1F,$0F,$07,$03,$02,$04
005554  2  07 03 02 04  
005558  2  18 20 F0 F8              .byte $18,$20,$F0,$F8,$F0,$E0,$90,$88
00555C  2  F0 E0 90 88  
005560  2               
005560  2  02 02 03 03              .byte $02,$02,$03,$03,$01,$00,$00,$01
005564  2  01 00 00 01  
005568  2  0C 10 F8 FC              .byte $0C,$10,$F8,$FC,$F8,$F0,$A8,$24
00556C  2  F8 F0 A8 24  
005570  2               
005570  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
005574  2  00 00 00 00  
005578  2  83 84 FE FF              .byte $83,$84,$FE,$FF,$7E,$3C,$2A,$49
00557C  2  7E 3C 2A 49  
005580  2               
005580  2               ;------------------------------------------------
005580  2               ; Level 17, 4x Top hor.guard longleg
005580  2               ;------------------------------------------------
005580  2               
005580  2  7E 99 FF DB  L7980:      .byte $7E,$99,$FF,$DB,$E7,$7E,$24,$24
005584  2  E7 7E 24 24  
005588  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
00558C  2  00 00 00 00  
005590  2               
005590  2  00 0F 13 1F              .byte $00,$0F,$13,$1F,$1B,$1C,$0F,$08
005594  2  1B 1C 0F 08  
005598  2  00 C0 20 E0              .byte $00,$C0,$20,$E0,$60,$E0,$C0,$40
00559C  2  60 E0 C0 40  
0055A0  2               
0055A0  2  00 00 00 07              .byte $00,$00,$00,$07,$09,$0F,$0D,$0E
0055A4  2  09 0F 0D 0E  
0055A8  2  00 00 00 E0              .byte $00,$00,$00,$E0,$90,$F0,$B0,$70
0055AC  2  90 F0 B0 70  
0055B0  2               
0055B0  2  00 01 02 03              .byte $00,$01,$02,$03,$03,$03,$01,$01
0055B4  2  03 03 01 01  
0055B8  2  00 F8 64 FC              .byte $00,$F8,$64,$FC,$6C,$9C,$F8,$08
0055BC  2  6C 9C F8 08  
0055C0  2               
0055C0  2               ;------------------------------------------------
0055C0  2               ; Level 17, 4x Bottom hor.guard longleg
0055C0  2               ;------------------------------------------------
0055C0  2               
0055C0  2  24 42 42 42              .byte $24,$42,$42,$42,$81,$81,$C3,$C3
0055C4  2  81 81 C3 C3  
0055C8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0055CC  2  00 00 00 00  
0055D0  2               
0055D0  2  10 10 20 20              .byte $10,$10,$20,$20,$40,$40,$60,$60
0055D4  2  40 40 60 60  
0055D8  2  20 20 10 10              .byte $20,$20,$10,$10,$08,$18,$18,$00
0055DC  2  08 18 18 00  
0055E0  2               
0055E0  2  07 08 10 20              .byte $07,$08,$10,$20,$40,$80,$C0,$C0
0055E4  2  40 80 C0 C0  
0055E8  2  E0 10 08 04              .byte $E0,$10,$08,$04,$02,$01,$03,$03
0055EC  2  02 01 03 03  
0055F0  2               
0055F0  2  02 02 04 04              .byte $02,$02,$04,$04,$08,$0C,$0C,$00
0055F4  2  08 0C 0C 00  
0055F8  2  04 04 02 02              .byte $04,$04,$02,$02,$01,$01,$03,$03
0055FC  2  01 01 03 03  
005600  2               
005600  2               ;------------------------------------------------
005600  2               ; Level 19, 4x Top hor.guard bulldozer
005600  2               ;------------------------------------------------
005600  2               
005600  2  06 0C 18 38              .byte $06,$0C,$18,$38,$74,$CA,$85,$03
005604  2  74 CA 85 03  
005608  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$40,$E0,$E0
00560C  2  00 40 E0 E0  
005610  2               
005610  2  01 03 06 0E              .byte $01,$03,$06,$0E,$1D,$32,$21,$00
005614  2  1D 32 21 00  
005618  2  80 00 00 00              .byte $80,$00,$00,$00,$00,$A0,$70,$F0
00561C  2  00 A0 70 F0  
005620  2               
005620  2  00 00 00 01              .byte $00,$00,$00,$01,$03,$06,$04,$00
005624  2  03 06 04 00  
005628  2  30 60 C0 C0              .byte $30,$60,$C0,$C0,$A0,$54,$2E,$1E
00562C  2  A0 54 2E 1E  
005630  2               
005630  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$01,$01,$00
005634  2  00 01 01 00  
005638  2  0C 18 30 60              .byte $0C,$18,$30,$60,$F0,$AA,$17,$0F
00563C  2  F0 AA 17 0F  
005640  2               
005640  2               ;------------------------------------------------
005640  2               ; Level 19, 4x Bottom hor.guard bulldozer
005640  2               ;------------------------------------------------
005640  2               
005640  2  07 CF DC FF              .byte $07,$CF,$DC,$FF,$E2,$C8,$D5,$08
005644  2  E2 C8 D5 08  
005648  2  20 60 20 E0              .byte $20,$60,$20,$E0,$00,$80,$40,$80
00564C  2  00 80 40 80  
005650  2               
005650  2  61 63 66 7F              .byte $61,$63,$66,$7F,$78,$62,$65,$02
005654  2  78 62 65 02  
005658  2  90 B0 10 F0              .byte $90,$B0,$10,$F0,$80,$20,$50,$20
00565C  2  80 20 50 20  
005660  2               
005660  2  30 30 30 3F              .byte $30,$30,$30,$3F,$3E,$30,$30,$00
005664  2  3E 30 30 00  
005668  2  32 76 C2 FE              .byte $32,$76,$C2,$FE,$10,$44,$AA,$44
00566C  2  10 44 AA 44  
005670  2               
005670  2  00 06 06 07              .byte $00,$06,$06,$07,$07,$06,$06,$00
005674  2  07 06 06 00  
005678  2  19 3B 41 FF              .byte $19,$3B,$41,$FF,$88,$22,$55,$22
00567C  2  88 22 55 22  
005680  2               
005680  2               ;------------------------------------------------
005680  2               ; Level 14, Hor.guard explosion1
005680  2               ;------------------------------------------------
005680  2               
005680  2  00 00 00 00  L7A80:      .byte $00,$00,$00,$00,$00,$22,$00,$00
005684  2  00 22 00 00  
005688  2  00 00 88 11              .byte $00,$00,$88,$11,$00,$00,$22,$00
00568C  2  00 00 22 00  
005690  2               
005690  2  00 00 00 00              .byte $00,$00,$00,$00,$88,$00,$00,$22
005694  2  88 00 00 22  
005698  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$44,$22
00569C  2  00 00 44 22  
0056A0  2               
0056A0  2  00 11 99 66              .byte $00,$11,$99,$66,$CC,$66,$00,$CC
0056A4  2  CC 66 00 CC  
0056A8  2  77 DD 77 44              .byte $77,$DD,$77,$44,$EE,$44,$99,$44
0056AC  2  EE 44 99 44  
0056B0  2               
0056B0  2  11 22 88 00              .byte $11,$22,$88,$00,$00,$00,$88,$44
0056B4  2  00 00 88 44  
0056B8  2  44 00 00 44              .byte $44,$00,$00,$44,$00,$22,$44,$88
0056BC  2  00 22 44 88  
0056C0  2               
0056C0  2               ;------------------------------------------------
0056C0  2               ; Level 14, Hor.guard explosion1
0056C0  2               ;------------------------------------------------
0056C0  2               
0056C0  2  00 00 00 00  L7AC0:      .byte $00,$00,$00,$00,$00,$00,$11,$00
0056C4  2  00 00 11 00  
0056C8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$22,$00,$00
0056CC  2  00 22 00 00  
0056D0  2               
0056D0  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$88
0056D4  2  00 00 00 88  
0056D8  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$00
0056DC  2  00 00 00 00  
0056E0  2               
0056E0  2  22 00 00 00              .byte $22,$00,$00,$00,$00,$11,$99,$66
0056E4  2  00 11 99 66  
0056E8  2  00 00 22 00              .byte $00,$00,$22,$00,$77,$DD,$77,$44
0056EC  2  77 DD 77 44  
0056F0  2               
0056F0  2  00 00 00 22              .byte $00,$00,$00,$22,$11,$22,$88,$EE
0056F4  2  11 22 88 EE  
0056F8  2  00 00 44 22              .byte $00,$00,$44,$22,$44,$00,$00,$00
0056FC  2  44 00 00 00  
005700  2               
005700  2               ;------------------------------------------------
005700  2               ; VERTICAL GUARDS
005700  2               ;------------------------------------------------
005700  2               
005700  2               ;------------------------------------------------
005700  2               ; Level 5, Vert.guard puppet with glasses
005700  2               ;------------------------------------------------
005700  2               
005700  2  00 03 0F 1F  L7B00:      .byte $00,$03,$0F,$1F,$31,$0E,$6F,$AE
005704  2  31 0E 6F AE  
005708  2  00 C0 F0 F8              .byte $00,$C0,$F0,$F8,$8C,$70,$F6,$75
00570C  2  8C 70 F6 75  
005710  2  B1 9F 9B 8C              .byte $B1,$9F,$9B,$8C,$47,$02,$0E,$00
005714  2  47 02 0E 00  
005718  2  8D F9 D9 31              .byte $8D,$F9,$D9,$31,$E2,$40,$70,$00
00571C  2  E2 40 70 00  
005720  2               
005720  2               ;------------------------------------------------
005720  2               ; End, pillar
005720  2               ;------------------------------------------------
005720  2               
005720  2  FF 72 8A AA  L7B20:      .byte $FF,$72,$8A,$AA,$4A,$12,$22,$2A
005724  2  4A 12 22 2A  
005728  2  FF 4E 51 55              .byte $FF,$4E,$51,$55,$52,$48,$44,$54
00572C  2  52 48 44 54  
005730  2  2A 2A 2A 2A              .byte $2A,$2A,$2A,$2A,$2A,$2A,$2A,$FF
005734  2  2A 2A 2A FF  
005738  2  54 54 54 54              .byte $54,$54,$54,$54,$54,$54,$54,$FF
00573C  2  54 54 54 FF  
005740  2               
005740  2               ;------------------------------------------------
005740  2               ; Level 14, Vert.guard explosion2
005740  2               ;------------------------------------------------
005740  2               
005740  2  00 00 08 01              .byte $00,$00,$08,$01,$00,$20,$02,$00
005744  2  00 20 02 00  
005748  2  00 00 00 00              .byte $00,$00,$00,$00,$80,$00,$04,$22
00574C  2  80 00 04 22  
005750  2  07 1D 97 64              .byte $07,$1D,$97,$64,$CE,$64,$09,$C4
005754  2  CE 64 09 C4  
005758  2  14 20 80 04              .byte $14,$20,$80,$04,$00,$02,$84,$48
00575C  2  00 02 84 48  
005760  2               
005760  2               ;------------------------------------------------
005760  2               ; Level 14, Vert.guard explosion3
005760  2               ;------------------------------------------------
005760  2               
005760  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$02,$10,$00
005764  2  00 02 10 00  
005768  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$00,$80
00576C  2  00 00 00 80  
005770  2  20 00 02 00              .byte $20,$00,$02,$00,$07,$1D,$97,$64
005774  2  07 1D 97 64  
005778  2  00 00 04 22              .byte $00,$00,$04,$22,$14,$20,$80,$E0
00577C  2  14 20 80 E0  
005780  2               
005780  2               ;------------------------------------------------
005780  2               ; Level 8+12, Monster
005780  2               ;------------------------------------------------
005780  2               
005780  2  13 1D 0F 06  L7B80:      .byte $13,$1D,$0F,$06,$05,$02,$07,$0F
005784  2  05 02 07 0F  
005788  2  C8 B8 F0 60              .byte $C8,$B8,$F0,$60,$A0,$40,$E0,$F0
00578C  2  A0 40 E0 F0  
005790  2  1F 33 63 46              .byte $1F,$33,$63,$46,$2C,$06,$02,$0E
005794  2  2C 06 02 0E  
005798  2  F8 CC C6 62              .byte $F8,$CC,$C6,$62,$34,$60,$40,$70
00579C  2  34 60 40 70  
0057A0  2               
0057A0  2  0B 0D 0F 06              .byte $0B,$0D,$0F,$06,$05,$02,$03,$1F
0057A4  2  05 02 03 1F  
0057A8  2  D0 B0 F0 60              .byte $D0,$B0,$F0,$60,$A0,$40,$C0,$F8
0057AC  2  A0 40 C0 F8  
0057B0  2  7F E7 83 C7              .byte $7F,$E7,$83,$C7,$06,$0C,$08,$38
0057B4  2  06 0C 08 38  
0057B8  2  FE E7 C1 E3              .byte $FE,$E7,$C1,$E3,$60,$30,$10,$1C
0057BC  2  60 30 10 1C  
0057C0  2               
0057C0  2  1C 06 0C 06              .byte $1C,$06,$0C,$06,$63,$27,$67,$37
0057C4  2  63 27 67 37  
0057C8  2  38 60 30 60              .byte $38,$60,$30,$60,$C6,$E4,$E6,$EC
0057CC  2  C6 E4 E6 EC  
0057D0  2  1F 0F 02 05              .byte $1F,$0F,$02,$05,$06,$0F,$0D,$0B
0057D4  2  06 0F 0D 0B  
0057D8  2  F8 F0 40 A0              .byte $F8,$F0,$40,$A0,$60,$F0,$B0,$D0
0057DC  2  60 F0 B0 D0  
0057E0  2               
0057E0  2  70 18 0C 06              .byte $70,$18,$0C,$06,$63,$27,$67,$37
0057E4  2  63 27 67 37  
0057E8  2  0E 18 30 60              .byte $0E,$18,$30,$60,$C6,$E4,$E6,$EC
0057EC  2  C6 E4 E6 EC  
0057F0  2  1F 0F 02 05              .byte $1F,$0F,$02,$05,$16,$0F,$0D,$07
0057F4  2  16 0F 0D 07  
0057F8  2  F8 F0 40 A0              .byte $F8,$F0,$40,$A0,$68,$F0,$B0,$E0
0057FC  2  68 F0 B0 E0  
005800  2               
005800  2               ;------------------------------------------------
005800  2               ; Level 11, Ringing telephone
005800  2               ;------------------------------------------------
005800  2               
005800  2               L7C00:
005800  2  00 00 3F 63              .byte $00,$00,$3F,$63,$EB,$E8,$0F,$07
005804  2  EB E8 0F 07  
005808  2  00 00 FC C6              .byte $00,$00,$FC,$C6,$D7,$17,$F0,$E0
00580C  2  D7 17 F0 E0  
005810  2  0C 0B 1B 1C              .byte $0C,$0B,$1B,$1C,$3F,$3F,$3F,$00
005814  2  3F 3F 3F 00  
005818  2  30 D0 D8 38              .byte $30,$D0,$D8,$38,$FC,$FC,$FC,$00
00581C  2  FC FC FC 00  
005820  2               
005820  2  3C 7F 7F 63              .byte $3C,$7F,$7F,$63,$08,$08,$0F,$07
005824  2  08 08 0F 07  
005828  2  00 C0 F8 C6              .byte $00,$C0,$F8,$C6,$57,$17,$F7,$E0
00582C  2  57 17 F7 E0  
005830  2  0C 0B 1B 1C              .byte $0C,$0B,$1B,$1C,$3F,$3F,$3F,$00
005834  2  3F 3F 3F 00  
005838  2  30 D0 D8 38              .byte $30,$D0,$D8,$38,$FC,$FC,$FC,$00
00583C  2  FC FC FC 00  
005840  2               
005840  2  00 00 3F 63              .byte $00,$00,$3F,$63,$E8,$E8,$0F,$07
005844  2  E8 E8 0F 07  
005848  2  00 00 FC C6              .byte $00,$00,$FC,$C6,$17,$17,$F0,$E0
00584C  2  17 17 F0 E0  
005850  2  0C 0B 1B 1C              .byte $0C,$0B,$1B,$1C,$3F,$3F,$3F,$00
005854  2  3F 3F 3F 00  
005858  2  30 D0 D8 38              .byte $30,$D0,$D8,$38,$FC,$FC,$FC,$00
00585C  2  FC FC FC 00  
005860  2               
005860  2  00 03 1F 63              .byte $00,$03,$1F,$63,$E8,$E8,$EF,$07
005864  2  E8 E8 EF 07  
005868  2  3C FE FE C6              .byte $3C,$FE,$FE,$C6,$10,$10,$F0,$E0
00586C  2  10 10 F0 E0  
005870  2  0C 0B 1B 1C              .byte $0C,$0B,$1B,$1C,$3F,$3F,$3F,$00
005874  2  3F 3F 3F 00  
005878  2  30 D0 D8 38              .byte $30,$D0,$D8,$38,$FC,$FC,$FC,$00
00587C  2  FC FC FC 00  
005880  2               
005880  2               ;------------------------------------------------
005880  2               ; Level 13, Vert.guard - Blinking eye
005880  2               ;------------------------------------------------
005880  2               
005880  2  00 00 00 03              .byte $00,$00,$00,$03,$0C,$10,$20,$40
005884  2  0C 10 20 40  
005888  2  00 00 00 C0              .byte $00,$00,$00,$C0,$30,$08,$04,$02
00588C  2  30 08 04 02  
005890  2  80 40 20 D0              .byte $80,$40,$20,$D0,$2C,$4B,$12,$02
005894  2  2C 4B 12 02  
005898  2  01 02 04 0B              .byte $01,$02,$04,$0B,$34,$D2,$48,$40
00589C  2  34 D2 48 40  
0058A0  2               
0058A0  2  00 00 00 03              .byte $00,$00,$00,$03,$0C,$10,$20,$40
0058A4  2  0C 10 20 40  
0058A8  2  00 00 00 C0              .byte $00,$00,$00,$C0,$30,$08,$04,$02
0058AC  2  30 08 04 02  
0058B0  2  F8 57 2B 12              .byte $F8,$57,$2B,$12,$0C,$03,$00,$00
0058B4  2  0C 03 00 00  
0058B8  2  1F EA D4 48              .byte $1F,$EA,$D4,$48,$30,$C0,$00,$00
0058BC  2  30 C0 00 00  
0058C0  2               
0058C0  2  04 04 12 4B              .byte $04,$04,$12,$4B,$2C,$93,$A7,$46
0058C4  2  2C 93 A7 46  
0058C8  2  20 20 48 D2              .byte $20,$20,$48,$D2,$34,$C9,$E5,$62
0058CC  2  34 C9 E5 62  
0058D0  2  86 47 23 10              .byte $86,$47,$23,$10,$0C,$03,$00,$00
0058D4  2  0C 03 00 00  
0058D8  2  61 E2 C4 08              .byte $61,$E2,$C4,$08,$30,$C0,$00,$00
0058DC  2  30 C0 00 00  
0058E0  2               
0058E0  2  00 00 00 03              .byte $00,$00,$00,$03,$0C,$12,$2A,$5F
0058E4  2  0C 12 2A 5F  
0058E8  2  00 00 00 C0              .byte $00,$00,$00,$C0,$30,$48,$54,$FA
0058EC  2  30 48 54 FA  
0058F0  2  F6 47 23 10              .byte $F6,$47,$23,$10,$0C,$03,$00,$00
0058F4  2  0C 03 00 00  
0058F8  2  7F E2 C4 08              .byte $7F,$E2,$C4,$08,$30,$C0,$00,$00
0058FC  2  30 C0 00 00  
005900  2               
005900  2               ;------------------------------------------------
005900  2               ; Level 14, Falling platform
005900  2               ;------------------------------------------------
005900  2               
005900  2               L7D00:
005900  2  03 FF AB FF              .byte $03,$FF,$AB,$FF,$13,$29,$15,$0B
005904  2  13 29 15 0B  
005908  2  C0 FF D5 FF              .byte $C0,$FF,$D5,$FF,$C8,$94,$A8,$D0
00590C  2  C8 94 A8 D0  
005910  2  05 03 03 05              .byte $05,$03,$03,$05,$0A,$14,$28,$10
005914  2  0A 14 28 10  
005918  2  A0 C0 C0 A0              .byte $A0,$C0,$C0,$A0,$50,$28,$14,$08
00591C  2  50 28 14 08  
005920  2               
005920  2  00 00 03 FF              .byte $00,$00,$03,$FF,$AB,$FF,$13,$29
005924  2  AB FF 13 29  
005928  2  00 00 C0 FF              .byte $00,$00,$C0,$FF,$D5,$FF,$C8,$94
00592C  2  D5 FF C8 94  
005930  2  15 0B 05 03              .byte $15,$0B,$05,$03,$23,$45,$0A,$14
005934  2  23 45 0A 14  
005938  2  A8 D0 A0 C0              .byte $A8,$D0,$A0,$C0,$C0,$A8,$54,$28
00593C  2  C0 A8 54 28  
005940  2               
005940  2  00 00 00 00              .byte $00,$00,$00,$00,$03,$FF,$AB,$FF
005944  2  03 FF AB FF  
005948  2  00 00 00 07              .byte $00,$00,$00,$07,$FD,$D7,$F8,$C0
00594C  2  FD D7 F8 C0  
005950  2  03 01 15 4B              .byte $03,$01,$15,$4B,$05,$23,$0B,$25
005954  2  05 23 0B 25  
005958  2  C0 80 A4 D2              .byte $C0,$80,$A4,$D2,$A4,$C2,$D0,$A8
00595C  2  A4 C2 D0 A8  
005960  2               
005960  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$03,$1F
005964  2  00 00 03 1F  
005968  2  00 00 00 00              .byte $00,$00,$00,$00,$00,$00,$C7,$FD
00596C  2  00 00 C7 FD  
005970  2  CB A7 E3 01              .byte $CB,$A7,$E3,$01,$25,$4B,$05,$53
005974  2  25 4B 05 53  
005978  2  D7 F8 C0 82              .byte $D7,$F8,$C0,$82,$A5,$D0,$A2,$C4
00597C  2  A5 D0 A2 C4  
005980  2               
005980  2               ;------------------------------------------------
005980  2               ; Level 15, Package with rotating top
005980  2               ;------------------------------------------------
005980  2               
005980  2  61 9F 9F 61              .byte $61,$9F,$9F,$61,$07,$FF,$80,$AA
005984  2  07 FF 80 AA  
005988  2  86 F9 F9 86              .byte $86,$F9,$F9,$86,$E0,$FF,$01,$A9
00598C  2  E0 FF 01 A9  
005990  2  9F B5 90 B5              .byte $9F,$B5,$90,$B5,$9F,$AA,$80,$FF
005994  2  9F AA 80 FF  
005998  2  FD 59 0D 59              .byte $FD,$59,$0D,$59,$FD,$A9,$01,$FF
00599C  2  FD A9 01 FF  
0059A0  2               
0059A0  2  1D 22 22 1D              .byte $1D,$22,$22,$1D,$03,$FF,$D5,$BF
0059A4  2  03 FF D5 BF  
0059A8  2  B8 E4 E4 B8              .byte $B8,$E4,$E4,$B8,$C0,$FF,$55,$FF
0059AC  2  C0 FF 55 FF  
0059B0  2  EA B0 E5 B0              .byte $EA,$B0,$E5,$B0,$EA,$BF,$D5,$FF
0059B4  2  EA BF D5 FF  
0059B8  2  AD 07 4D 07              .byte $AD,$07,$4D,$07,$AD,$FF,$55,$FF
0059BC  2  AD FF 55 FF  
0059C0  2               
0059C0  2  07 08 08 07              .byte $07,$08,$08,$07,$03,$FF,$FF,$D5
0059C4  2  03 FF FF D5  
0059C8  2  E0 10 10 E0              .byte $E0,$10,$10,$E0,$C0,$FF,$FF,$57
0059CC  2  C0 FF FF 57  
0059D0  2  E0 CA E7 CA              .byte $E0,$CA,$E7,$CA,$E0,$D5,$FF,$FF
0059D4  2  E0 D5 FF FF  
0059D8  2  03 A7 F3 27              .byte $03,$A7,$F3,$27,$03,$57,$FF,$FF
0059DC  2  03 57 FF FF  
0059E0  2               
0059E0  2  1D 2F 2F 1D              .byte $1D,$2F,$2F,$1D,$03,$FF,$AA,$C0
0059E4  2  03 FF AA C0  
0059E8  2  B8 44 44 B8              .byte $B8,$44,$44,$B8,$C0,$FF,$AB,$01
0059EC  2  C0 FF AB 01  
0059F0  2  95 CF 98 CF              .byte $95,$CF,$98,$CF,$95,$C0,$AA,$FF
0059F4  2  95 C0 AA FF  
0059F8  2  53 F9 13 F9              .byte $53,$F9,$13,$F9,$53,$01,$AB,$FF
0059FC  2  53 01 AB FF  
005A00  2               
005A00  2               ;------------------------------------------------
005A00  2               ; Level 17, Rotating triangle
005A00  2               ;------------------------------------------------
005A00  2               L7E00:
005A00  2  00 00 00 03              .byte $00,$00,$00,$03,$0C,$31,$C6,$99
005A04  2  0C 31 C6 99  
005A08  2  0E 33 C5 19              .byte $0E,$33,$C5,$19,$65,$9D,$7D,$9D
005A0C  2  65 9D 7D 9D  
005A10  2  C6 F1 7C 1F              .byte $C6,$F1,$7C,$1F,$07,$01,$00,$00
005A14  2  07 01 00 00  
005A18  2  1D 9D 7D 1D              .byte $1D,$9D,$7D,$1D,$DD,$FD,$7F,$1E
005A1C  2  DD FD 7F 1E  
005A20  2               
005A20  2  03 07 06 0E              .byte $03,$07,$06,$0E,$0C,$1D,$19,$3A
005A24  2  0C 1D 19 3A  
005A28  2  C0 40 20 A0              .byte $C0,$40,$20,$A0,$90,$50,$48,$28
005A2C  2  90 50 48 28  
005A30  2  32 74 64 FF              .byte $32,$74,$64,$FF,$FF,$FF,$40,$7F
005A34  2  FF FF 40 7F  
005A38  2  24 14 12 EA              .byte $24,$14,$12,$EA,$E9,$F5,$03,$FE
005A3C  2  E9 F5 03 FE  
005A40  2               
005A40  2  38 FE BF BB              .byte $38,$FE,$BF,$BB,$B8,$BE,$B9,$B8
005A44  2  B8 BE B9 B8  
005A48  2  00 00 80 E0              .byte $00,$00,$80,$E0,$F8,$3E,$8F,$63
005A4C  2  F8 3E 8F 63  
005A50  2  B9 BE B9 A6              .byte $B9,$BE,$B9,$A6,$98,$A3,$CC,$70
005A54  2  98 A3 CC 70  
005A58  2  99 63 8C 30              .byte $99,$63,$8C,$30,$C0,$00,$00,$00
005A5C  2  C0 00 00 00  
005A60  2               
005A60  2  7F 80 AF 97              .byte $7F,$80,$AF,$97,$57,$4A,$2A,$25
005A64  2  57 4A 2A 25  
005A68  2  FE 02 FF FF              .byte $FE,$02,$FF,$FF,$FF,$26,$2E,$4C
005A6C  2  FF 26 2E 4C  
005A70  2  15 12 0A 09              .byte $15,$12,$0A,$09,$05,$04,$02,$03
005A74  2  05 04 02 03  
005A78  2  5C 98 B8 30              .byte $5C,$98,$B8,$30,$70,$60,$E0,$C0
005A7C  2  70 60 E0 C0  
005A80  2               
005A80  2               ;------------------------------------------------
005A80  2               ; Plot beams in level 19
005A80  2               ;------------------------------------------------
005A80  2               
005A80  2  A5 80        L7E80:      lda L0080              ; A5 80
005A82  2  C9 13                    cmp #$13               ; C9 13
005A84  2  F0 01                    beq L7E87              ; F0 01
005A86  2  60                       rts                    ; 60
005A87  2               
005A87  2  EE E9 5A     L7E87:      inc L7EED              ; EE ED 7E
005A8A  2  20 B4 47                 jsr L6B5E              ; 20 5E 6B
005A8D  2  AD E9 5A                 lda L7EED              ; AD ED 7E
005A90  2  29 10                    and #$10               ; 29 10
005A92  2  C9 00                    cmp #$00               ; C9 00
005A94  2  F0 43                    beq L7EDD              ; F0 47
005A96  2  A9 00                    lda #$00               ; A9 00
005A98  2  85 3F                    sta L003F              ; 85 3F
005A9A  2  AD E9 5A                 lda L7EED              ; AD ED 7E
005A9D  2  29 01                    and #$01               ; 29 01
005A9F  2  C9 00                    cmp #$00               ; C9 00
005AA1  2  F0 04                    beq L7EA7              ; F0 04
005AA3  2  A9 02                    lda #$02               ; A9 02
005AA5  2  85 3F                    sta L003F              ; 85 3F
005AA7  2               
005AA7  2               L7EA7:
005AA7  2               ;            lda #$11               ; Set texcolour=2
005AA7  2               ;            jsr OSWRCH             ; 20 EE FF
005AA7  2               ;            lda #$02               ; A9 02
005AA7  2               ;            jsr OSWRCH             ; 20 EE FF
005AA7  2               
005AA7  2  A2 00                    ldx #$00               ; A2 00
005AA9  2  BD EA 5A     L7EB3:      lda L7EEE,X            ; Read XPOS beam
005AAC  2  38           	sec
005AAD  2  E9 04        	sbc #4
005AAF  2  8D 18 03     	sta XPOS
005AB2  2               
005AB2  2  E8           	inx
005AB3  2  BD EA 5A     	lda L7EEE,x		; Read YPOS beam
005AB6  2  8D 19 03     	sta YPOS
005AB9  2               
005AB9  2  A9 E0        L7EC5:      lda #$E0               ; A9 E0
005ABB  2  18                       clc                    ; 18
005ABC  2  65 3F                    adc L003F              ; 65 3F
005ABE  2  A8                       tay                    ; A8
005ABF  2  C8                       iny                    ; C8
005AC0  2  20 10 3A                 jsr OSWRCH             ; Print character
005AC3  2               
005AC3  2  A9 0A                    lda #$0A               ; Move cursor down 1 pos
005AC5  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
005AC8  2               
005AC8  2  A9 08                    lda #$08               ; Move cursor back 1 pos
005ACA  2  20 10 3A                 jsr OSWRCH             ; 20 EE FF
005ACD  2               
005ACD  2  98                       tya                    ; 98
005ACE  2  20 10 3A                 jsr OSWRCH             ; Print character
005AD1  2  E8           	inx
005AD2  2  E0 08        	cpx #8
005AD4  2  D0 D3        	bne L7EB3
005AD6  2  4C B4 47                 jmp L6B5E              ; 4C BA 7E
005AD9  2               
005AD9  2  A9 04        L7EDD:      lda #$04               ; A9 04
005ADB  2  85 3F                    sta L003F              ; 85 3F
005ADD  2  AD E9 5A                 lda L7EED              ; AD ED 7E
005AE0  2  29 0F                    and #$0F               ; 29 0F
005AE2  2  C9 00                    cmp #$00               ; C9 00
005AE4  2  F0 C1                    beq L7EA7              ; F0 BD
005AE6  2  4C B4 47                 jmp L6B5E              ; 4C 5E 6B
005AE9  2               
005AE9  2  EA           L7EED:      .byte $EA
005AEA  2               
005AEA  2  0F 05        L7EEE:      .byte $0F,$05
005AEC  2  0F 09                    .byte $0F,$09
005AEE  2  18 05                    .byte $18,$05
005AF0  2  18 09                    .byte $18,$09
005AF2  2               
005AF2  2  10 C0                    .byte $10,$C0
005AF4  2               
005AF4  2  FF FF FF FF  	.repeat ((*/128+1)*128)-*
005AF8  2  FF FF FF FF  
005AFC  2  FF FF FF FF  
005B00  2               	   .byte $ff
005B00  2               	.endrep
005B00  2               
005B00  2               ;------------------------------------------------
005B00  2               ; Must be aligned at $80 from L7E80!!!!!
005B00  2               ;------------------------------------------------
005B00  2               
005B00  2               L7F00:
005B00  2  0A 16 01 39              .byte $0A,$16,$01,$39,$65,$03
005B04  2  65 03        
005B06  2  FF 87 20 68              .byte $FF,$87,$20,$68,$50,$62,$CE,$D0
005B0A  2  50 62 CE D0  
005B0E  2  EE F1 77 C7              .byte $EE,$F1,$77,$C7,$8B,$32,$64,$49
005B12  2  8B 32 64 49  
005B16  2  12 36 F4 FF              .byte $12,$36,$F4,$FF,$F1,$AC,$A6,$A2
005B1A  2  F1 AC A6 A2  
005B1E  2  90 98 00 05              .byte $90,$98,$00,$05,$03,$31,$1D,$03
005B22  2  03 31 1D 03  
005B26  2  3F 03 00 20              .byte $3F,$03,$00,$20,$40,$74,$CC,$D0
005B2A  2  40 74 CC D0  
005B2E  2  EC F4 3F 67              .byte $EC,$F4,$3F,$67,$0B,$32,$24,$0B
005B32  2  0B 32 24 0B  
005B36  2  1A 00 E0 FC              .byte $1A,$00,$E0,$FC,$F2,$AC,$A4,$90
005B3A  2  F2 AC A4 90  
005B3E  2  D8 C0 00 00              .byte $D8,$C0,$00,$00,$02,$09,$05,$03
005B42  2  02 09 05 03  
005B46  2  1F 07 00 00              .byte $1F,$07,$00,$00,$20,$60,$C8,$D0
005B4A  2  20 60 C8 D0  
005B4E  2  E0 F8 1F 17              .byte $E0,$F8,$1F,$17,$0F,$12,$05,$0A
005B52  2  0F 12 05 0A  
005B56  2  00 00 E0 F8              .byte $00,$00,$E0,$F8,$F0,$A8,$A0,$B0
005B5A  2  F0 A8 A0 B0  
005B5E  2  C0 00 00 05              .byte $C0,$00,$00,$05,$03,$31,$1D,$03
005B62  2  03 31 1D 03  
005B66  2  3F 03 00 20              .byte $3F,$03,$00,$20,$40,$74,$CC,$D0
005B6A  2  40 74 CC D0  
005B6E  2  EC F4 3F 67              .byte $EC,$F4,$3F,$67,$0B,$32,$24,$0B
005B72  2  0B 32 24 0B  
005B76  2  1A 00 E0 FC              .byte $1A,$00,$E0,$FC,$F2,$AC,$A4,$90
005B7A  2  F2 AC A4 90  
005B7E  2  D8 C0 00 0C              .byte $D8,$C0,$00,$0C,$02,$01,$07,$6F
005B82  2  02 01 07 6F  
005B86  2  19 0A 00 30              .byte $19,$0A,$00,$30,$40,$80,$E0,$F6
005B8A  2  40 80 E0 F6  
005B8E  2  98 50 F9 1E              .byte $98,$50,$F9,$1E,$1C,$7C,$9B,$0C
005B92  2  1C 7C 9B 0C  
005B96  2  07 01 9F 78              .byte $07,$01,$9F,$78,$38,$2E,$D9,$B0
005B9A  2  38 2E D9 B0  
005B9E  2  E0 80 00 00              .byte $E0,$80,$00,$00,$0E,$41,$27,$1F
005BA2  2  0E 41 27 1F  
005BA6  2  89 7A 00 00              .byte $89,$7A,$00,$00,$70,$82,$E4,$F8
005BAA  2  70 82 E4 F8  
005BAE  2  91 5E 19 1E              .byte $91,$5E,$19,$1E,$FC,$14,$1F,$0C
005BB2  2  FC 14 1F 0C  
005BB6  2  07 01 98 78              .byte $07,$01,$98,$78,$3F,$28,$D8,$70
005BBA  2  3F 28 D8 70  
005BBE  2  E0 80 00 0C              .byte $E0,$80,$00,$0C,$02,$01,$07,$4F
005BC2  2  02 01 07 4F  
005BC6  2  3F 0E 00 30              .byte $3F,$0E,$00,$30,$40,$80,$E0,$F2
005BCA  2  40 80 E0 F2  
005BCE  2  FC 70 D9 3E              .byte $FC,$70,$D9,$3E,$1C,$74,$9B,$0E
005BD2  2  1C 74 9B 0E  
005BD6  2  07 01 9B 7C              .byte $07,$01,$9B,$7C,$38,$2E,$FB,$30
005BDA  2  38 2E FB 30  
005BDE  2  E0 80 04 04              .byte $E0,$80,$04,$04,$02,$01,$07,$0F
005BE2  2  02 01 07 0F  
005BE6  2  7F 0A 20 20              .byte $7F,$0A,$20,$20,$40,$80,$E0,$F0
005BEA  2  40 80 E0 F0  
005BEE  2  FE 51 09 7E              .byte $FE,$51,$09,$7E,$9C,$14,$3B,$4D
005BF2  2  9C 14 3B 4D  
005BF6  2  47 01 98 7E              .byte $47,$01,$98,$7E,$39,$28,$DC,$32
005BFA  2  39 28 DC 32  
005BFE  2  E2 80                    .byte $E2,$80
005C00  2               
005C00  1               eind_asm:
005C00  1               
